{"version":3,"sources":["modules/CloudNaturalLanguageAPI.js","modules/PixaBayAPI.js","modules/creationTool.jsx","App.js","reportWebVitals.js","index.js"],"names":["CloudNaturalLanguageAPI","text","body","options","JSON","stringify","fetch","Response","json","Result","console","log","PixaBayAPI","words","language","nbResults","queryString","forEach","word","idx","length","url","encodeURIComponent","images","results","image","push","previewURL","urls","thumb","id","tags","description","hits","CreationTool","useState","setText","searchQueryWords","setSearchQueryWords","setImages","imagesToDisplay","setImagesToDisplay","setLanguage","thumbBgImage","setThumbBgImage","thumbText","setThumbText","thumbTemplate","setThumbTemplate","costumSearchTags","setCustomSearchTags","selectedSearchTags","setSelectedSearchTags","setSearchData","setIsLoading","isThumbCreated","setIsThumbCreated","getCorrespondingImages","lang","then","newImagesToDisplay","splice","customTags","getCustomTags","catch","Err","imagesFound","searchedWords","importantTags","importantTagsArr","split","tag","Object","entries","key","value","confidence","includes","nbImages","searchPixaBayData","newSearchWords","searchWords","promises","wordExistInTags","result","total","totalHits","Promise","all","pixaBayDatas","filter","tagSearchData","wordSearched","findIndex","reason","handleChangeThumbTemplate","e","template","preventDefault","target","className","htmlFor","onChange","persist","name","type","required","placeholder","onClick","analyzeEntities","entities","wordsArray","index","salience","searched","toUpperCase","considered","filteredWordsArray","map","event","handleChangeQueryWords","newSelectedSearchTags","selectedTag","match","handleChangeSelectedSearchTags","fullHDURL","handleChangeThumbBgImage","src","alt","style","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.798472a1.chunk.js","sourcesContent":["// MAIN COMPONENT ---------------------------------------------------------------------------------\n\nclass CloudNaturalLanguageAPI {\n\n  static async analyzeEntities(text) {\n\n    let body = {\n      \"document\":{\n        \"type\": \"PLAIN_TEXT\",\n        \"content\": text\n      },\n      \"encodingType\":\"UTF8\"\n    }\n\n    let options = {\n        'method': 'post', \n        'mode': 'cors', \n        'cache': 'no-cache',\n        'redirect': 'follow',\n        'referrerPolicy': 'no-referrer',\n        'headers': { 'Content-Type': 'application/json' },\n        'body': JSON.stringify(body)\n      };\n\n      try {\n\n      // Fetch data and get JSON result.\n      let Response = await fetch(\"https://language.googleapis.com/v1/documents:analyzeEntities?key=AIzaSyB_G4h_ieTxS9887-cy9uQhFG25nDN-0iU\",options);\n\n      let Result = await Response.json();\n\n      if(!Result) return null\n\n      if(Result) {\n        return Result;\n      }\n\n      return null;\n\n    } catch(Err) {\n      console.log('analyzeEntities',Err);\n      return [];\n    }\n\n  }\n\n}\n\n\n// EXPORT -----------------------------------------------------------------------------------------\n\nexport default CloudNaturalLanguageAPI;\n","// MAIN COMPONENT ---------------------------------------------------------------------------------\n\nclass PixaBayAPI {\n\n  static async getCorrespondingImages(words,language, nbResults = 200) {\n\n    // PixaBay API https://pixabay.com/api/\n    // KEY: 9038251-9744656b30d3839e753549b56\n    //https://pixabay.com/api/?key=9038251-9744656b30d3839e753549b56&q=yellow+flowers&image_type=photo&lang=fr\n\n    let queryString = \"\";\n\n    words.forEach((word, idx) => {\n        queryString += word + (idx + 1 < words.length ? \"+\": \"\");\n    });\n\n    /* let options = {\n      'method': 'get', // *GET, POST, PUT, DELETE, etc.\n      'mode': 'cors', // no-cors, *cors, same-origin\n      'cache': 'no-cache',\n      'headers': { 'Content-Type': 'application/json' },\n    }; */\n\n    let url = `https://pixabay.com/api/?key=9038251-9744656b30d3839e753549b56&q=${encodeURIComponent(queryString)}&image_type=photo&lang=${language}&safesearch=true&per_page=${nbResults}`;\n\n    if (words.length === 0) {\n      url = `https://pixabay.com/api/?key=9038251-9744656b30d3839e753549b56&category=backgrounds&image_type=photo&lang=${language}&safesearch=true&per_page=${nbResults}`;\n    }\n\n    try {\n\n      // Fetch data and get JSON result.\n      let Response = await fetch(url); //&orientation=horizontal\n\n      let Result = await Response.json();\n\n      if(!Result) return null\n\n      if(Result) {\n        return Result;\n      }\n\n      return null;\n\n    } catch(Err) {\n      console.log('getCorrespondingImages',Err);\n      return [];\n    }\n\n  }\n\n  static async getCorrespondingImagesUnsplash(words,language, nbResults = 20) {\n\n      let queryString = \"\";\n\n      words.forEach((word, idx) => {\n          queryString += word + (idx + 1 < words.length ? \" \": \"\");\n      });\n\n      try {\n\n      // Fetch data and get JSON result.\n      let Response = await fetch(`https://api.unsplash.com/search/photos?client_id=lW928RQmwlCfkfVVMqcBwDHtkJpwVR_r58ovOPAhN8Q&per_page=50&query=${encodeURIComponent(queryString)}&lang=${language}`);\n\n      let Result = await Response.json();\n\n      if(!Result) return null\n\n      if(Result) {\n\n        let images = [];\n\n        Result.results.forEach(image => {\n          images.push({ previewURL: image.urls.thumb, id: image.id, tags: image.description });\n        });\n\n        Result.hits = images;\n\n        return Result;\n      }\n\n      return null;\n\n    } catch(Err) {\n      console.log('analyzeEntitiesUnsplash',Err);\n      return [];\n    }\n\n  }\n\n}\n\n\n// EXPORT -----------------------------------------------------------------------------------------\n\nexport default PixaBayAPI;\n","import result from 'autoprefixer/data/prefixes';\nimport React, { useState } from 'react'\nimport CloudNaturalLanguageAPI from './CloudNaturalLanguageAPI';\nimport PixaBayAPI from './PixaBayAPI'\n\n//const defaultText = \"La beauté est dans le regard de celui qui regarde.\";\n\n//const defaultText = \"A sign of the return of the beautiful season, this unique exhibition in the country, which showcases the poetry of the shape of the egg, is coming to Quebec for the first time. A dozen emerging and established artists take over the spaces of the mall, giving the public free rein to their imagination.\"\n\nconst defaultText = \"\";\n\nconst CreationTool = () => {\n  const [text, setText] = useState(defaultText);\n  const [searchQueryWords, setSearchQueryWords] = useState([]);\n  const [images, setImages] = useState([]);\n  const [imagesToDisplay, setImagesToDisplay] = useState([]);\n  const [language, setLanguage] = useState(\"fr\");\n  const [pixaBayData, setPixaBayData] = useState({});\n  const [thumbBgImage, setThumbBgImage] = useState(\"\");\n  const [thumbText, setThumbText] = useState(\"\");\n  const [thumbTemplate, setThumbTemplate] = useState(1);\n\n  const [costumSearchTags, setCustomSearchTags] = useState([]);\n  const [selectedSearchTags, setSelectedSearchTags] = useState([]);\n  const [searchData, setSearchData] = useState({});\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isThumbCreated, setIsThumbCreated] = useState(false);\n\n  const analyzeEntities = (text) => {\n    CloudNaturalLanguageAPI.analyzeEntities(text).then((Result)=>{\n      console.log('analyzeEntities', Result);\n\n      setIsLoading(false);\n\n      if (Result.entities.length > 0) {\n\n        let wordsArray = [];\n        let searchWords = [];\n\n        setLanguage(Result.language);\n\n        Result.entities.forEach((words, index) => {\n\n          let word = {};\n\n          word.considered = false;\n          word.text = words.name;\n          word.salience = words.salience;\n          word.searched = false;\n\n          if (words.salience >= 0.07 && wordsArray.findIndex(word => word.text.toUpperCase() === words.name.toUpperCase()) == -1) {\n            word.considered = true;\n\n            if (((index > 0 && words.salience >= 0.50) || index < 1)) {\n              searchWords.push(words.name);\n              word.searched = true;\n            }\n          }\n\n          wordsArray.push(word);\n        });\n\n        let filteredWordsArray = wordsArray.filter(word => word.considered);\n\n        /* setSearchQueryWords(filteredWordsArray); */\n\n        getCorrespondingImages(searchWords, Result.language);\n\n        searchPixaBayData(filteredWordsArray, Result.language, filteredWordsArray, searchWords);\n\n        console.log('wordsArray', wordsArray);\n      }\n\n      setIsLoading(false);\n\n    }).catch((Err)=>{\n      console.log('Saving API errors', Err);\n      setIsLoading(false);\n    });\n  }\n\n  const getCorrespondingImages = (words, lang) => {\n    PixaBayAPI.getCorrespondingImages(words, lang).then((Result)=>{\n      console.log('getCorrespondingImages', Result);\n\n      setImages(Result.hits);\n\n      let newImagesToDisplay = [...Result.hits];\n\n      setImagesToDisplay(newImagesToDisplay.splice(0,16))\n\n      setIsLoading(false);\n\n      let customTags = getCustomTags(Result.hits, words);\n      setCustomSearchTags(customTags);\n\n    }).catch((Err)=>{\n      console.log('Saving API errors', Err);\n      setIsLoading(false);\n    });\n\n    /* PixaBayAPI.getCorrespondingImagesUnsplash(words, lang).then((Result)=>{\n      console.log('getCorrespondingImagesUnsplash', Result);\n\n      setImages(Result.hits);\n\n      setIsLoading(false);\n\n    }).catch((Err)=>{\n      console.log('getCorrespondingImagesUnsplash', Err);\n      setIsLoading(false);\n    }); */\n  }\n\n  const getCustomTags = (imagesFound, searchedWords) => {\n    let importantTags = {};\n\n    let importantTagsArr = [];\n\n    let wordExistInTags = false;\n\n    imagesFound.forEach(image => {\n      image.tags.split(\", \").forEach(tag => {\n        if (!importantTags[tag]) {\n          importantTags[tag] = 1;\n        } else {\n          importantTags[tag] += 1;\n        }\n      });\n    });\n\n    const objectArray = Object.entries(importantTags);\n\n    objectArray.forEach(([key, value]) => {\n      let confidence = value / imagesFound.length * 100;\n\n      if (/* confidence >= POURC_OF_CONFIDENCE */ value >= 7) {\n        if (!searchedWords.includes(key)) {\n          importantTagsArr.push({ word: key, confidence: confidence, nbImages: value });\n        }\n      }\n    });\n\n    return importantTagsArr;\n  }\n\n  const searchPixaBayData = (words, lang, newSearchWords, searchWords) => {\n\n    let promises = [];\n\n    const NB_TAG_OCCURENCE = 7;\n    const NB_IMAGE_TO_ANALIZE = 100;\n    const POURC_OF_CONFIDENCE = 0.5;\n\n    words.forEach(word => {\n      promises.push(PixaBayAPI.getCorrespondingImages([word.text], lang, NB_IMAGE_TO_ANALIZE).then((Result)=>{\n\n        let importantTags = {};\n\n        let importantTagsArr = [];\n\n        let wordExistInTags = false;\n\n        Result.hits.forEach(image => {\n          image.tags.split(\", \").forEach(tag => {\n            if (!importantTags[tag]) {\n              importantTags[tag] = 1;\n            } else {\n              importantTags[tag] += 1;\n            }\n          });\n        });\n\n        const objectArray = Object.entries(importantTags);\n\n        objectArray.forEach(([key, value]) => {\n          let confidence = value / Result.hits.length * 100;\n\n          if (/* confidence >= POURC_OF_CONFIDENCE */ value >= NB_TAG_OCCURENCE) {\n            if (word.text === key) {\n              wordExistInTags = true;\n            }\n            importantTagsArr.push({ word: key, confidence: confidence, nbImages: value });\n          }\n        });\n\n        return { word: word.text, tags: importantTagsArr, result: Result.hits, total: Result.total, totalHits: Result.totalHits, wordExistInTags: wordExistInTags };\n      }).catch((Err)=>{\n        console.log('Saving API errors', Err);\n      }));\n    });\n\n    Promise.all(promises).then(pixaBayDatas => {\n      console.log(pixaBayDatas);\n\n      let filteredWordsToRemoveArray = pixaBayDatas.filter(word => !word.wordExistInTags);\n\n      let tagSearchData = {};\n\n      let oneTagSearched = false;\n\n      pixaBayDatas.forEach(wordSearched => {\n        if (/* !wordSearched.wordExistInTags ||  */wordSearched.result.length === 0) {\n          newSearchWords.splice(newSearchWords.findIndex(word => word.text === wordSearched.word),1);\n        }\n        tagSearchData[wordSearched.word] = wordSearched.tags;\n      });\n\n      setSearchQueryWords(newSearchWords);\n\n      setSearchData(tagSearchData);\n\n      /* if (searchWords.length === 1) {\n        setCustomSearchTags(tagSearchData[searchWords[0]]);\n      } else {\n        setCustomSearchTags([]);\n      } */\n\n    }).catch(reason => {\n      console.log(reason)\n    });\n    \n  }\n\n  const handleCreateThumb = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsThumbCreated(true);\n    analyzeEntities(text);\n    setThumbText(text);\n    setThumbBgImage(\"\");\n  }\n\n  const handleChange = (e) => {\n    const { target } = e;\n    const { value } = target;\n    e.persist();\n\n    setText(value);\n  };\n\n  const handleChangeQueryWords = (e, index) => {\n    e.preventDefault();\n    const { target } = e;\n    /* const { value } = target; */\n\n    let wordsArray = [...searchQueryWords];\n\n    let searchWords = [];\n\n    wordsArray[index].searched = !wordsArray[index].searched;\n\n    setSearchQueryWords(wordsArray);\n\n    wordsArray.forEach(word => {\n      if (word.searched) {\n        searchWords.push(word.text);\n      }\n    });\n\n    /* if (searchWords.length === 1) {\n      setCustomSearchTags(searchData[searchWords[0]]);\n    } else {\n      setCustomSearchTags([]);\n    } */\n\n    PixaBayAPI.getCorrespondingImages(searchWords, language).then((Result)=>{\n\n      console.log('getCorrespondingImages', Result);\n\n      setImages(Result.hits);\n      let newImagesToDisplay = [...Result.hits];\n      setImagesToDisplay(newImagesToDisplay.splice(0, 16))\n      setIsLoading(false);\n      let customTags = getCustomTags(Result, searchWords);\n      setCustomSearchTags(customTags);\n    }).catch((Err)=>{\n      console.log('Saving API errors', Err);\n      setIsLoading(false);\n    });\n\n    /* PixaBayAPI.getCorrespondingImagesUnsplash(searchWords, language).then((Result)=>{\n\n      console.log('getCorrespondingImagesUnsplash', Result);\n\n      setImages(Result.hits);\n      setIsLoading(false);\n    }).catch((Err)=>{\n      console.log('Saving API errors', Err);\n      setIsLoading(false);\n    }); */\n  };\n\n  const handleChangeSelectedSearchTags = (e, index) => {\n    e.preventDefault();\n    const { target } = e;\n\n    let newSelectedSearchTags = [...selectedSearchTags];\n\n    let selectedTag = costumSearchTags[index].word;\n\n    if (newSelectedSearchTags.includes(selectedTag)) {\n      newSelectedSearchTags.splice(newSelectedSearchTags.findIndex(tag => tag === selectedTag),1);\n    } else {\n      newSelectedSearchTags.push(selectedTag);\n    }\n\n    setSelectedSearchTags(newSelectedSearchTags);\n\n    let newImagesToDisplay = [...images];\n\n    if (newSelectedSearchTags.length > 0) {\n      newImagesToDisplay = newImagesToDisplay.filter(image => {\n        let match = false;\n        newSelectedSearchTags.forEach(tag => {\n          if (!match) {\n            match = image.tags.includes(tag);\n          }\n        })\n\n        return match;\n      });\n\n      if (newImagesToDisplay.length > 0) {\n        if (newImagesToDisplay.length > 16) {\n          newImagesToDisplay = newImagesToDisplay.splice(0,16);\n        }\n        setImagesToDisplay(newImagesToDisplay);\n      }\n    } else {\n      if (newImagesToDisplay.length > 16) {\n        newImagesToDisplay = newImagesToDisplay.splice(0,16);\n      }\n      setImagesToDisplay(newImagesToDisplay);\n    }\n    \n  };\n\n\n  const handleChangeThumbBgImage = (e, index) => {\n    e.preventDefault();\n    const { target } = e;\n\n    setThumbBgImage(imagesToDisplay[index].fullHDURL);\n  };\n\n  const handleChangeThumbTemplate = (e, template) => {\n    e.preventDefault();\n    const { target } = e;\n\n    setThumbTemplate(template);\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-start justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8 space-x-40\">\n      <div className=\"max-w-2xl w-full space-y-4\">\n        <div className=\"flex flex-col items-center justify-center\">\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Créez votre message</h2>\n          <p className=\"mt-2 text-center text-sm text-indigo-500 w-1/2 align-middle\">\n            Écrivez le texte qui s'affichera dans la vignette\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center space-y-4 w-full\">\n          <div className=\"flex flex-row item-center justify-center align-middle space-x-2 bg-gray-100 p-2 rounded-md w-full\">\n            <div className=\"w-full\">\n              <label htmlFor=\"texte\" className=\"sr-only\">\n                Texte\n              </label>\n              <textarea\n                id=\"texte\"\n                onChange={handleChange}\n                value={text}\n                name=\"texte\"\n                type=\"textarea\"\n                required\n                className=\"appearance-none rounded-none relative block w-full h-28 max-h-28 px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Texte\"\n              />\n            </div>\n          </div>\n          <div onClick={handleCreateThumb} className=\"rounded-md font-medium py-1 px-3 text-center text-sm text-white shadow align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500 flex items-center justify-center\">\n              Créer la vignette!\n          </div>\n        </div>\n        {searchQueryWords.length > 0 ? <>\n\n        <div className=\"flex flex-row flex-wrap item-center justify-start align-middle bg-gray-100 p-1 rounded-md w-full\">\n          {searchQueryWords.map((word, index) => {\n            return <div onClick={event => handleChangeQueryWords(event, index)} value={index} key={index + '-words'} className={\"rounded-md m-1 py-0.5 px-2 text-center text-xs flex items-center justify-center align-middle cursor-pointer border-2 \" + \n            (word.searched ? \"text-white bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500\" : \"text-gray-500 bg-gray-300 hover:bg-gray-200 border-gray-300 hover:border-gray-200\")}>\n              {word.text}\n            </div>\n          })}\n        </div>\n\n        {costumSearchTags.length > 0 && <div className=\"flex flex-row flex-wrap item-center justify-start align-middle bg-gray-100 p-1 rounded-md w-full\">\n          {costumSearchTags.map((tag, index) => {\n            return <div onClick={event => handleChangeSelectedSearchTags(event, index)} value={index} key={index + '-words'} className={\"rounded-md m-1 py-0.5 px-2 text-center text-xs flex items-center justify-center align-middle cursor-pointer border-2 \" + \n            (selectedSearchTags.includes(tag.word) ? \"text-white bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500\" : \"text-gray-500 bg-gray-300 hover:bg-gray-200 border-gray-300 hover:border-gray-200\")}>\n              {tag.word}\n            </div>\n          })}\n        </div>}\n\n        <div className=\"container grid grid-cols-4 gap-2 mx-auto\">\n          {imagesToDisplay.map((image, index) => {\n            return <div key={image.id} id={image.id} onClick={event => handleChangeThumbBgImage(event, index)} className=\"w-40 aspect-w-16 aspect-h-9 cursor-pointer\"><img key={`${image.id}-img`} src={image.previewURL} alt={image.tags} className=\"rounded-sm shadow w-full h-full object-center object-cover\" /></div>\n          })}\n        </div></> : <></>}\n      </div>\n      <div className=\"max-w-2xl w-full space-y-8\">\n        {isThumbCreated && <><div className=\"w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md shadow overflow-hidden\">\n          {thumbBgImage !== \"\" && <div className=\"overflow-hidden\"><img src={thumbBgImage} alt=\"ThumbBg\" className=\"zoom-in-zoom-out rounded-md w-full h-full object-center object-cover\" /></div>}\n          \n          {thumbTemplate === 1 && <><div className=\"bg-gray-800 bg-opacity-5\"></div>\n          <div className=\"flex flex-row w-full h-full\">\n            <div className=\"h-full w-2/5 justify-center items-start align-middle flex flex-row bg-gray-50 bg-opacity-90\">\n              <div className=\"py-12 px-8 text-gray-900 align-middle font-medium text-2xl\">{thumbText}</div>\n            </div>\n            <div className=\"h-full flex-auto rounded-t-md\"></div>\n            <div className=\"h-full flex-auto rounded-b-md\"></div>\n          </div></>}\n\n          {thumbTemplate === 2 && <><div className=\"bg-gray-800 bg-opacity-5\"></div>\n          <div className=\"flex flex-col w-full h-full shadow justify-center items-center\">\n              <div className=\"w-full flex-auto rounded-t-md\"></div>\n              <div className=\"mx-32 justify-center items-center text-center align-middle flex flex-row bg-gray-50 bg-opacity-90 rounded-sm\">\n                <div className=\"py-6 px-6 text-center text-gray-900 align-middle font-medium text-2xl\">{thumbText}</div>\n              </div>\n              <div className=\"w-full flex-auto rounded-b-md\"></div>\n            </div></>}\n\n          {thumbTemplate === 3 && <><div className=\"bg-gray-800 bg-opacity-5\"></div>\n          <div className=\"flex flex-row-reverse w-full h-full\">\n            <div className=\"h-full w-2/5 justify-center items-start align-middle flex flex-row bg-gray-50 bg-opacity-90\">\n              <div className=\"py-12 px-8 text-gray-900 align-middle font-medium text-2xl\">{thumbText}</div>\n            </div>\n            <div className=\"h-full flex-auto rounded-t-md\"></div>\n            <div className=\"h-full flex-auto rounded-b-md\"></div>\n          </div></>}\n\n          {thumbTemplate === 4 && <><div className=\"bg-gray-800 bg-opacity-30\"></div>\n          <div className=\"flex flex-col w-full h-full\">\n          <div className=\"w-full justify-center items-center align-middle flex flex-row\">\n              <div className=\"py-10 w-full px-10 text-white align-middle font-medium text-3xl\" style={{\"textShadow\": \"0 0px 5px rgba(0,0,0,0.28), 0 0px 15px rgba(0,0,0,0.25)\"}}>{thumbText}</div>\n            </div>\n            <div className=\"w-full flex-auto rounded-t-md\"></div>\n            <div className=\"w-full flex-auto rounded-b-md\"></div>\n          </div></>}\n\n          {thumbTemplate === 5 && <><div className=\"bg-gray-800 bg-opacity-30\"></div>\n          <div className=\"flex flex-col w-full h-full\">\n            <div className=\"w-full flex-auto rounded-t-md\"></div>\n            <div className=\"w-full flex-auto justify-center items-center text-center align-middle flex flex-row\">\n              <div className=\"py-8 px-24 text-center text-white align-middle font-medium text-3xl\" style={{\"textShadow\": \"0 0px 5px rgba(0,0,0,0.28), 0 0px 15px rgba(0,0,0,0.25)\"}}>{thumbText}</div>\n            </div>\n            <div className=\"w-full flex-auto rounded-b-md\"></div>\n          </div></>}\n\n          {thumbTemplate === 6 && <><div className=\"bg-gray-800 bg-opacity-30\"></div>\n          <div className=\"flex flex-col-reverse w-full h-full\">\n          <div className=\"w-full justify-center items-center align-middle flex flex-row\">\n              <div className=\"py-10 w-full px-10 text-white align-middle font-medium text-3xl\" style={{\"textShadow\": \"0 0px 5px rgba(0,0,0,0.28), 0 0px 15px rgba(0,0,0,0.25)\"}}>{thumbText}</div>\n            </div>\n            <div className=\"w-full flex-auto rounded-t-md\"></div>\n            <div className=\"w-full flex-auto rounded-b-md\"></div>\n          </div></>}\n\n        </div>\n        <div className=\"container grid grid-cols-3 gap-2 mx-auto\">\n          <div onClick={event => handleChangeThumbTemplate(event, 1)} className={`w-full aspect-w-16 aspect-h-9 rounded-md overflow-hidden border-2 ${thumbTemplate === 1 ? `border-indigo-600 shadow ${thumbBgImage !== \"\" ? 'bg-indigo-600' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-indigo-400 hover:${thumbBgImage !== \"\" ? 'bg-indigo-400' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"rounded-md w-full h-full object-center object-cover\" />}\n            <div className=\"bg-gray-900 bg-opacity-5\"></div>\n            <div className=\"flex flex-row w-full h-full shadow\">\n              <div className=\"h-full w-2/5 items-start align-middle flex flex-row bg-gray-50 bg-opacity-90\">\n                <div className=\"py-2 px-4 text-gray-900 align-middle font-medium text-xs\">_________ ________ _______ _________ ____</div>\n              </div>\n              <div className=\"h-full flex-auto rounded-t-md\"></div>\n              <div className=\"h-full flex-auto rounded-b-md\"></div>\n            </div>\n          </div>\n          <div onClick={event => handleChangeThumbTemplate(event, 2)} className={`w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md overflow-hidden border-2 ${thumbTemplate === 2 ? `border-indigo-600 shadow ${thumbBgImage !== \"\" ? 'bg-indigo-600' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-indigo-400 hover:${thumbBgImage !== \"\" ? 'bg-indigo-400' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"rounded-md w-full h-full object-center object-cover\" />}\n            <div className=\"bg-gray-900 bg-opacity-5\"></div>\n            <div className=\"flex flex-col w-full h-full shadow justify-center items-center\">\n              <div className=\"w-full rounded-t-md\"></div>\n              <div className=\"w-3/5 justify-center items-center text-center align-middle flex flex-row bg-gray-50 bg-opacity-90 rounded-sm\">\n                <div className=\"pt-1 pb-3 px-4 text-center text-gray-900 align-middle font-medium text-xs\">_________________ ______________ ____</div>\n              </div>\n              <div className=\"w-full rounded-b-md\"></div>\n            </div>\n          </div>\n          <div onClick={event => handleChangeThumbTemplate(event, 3)} className={`w-full aspect-w-16 aspect-h-9 rounded-md overflow-hidden border-2 ${thumbTemplate === 3 ? `border-indigo-600 shadow ${thumbBgImage !== \"\" ? 'bg-indigo-600' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-indigo-400 hover:${thumbBgImage !== \"\" ? 'bg-indigo-400' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"rounded-md w-full h-full object-center object-cover\" />}\n            <div className=\"bg-gray-900 bg-opacity-5\"></div>\n            <div className=\"flex flex-row-reverse w-full h-full shadow\">\n              <div className=\"h-full w-2/5 items-start align-middle flex flex-row bg-gray-50 bg-opacity-90\">\n                <div className=\"py-2 px-4 text-gray-900 align-middle font-medium text-xs\">_________ ________ _______ _________ ____</div>\n              </div>\n              <div className=\"h-full flex-auto rounded-t-md\"></div>\n              <div className=\"h-full flex-auto rounded-b-md\"></div>\n            </div>\n          </div>\n          <div onClick={event => handleChangeThumbTemplate(event, 4)} className={`w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md overflow-hidden border-2 ${thumbTemplate === 4 ? `border-indigo-600 shadow ${thumbBgImage !== \"\" ? 'bg-indigo-600' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-indigo-400 hover:${thumbBgImage !== \"\" ? 'bg-indigo-400' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"rounded-md w-full h-full object-center object-cover\" />}\n            <div className=\"bg-gray-900 bg-opacity-30\"></div>\n            <div className=\"flex flex-col w-full h-full shadow\">\n              <div className=\"w-full justify-center items-center align-middle flex flex-row\">\n                <div className=\"py-2 px-4 text-white align-middle font-medium text-xs\" style={{\"textShadow\": \"0 0px 5px rgba(0,0,0,0.28), 0 0px 15px rgba(0,0,0,0.25)\"}}>_________________________ ___________________</div>\n              </div>\n              <div className=\"w-full flex-auto rounded-t-md\"></div>\n              <div className=\"w-full flex-auto rounded-b-md\"></div>\n            </div>\n          </div>\n          <div onClick={event => handleChangeThumbTemplate(event, 5)} className={`w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md overflow-hidden border-2 ${thumbTemplate === 5 ? `border-indigo-600 shadow ${thumbBgImage !== \"\" ? 'bg-indigo-600' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-indigo-400 hover:${thumbBgImage !== \"\" ? 'bg-indigo-400' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"rounded-md w-full h-full object-center object-cover\" />}\n            <div className=\"bg-gray-900 bg-opacity-30\"></div>\n            <div className=\"flex flex-col w-full h-full shadow\">\n              <div className=\"w-full flex-auto rounded-t-md\"></div>\n              <div className=\"w-full flex-auto justify-center items-center text-center align-middle flex flex-row\">\n                <div className=\"py-2 px-24 text-center text-white align-middle font-medium text-xs\" style={{\"textShadow\": \"0 0px 5px rgba(0,0,0,0.28), 0 0px 15px rgba(0,0,0,0.25)\"}}>_________________ ______________ _______________ ____</div>\n              </div>\n              <div className=\"w-full flex-auto rounded-b-md\"></div>\n            </div>\n          </div>\n          <div onClick={event => handleChangeThumbTemplate(event, 6)} className={`w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md overflow-hidden border-2 ${thumbTemplate === 6 ? `border-indigo-600 shadow ${thumbBgImage !== \"\" ? 'bg-indigo-600' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-indigo-400 hover:${thumbBgImage !== \"\" ? 'bg-indigo-400' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"rounded-md w-full h-full object-center object-cover\" />}\n            <div className=\"bg-gray-900 bg-opacity-30\"></div>\n            <div className=\"flex flex-col-reverse w-full h-full shadow\">\n              <div className=\"w-full justify-center items-center align-middle flex flex-row\">\n                <div className=\"py-4 px-4 text-white align-middle font-medium text-xs\" style={{\"textShadow\": \"0 0px 5px rgba(0,0,0,0.28), 0 0px 15px rgba(0,0,0,0.25)\"}}>_________________________ ___________________</div>\n              </div>\n              <div className=\"w-full flex-auto rounded-t-md\"></div>\n              <div className=\"w-full flex-auto rounded-b-md\"></div>\n            </div>\n          </div>\n        </div></>}\n      </div>\n    </div>\n  )\n}\n\nexport default CreationTool","import './App.css';\nimport { CreationTool } from './modules';\n\nfunction App() {\n  return (\n    <>\n    <CreationTool/>\n    {/* <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-2xl w-full space-y-8\"> */}\n        \n        {/* ÉTAPE 1 */}\n        {/* <div>\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Que voulez vous créer ?</h2>\n        </div>\n        <div className=\"flex flex-row item-center justify-center space-x-6\">\n          <div className=\"rounded-md py-4 px-6 shadow w-48 align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600\">\n            <p className=\"font-medium text-white text-center align-middle\">\n              Vignette\n            </p>\n          </div>\n\n          <div className=\"rounded-md py-4 px-6 shadow w-48 align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600\">\n            <p className=\"font-medium text-white text-center\">\n              Liste de lecture\n            </p>\n          </div>\n        </div> */}\n\n        {/* ÉTAPE 2 */}\n\n        {/* VIGNETTE */}\n        {/* <div className=\"flex flex-col items-center justify-center\">\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Contenu de la vignette</h2>\n          <p className=\"mt-2 text-center text-sm text-indigo-500\">\n            Ajoutez un titre, des textes, images, etc\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center space-y-4\">\n          <div className=\"flex flex-row item-center justify-center align-middle space-x-2 bg-gray-100 p-2 rounded-md\">\n            <div className=\"self-center font-medium text-center text-lg text-gray-500 mx-1\">\n              Titre\n            </div>\n            <div>\n              <label htmlFor=\"prenom\" className=\"sr-only\">\n                Titre\n              </label>\n              <input\n                id=\"prenom\"\n                name=\"prenom\"\n                type=\"text\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"\"\n              />\n            </div>\n          </div>\n          <div className=\"rounded-full font-medium text-center text-2xl text-white shadow align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500 h-8 w-8 flex items-center justify-center\">\n              +\n          </div>\n        </div> */}\n\n        {/* LISTE DE LECTURE */}\n        {/* <div className=\"flex flex-col items-center justify-center\">\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Contenu de la liste de lecture</h2>\n          <p className=\"mt-2 text-center text-sm text-indigo-500 w-1/2\">\n            Choisissez un format de contenu prédéfini ou créez en un adapter à vos besoins\n          </p>\n        </div>\n        <div className=\"flex flex-row item-center justify-center space-x-6 \">\n          <div className=\"rounded-md py-4 px-6 shadow w-48 align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500\">\n            <p className=\"font-medium text-white text-center align-middle\">\n              Anniversaires\n            </p>\n          </div>\n\n          <div className=\"rounded-md py-4 px-6 text-gray-400 hover:text-indigo-500 border-dashed border-gray-400 hover:border-indigo-500 border-2 shadow w-48 align-middle cursor-pointer\">\n            <p className=\"font-medium text-center\">\n              Créer +\n            </p>\n          </div>\n        </div> */}\n\n        {/* ANNIVERSAIRES */}\n        {/* <div className=\"flex flex-col items-center justify-center\">\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Anniversaires à souligner</h2>\n          <p className=\"mt-2 text-center text-sm text-indigo-500 w-1/2 align-middle\">\n            Ajoutez les anniversaires que vous souhaitez souligner chaque année\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center space-y-4\">\n          <div className=\"flex flex-row item-center justify-center align-middle space-x-2 bg-gray-100 p-2 rounded-md\">\n            <div className=\"self-center font-medium text-center text-lg text-gray-500 mx-1\">\n                1\n            </div>\n            <div>\n              <label htmlFor=\"prenom\" className=\"sr-only\">\n                Prénom\n              </label>\n              <input\n                id=\"prenom\"\n                name=\"prenom\"\n                type=\"text\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Prénom\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"nom\" className=\"sr-only\">\n                Nom\n              </label>\n              <input\n                id=\"nom\"\n                name=\"nom\"\n                type=\"text\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Nom\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"dateNaissance\" className=\"sr-only\">\n                Date de naissance\n              </label>\n              <input\n                id=\"dateNaissance\"\n                name=\"dateNaissance\"\n                type=\"date\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-500 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Date de naissance\"\n              />\n            </div>\n          </div>\n          <div className=\"rounded-full font-medium text-center text-2xl text-white shadow align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500 h-8 w-8 flex items-center justify-center\">\n              +\n          </div>\n        </div> */}\n\n        {/* <div className=\"flex flex-col items-center justify-center\">\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Que voulez-vous annoncer ?</h2>\n          <p className=\"mt-2 text-center text-sm text-indigo-500 w-1/2 align-middle\">\n            Écrivez le texte qui s'affichera dans la vignette\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center space-y-4 w-full\">\n          <div className=\"flex flex-row item-center justify-center align-middle space-x-2 bg-gray-100 p-2 rounded-md w-full\">\n            <div className=\"w-full\">\n              <label htmlFor=\"texte\" className=\"sr-only\">\n                Texte\n              </label>\n              <textarea\n                id=\"texte\"\n                name=\"texte\"\n                type=\"textarea\"\n                required\n                className=\"appearance-none rounded-none relative block w-full min-h-28 max-h-28 px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Texte\"\n              />\n            </div>\n          </div>\n          <div className=\"rounded-md font-medium py-1 px-3 text-center text-sm text-white shadow align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500 flex items-center justify-center\">\n              Créer la vignette!\n          </div>\n        </div> */}\n        \n        {/* <form className=\"flex flex-row mt-8 space-x-4\" action=\"#\" method=\"POST\">\n          <div>\n            <label htmlFor=\"prenom\" className=\"sr-only\">\n              Prénom\n            </label>\n            <input\n              id=\"prenom\"\n              name=\"prenom\"\n              type=\"prenom\"\n              required\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n              placeholder=\"Prénom\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"nom\" className=\"sr-only\">\n              Nom\n            </label>\n            <input\n              id=\"nom\"\n              name=\"nom\"\n              type=\"nom\"\n              required\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n              placeholder=\"Nom\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"dateNaissance\" className=\"sr-only\">\n              Date de naissance\n            </label>\n            <input\n              id=\"dateNaissance\"\n              name=\"dateNaissance\"\n              type=\"date\"\n              required\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-500 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n              placeholder=\"Date de naissance\"\n            />\n          </div>\n          \n\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember-me\"\n                name=\"remember-me\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n              />\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                Remember\n              </label>\n            </div>\n          </div>\n        </form> */}\n      {/* </div>\n    </div> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
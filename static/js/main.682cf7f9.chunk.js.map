{"version":3,"sources":["modules/CloudNaturalLanguageAPI.js","modules/PixaBayAPI.js","modules/creationTool.jsx","modules/dataSource/FcmBd.js","modules/birthday/birthdayTool.jsx","modules/dataSource/DataSource.js","modules/dataSource/DataSourceManager.js","modules/dataSource/dataSourceTool.jsx","modules/dataSource/visualQueryBuilderTool.jsx","App.js","reportWebVitals.js","index.js"],"names":["CloudNaturalLanguageAPI","text","body","options","JSON","stringify","fetch","process","Response","json","Result","console","log","API_KEY_PIXABAY","API_KEY_UNSPLASH","PixaBayAPI","words","language","nbResults","queryString","forEach","word","idx","length","url","encodeURIComponent","images","results","image","push","previewURL","urls","thumb","id","tags","description","hits","TEXT_ZONE_POSITION_SPACE","TEXT_ZONE_BG_DEFAULT","DEV_POSITION_ZONES_NUMBERS","TEXT_ZONE_POSITION_CLASS","containerClass","zoneClass","textClass","margins","paddings","TEXT_SHADOWS","TEXT_ZONE_FONT_SIZE","LibraryMediaContainer","src","onClick","alt","hoverOptions","useState","mediaData","mediaPreviewUrl","isLoading","setIsLoading","isMouseOver","setIsMouseOver","isMobile","useMediaQuery","query","className","onLoad","map","option","onMouseOver","onMouseLeave","LoadingSpinner","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","CreationTool","isHidden","setText","textMaxWidth","setTextMaxWidth","searchQueryWords","setSearchQueryWords","setImages","imagesToDisplay","setImagesToDisplay","setLanguage","thumbBgImage","setThumbBgImage","thumbText","setThumbText","thumbTemplate","setThumbTemplate","playingPreview","setPlayingPreview","thumbPreviewWidth","setThumbPreviewWidth","thumbPreviewTextClass","setThumbPreviewTextClass","thumbTextClass","setThumbTextClass","thumbTextZoneAllowPreview","setThumbTextZoneAllowPreview","costumSearchTags","setCustomSearchTags","selectedSearchTags","setSelectedSearchTags","setSearchData","TEXT_ZONE_BG","setTextZoneBg","thumbFontSize","setThumbFontSize","thumbPreview","useRef","isLoadingThumbImage","setIsLoadingThumbImage","isThumbCreated","setIsThumbCreated","NB_IMAGE_TO_DISPLAY","analyzeEntities","then","entities","wordsArray","searchWords","index","name","toLowerCase","salience","searched","addedSearch","findIndex","toUpperCase","considered","filteredWordsArray","filter","getCorrespondingImages","searchPixaBayData","catch","Err","lang","newImagesToDisplay","splice","customTags","getCustomTags","imagesFound","searchedWords","importantTags","importantTagsArr","split","tag","Object","entries","key","value","confidence","includes","nbImages","newSearchWords","promises","wordExistInTags","result","total","totalHits","Promise","all","pixaBayDatas","tagSearchData","wordSearched","reason","useEffect","current","scrollIntoView","behavior","checkAsSimilarImages","currentSelectedSearchTag","asSimilarImages","find","costumTag","handleChangeThumbTemplate","e","template","preventDefault","target","handleOverTextZonePosition","positionNo","stopPropagation","handleClickTextZonePosition","handlePlayingPreview","play","offsetWidth","getComputedPixelSize","pixel","currentThuumbPreviewWidth","getComputedPixelSizeSpec","size","handleSaveAsImage","a","container","document","createElement","classList","add","preview","html","renderScreenShot","innerHTML","ReactDOMServer","renderToStaticMarkup","appendChild","htmlToImage","blob","saveAs","removeChild","style","width","height","ref","replaceAll","maxWidth","margin","padding","fontSize","lineHeight","htmlFor","onChange","persist","type","select","required","placeholder","onKeyDown","event","sort","b","handleChangeAddSearchQueryWord","currentSearchWordIndex","handleChangeQueryWords","newSelectedSearchTags","indexSelectedSearchTag","match","handleChangeAutoSelectedSearchTags","fullHDURL","handleChangeThumbBgImage","tagToSelect","nbImagesForTag","tagFound","handleShowSimilarImages","onAnimationStart","onAnimationEnd","parseInt","step","min","max","defaultValue","FcmBd","_DataSources","dataSources","refs","dataStores","queries","tableModels","config","dataSourceType","dataSourceTypeDefaultParams","GOOGLESHEET","API","defaultDataSourceModel","baseUrl","properties","dataSets","defaultDataSetModel","dataLoaded","storeRefreshRate","dataStoreRef","columns","defaultColumnModel","dataType","init","fetchQuery","data","initData","deepParse","source","createFromJson","addItemAndRef","tableModel","dataSourceRef","dataSourceModel","dataSource","Error","parse","err","error","message","addDataSet","dataSetRef","dataSetModel","validateRequest","setUpdateStoreInterval","addDataSetColumn","columnRef","columnModel","dataSet","remove","removeItemAndRef","removeDataSet","clearUpdateStoreInterval","removeDataSetColumn","create","callback","getDataSourceType","substring","indexOf","lastIndexOf","spreadsheetId","spreadsheet","title","sheets","sheet","sheetData","sheetId","values","colIdx","getDataType","row","rowIdx","rowData","column","list","undefined","executeStoredQuery","queryRef","queryModifier","liveData","getStoredQueryTableModel","from","startTime","getNowTimeStamp","queryResult","datasetNbRows","returnedNbRows","duration","where","orderBy","skip","limit","slice","updateStore","checkStoredQueryResultUpdated","lastUpdateTime","updatedData","updateStoreInterval","setInterval","clearInterval","response","handleResponse","contentType","headers","get","handleJSONResponse","handleTextResponse","handleCSVResponse","ok","reject","assign","status","statusText","parseCSV","objectTocheck","filters","dataSetColumns","filterArr","operator","keyToCheck","isMacthing","Array","isArray","compare","convertToDataType","expression","expr","object","computation","compute","startsWith","computedValue","string","valueToCheck","valueToMatch","getUTCMonth","getUTCDate","filteredData","item","keys","sortedData","itemA","itemB","sorted","direction","valueA","valueB","localeCompare","selects","selectedData","dataRow","Date","getTime","refArr","isNaN","parseFloat","valueToConvert","convertedValue","String","Number","Boolean","stringToParse","outObject","isValidJSON","str","csv","reviver","v","ctx","entry","output","col","lexer","isNewline","matches","state","exec","valueEnd","test","entryEnd","typed","inferType","isFinite","DataSources","GOOGLESHEETAPIKEY","BIRTHDAY_IMG_BACKGROUNDS","img","textColor","textShadow","maxNameCol","BIRTHDAY_TITLES","BirthdayTool","date","setDate","birthdays","setBirthdays","bgImgIdx","setBgImgIdx","titleIdx","setTitleIdx","incrBgImgIdx","newBgImgIdx","newTitleIdx","nom","prenom","currentThumbPreviewWidth","Math","ceil","marginTop","columnGap","rowGap","birthday","letterSpacing","handleLoadBirthdays","API_KEY_GOOGLE_SHEET","DataSource","this","dataRefreshRate","valid","fieldNames","idFieldName","ressources","intervalPopulateDynamicFields","intervalUpdateData","formatedData","dataRefIndex","dynamicFields","prototype","load","promises2","initializations","initialization","loadData","getType","getFetchQuery","setData","postProcessData","getData","getName","setId","getId","asyncLoadData","datasource","setTimeout","addDynamicField","elementId","dynamicField","retreiveFieldNames","formatDataToModel","model","formatedItem","field","getElementByProperty","element","property","queryDataSet","dataSetId","queryObjectsArray","formatedQueryRow","formatedQueryColumn","DataSourceManager","dynamicFieldsToUpdate","myDataSource","getDataSources","dataSourceIndex","addDynamicFieldToUpdate","updateDynamicFields","i","populateDynamicField","dataSourceManager","DataSourceTool","setUrl","setDataSources","selectedDataSource","setSelectedDataSource","thumbTablePadding","setThumbTablePadding","thumbTableWidth","setThumbTableWidth","maxNbRows","setMaxNbRows","htmlTable","setHtmlTable","setQuery","isValidSource","req","res","createDataSource","equipe","pause","debut","fin","newDataSource","handleChangeQueryColumn","colIndex","checked","newQuery","handleChangeQueryColumnSpecific","tables","screenHeight","minHeaderFontSize","minHeaderPadding","minWindowPadding","minCellPadding","minCellFontSize","newMaxNbRows","floor","minTablePadding","display","table","marginLeft","textAlign","cell","$and","dSrcIndex","rIndex","dataSourceIdx","format","textDescriptions","handleSelectDataSource","autoComplete","strokeLinecap","strokeLinejoin","ListeDeroulante","selected","setSelected","Button","as","Fragment","leave","leaveFrom","leaveTo","Options","itemIdx","Option","active","VisualQueryBuilderTool","setDataSource","setDataSet","setColumns","setWhere","setOrderBy","setLimit","setSkip","setQueryResult","newColums","buildQuery","filtre","ordre","limite","depart","isJsonString","App","currentTool","setCurrentTool","isAuthorized","setIsAuthorized","password","setPassword","isWrongPassword","setIsWrongPassword","handleChangePassword","newPassword","authorized","nextfield","querySelector","focus","handleOnFocusPassword","handleKeyDownPassword","pattern","inputMode","autoFocus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.682cf7f9.chunk.js","sourcesContent":["// MAIN COMPONENT ---------------------------------------------------------------------------------\n\nconst API_KEY = process.env.REACT_APP_GOOGLE_NLU_API_KEY;\n\nclass CloudNaturalLanguageAPI {\n\n  static async analyzeEntities(text) {\n\n    let body = {\n      \"document\":{\n        \"type\": \"PLAIN_TEXT\",\n        \"content\": text\n      },\n      \"encodingType\":\"UTF8\"\n    }\n\n    let options = {\n        'method': 'post', \n        'mode': 'cors', \n        'cache': 'no-cache',\n        'redirect': 'follow',\n        'referrerPolicy': 'no-referrer',\n        'headers': { 'Content-Type': 'application/json' },\n        'body': JSON.stringify(body)\n      };\n\n      try {\n\n      // Fetch data and get JSON result.\n      let Response = await fetch(`https://language.googleapis.com/v1/documents:analyzeEntities?key=${API_KEY}`,options);\n\n      let Result = await Response.json();\n\n      if(!Result) return null\n\n      if(Result) {\n        return Result;\n      }\n\n      return null;\n\n    } catch(Err) {\n      console.log('analyzeEntities',Err);\n      return [];\n    }\n\n  }\n\n}\n\n\n// EXPORT -----------------------------------------------------------------------------------------\n\nexport default CloudNaturalLanguageAPI;\n","// MAIN COMPONENT ---------------------------------------------------------------------------------\nconst API_KEY_PIXABAY = process.env.REACT_APP_PIXABAY_API_KEY;\nconst API_KEY_UNSPLASH = process.env.REACT_APP_UNSPLASH_API_KEY;\n\nclass PixaBayAPI {\n\n  static async getCorrespondingImages(words,language, nbResults = 200) {\n\n    let queryString = \"\";\n\n    words.forEach((word, idx) => {\n        queryString += word + (idx + 1 < words.length ? \"+\": \"\");\n    });\n\n    /* let options = {\n      'method': 'get', // *GET, POST, PUT, DELETE, etc.\n      'mode': 'cors', // no-cors, *cors, same-origin\n      'cache': 'no-cache',\n      'headers': { 'Content-Type': 'application/json' },\n    }; */\n\n    let url = `https://pixabay.com/api/?key=${API_KEY_PIXABAY}&q=${encodeURIComponent(queryString)}&image_type=photo&lang=${language}&safesearch=true&per_page=${nbResults}`;\n\n    if (words.length === 0) {\n      url = `https://pixabay.com/api/?key=${API_KEY_PIXABAY}&category=backgrounds&image_type=photo&lang=${language}&safesearch=true&per_page=${nbResults}`;\n    }\n\n    try {\n\n      // Fetch data and get JSON result.\n      let Response = await fetch(url); //&orientation=horizontal\n\n      let Result = await Response.json();\n\n      if(!Result) return null\n\n      if(Result) {\n        return Result;\n      }\n\n      return null;\n\n    } catch(Err) {\n      console.log('getCorrespondingImages',Err);\n      return [];\n    }\n\n  }\n\n  static async getCorrespondingImagesUnsplash(words,language, nbResults = 20) {\n\n      let queryString = \"\";\n\n      words.forEach((word, idx) => {\n          queryString += word + (idx + 1 < words.length ? \" \": \"\");\n      });\n\n      try {\n\n      // Fetch data and get JSON result.\n      let Response = await fetch(`https://api.unsplash.com/search/photos?client_id=${API_KEY_UNSPLASH}&per_page=50&query=${encodeURIComponent(queryString)}&lang=${language}`);\n\n      let Result = await Response.json();\n\n      if(!Result) return null\n\n      if(Result) {\n\n        let images = [];\n\n        Result.results.forEach(image => {\n          images.push({ previewURL: image.urls.thumb, id: image.id, tags: image.description });\n        });\n\n        Result.hits = images;\n\n        return Result;\n      }\n\n      return null;\n\n    } catch(Err) {\n      console.log('analyzeEntitiesUnsplash',Err);\n      return [];\n    }\n\n  }\n\n}\n\n\n// EXPORT -----------------------------------------------------------------------------------------\n\nexport default PixaBayAPI;\n","import React, { useRef, useState, useEffect } from 'react'\nimport CloudNaturalLanguageAPI from './CloudNaturalLanguageAPI';\nimport PixaBayAPI from './PixaBayAPI'\nimport { ArrowCircleLeftIcon, XCircleIcon, PlusCircleIcon, PlayIcon, ViewGridAddIcon, FingerPrintIcon, CursorClickIcon, CameraIcon } from '@heroicons/react/outline'\nimport Resizer from './resizer';\n\nimport { saveAs } from 'file-saver';\n\nimport ReactDOMServer from 'react-dom/server';\nimport * as htmlToImage from 'html-to-image';\n\nimport { useMediaQuery } from 'react-responsive';\n\n//const defaultText = \"La beauté est dans le regard de celui qui regarde.\";\n\n//const defaultText = \"A sign of the return of the beautiful season, this unique exhibition in the country, which showcases the poetry of the shape of the egg, is coming to Quebec for the first time. A dozen emerging and established artists take over the spaces of the mall, giving the public free rein to their imagination.\"\n\nconst defaultText = \"\";\n\n/* const TEXT_ZONE_POSITION_SPACE = \"1\";\nconst TEXT_ZONE_BG = \"rounded-md bg-gray-800 bg-opacity-20\"; */\n\nconst TEXT_ZONE_POSITION_SPACE = \"0\";\nconst TEXT_ZONE_BG_DEFAULT = \"cursor-pointer hover:bg-blue-600 hover:bg-opacity-20 rounded-md text-transparent\"; //rounded-md bg-gray-800 bg-opacity-20\n\n//const TEXT_ZONE_BG = \"cursor-pointer border-2 border-transparent hover:border-blue-600 hover:border-opacity-50 rounded-md\";\n//const TEXT_ZONE_BG = '';\n\n//const DEV_POSITION_ZONES_NUMBERS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nconst DEV_POSITION_ZONES_NUMBERS = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',];\n\nconst DEFAULT_TEXT_MAX_WIDTH = 60;\n\nconst TEXT_ZONE_POSITION_CLASS = {\n\t1: {containerClass: 'items-start justify-start', zoneClass: 'mr-10 mb-10 max-w-60 rounded-br-sm', textClass: 'pt-8 pl-8 pb-4 pr-5', margins: [0, 40, 40, 0], paddings: [32, 20, 16, 32]},\n\t2: {containerClass: 'items-start justify-start', zoneClass: 'mx-10 mb-10 max-w-60 rounded-b-sm', textClass: 'pt-8 pb-3 px-4', margins: [0, 40, 40, 40], paddings: [32, 16, 12, 16]},\n\t3: {containerClass: 'items-start justify-center', zoneClass: 'mx-10 mb-10 max-w-60 rounded-b-sm text-center', textClass: 'pt-8 pb-3 px-4', margins: [0, 40, 40, 40], paddings: [32, 16, 12, 16]},\n\t4: {containerClass: 'items-start justify-end', zoneClass: 'mx-10 mb-10 max-w-60 rounded-b-sm', textClass: 'pt-8 pb-3 px-4', margins: [0, 40, 40, 40], paddings: [32, 16, 12, 16]},\n\t5: {containerClass: 'items-start justify-end', zoneClass: 'ml-10 mb-10 max-w-60 rounded-bl-sm', textClass: 'pt-8 pr-8 pb-4 pl-5', margins: [0, 0, 40, 40], paddings: [32, 32, 16, 20]},\n\t6: {containerClass: 'items-start justify-start', zoneClass: 'my-10 mr-10 max-w-60 rounded-r-sm', textClass: 'pl-8 py-3 pr-4', margins: [60, 40, 40, 0], paddings: [12, 16, 12, 32]},\n\t7: {containerClass: 'items-start justify-start', zoneClass: 'my-10 mx-10 max-w-60 rounded-sm', textClass: 'py-3 px-4', margins: [60, 40, 40, 40], paddings: [12, 16, 12, 16]},\n\t8: {containerClass: 'items-start justify-center', zoneClass: 'my-10 mx-10 max-w-60 rounded-sm text-center', textClass: 'py-3 px-4', margins: [60, 40, 40, 40], paddings: [12, 16, 12, 16]},\n\t9: {containerClass: 'items-start justify-end', zoneClass: 'my-10 mx-10 max-w-60 rounded-sm', textClass: 'py-3 px-4', margins: [60, 40, 40, 40], paddings: [12, 16, 12, 16]},\n\t10: {containerClass: 'items-start justify-end', zoneClass: 'my-10 ml-10 max-w-60 rounded-l-sm', textClass: 'pr-8 py-3 pl-4', margins: [60, 0, 40, 40], paddings: [12, 32, 12, 16]},\n\t11: {containerClass: 'items-center justify-start', zoneClass: 'my-10 mr-10 max-w-60 rounded-r-sm', textClass: 'pl-8 py-3 pr-4', margins: [40, 40, 40, 0], paddings: [12, 16, 12, 32]},\n\t12: {containerClass: 'items-center justify-start', zoneClass: 'my-10 mx-10 max-w-60 rounded-sm', textClass: 'py-3 px-4', margins: [40, 40, 40, 40], paddings: [12, 16, 12, 16]},\n\t13: {containerClass: 'items-center justify-center', zoneClass: 'my-10 mx-10 max-w-60 rounded-sm text-center', textClass: 'py-3 px-4', margins: [40, 40, 40, 40], paddings: [12, 16, 12, 16]},\n\t14: {containerClass: 'items-center justify-end', zoneClass: 'my-10 mx-10 max-w-60 rounded-sm', textClass: 'py-3 px-4', margins: [40, 40, 40, 40], paddings: [12, 16, 12, 16]},\n\t15: {containerClass: 'items-center justify-end', zoneClass: 'my-10 ml-10 max-w-60 rounded-l-sm', textClass: 'pr-8 py-3 pl-4', margins: [40, 0, 40, 40], paddings: [12, 32, 12, 16]},\n\t16: {containerClass: 'items-end justify-start', zoneClass: 'my-10 mr-10 max-w-60 rounded-r-sm', textClass: 'pl-8 py-3 pr-4', margins: [40, 40, 60, 0], paddings: [12, 16, 12, 32]},\n\t17: {containerClass: 'items-end justify-start', zoneClass: 'my-10 mx-10 max-w-60 rounded-sm', textClass: 'py-3 px-4', margins: [40, 40, 60, 40], paddings: [12, 16, 12, 16]},\n\t18: {containerClass: 'items-end justify-center', zoneClass: 'my-10 mx-10 max-w-60 rounded-sm text-center', textClass: 'py-3 px-4', margins: [40, 40, 60, 40], paddings: [12, 16, 12, 16]},\n\t19: {containerClass: 'items-end justify-end', zoneClass: 'my-10 mx-10 max-w-60 rounded-sm', textClass: 'py-3 px-4', margins: [40, 40, 60, 40], paddings: [12, 16, 12, 16]},\n\t20: {containerClass: 'items-end justify-end', zoneClass: 'my-10 ml-10 max-w-60 rounded-l-sm', textClass: 'pr-8 py-3 pl-4', margins: [40, 0, 60, 40], paddings: [12, 32, 12, 16]},\n\t21: {containerClass: 'items-end justify-start', zoneClass: 'mr-10 mt-10 max-w-60 rounded-tr-sm', textClass: 'pb-8 pl-8 pt-4 pr-5', margins: [40, 40, 0, 0], paddings: [16, 20, 32, 32]},\n\t22: {containerClass: 'items-end justify-start', zoneClass: 'mx-10 mt-10 max-w-60 rounded-t-sm', textClass: 'pb-8 pt-3 px-4', margins: [40, 40, 0, 40], paddings: [12, 16, 32, 16]},\n\t23: {containerClass: 'items-end justify-center', zoneClass: 'mx-10 mt-10 max-w-60 rounded-t-sm text-center', textClass: 'pb-8 pt-3 px-4', margins: [40, 40, 0, 40], paddings: [12, 16, 32, 16]},\n\t24: {containerClass: 'items-end justify-end', zoneClass: 'mx-10 mt-10 max-w-60 rounded-t-sm', textClass: 'pb-8 pt-3 px-4', margins: [40, 40, 0, 40], paddings: [12, 16, 32, 16]},\n\t25: {containerClass: 'items-end justify-end', zoneClass: 'ml-10 mt-10 max-w-60 rounded-tl-sm', textClass: 'pb-8 pr-8 pt-4 pl-5', margins: [40, 0, 0, 40], paddings: [16, 32, 32, 20]}\n};\n\nconst TEXT_SHADOWS = {\n  black: \"0px 0px 2px rgba(0,0,0,0.70)\",\n  white: \"0 0px 2px rgba(255,255,255,0.50)\",\n};\n\n/* {\n  black: \"0 0px 1px rgba(0,0,0,0.50), 0 0px 15px rgba(0,0,0,0.25)\",\n  white: \"0 0px 2px rgba(255,255,255,0.50), 0 0px 15px rgba(255,255,255,0.25)\",\n}; */\n\nconst TEXT_ZONE_FONT_SIZE = {\n  0: [18.4, 23.2],\n  1: [21.6, 26.4],\n  2: [24.8, 29.6],\n  3: [28, 32.8],\n  4: [31.2, 34.4],\n  5: [34.4, 38.4],\n  6: [37.6, 41.6],\n  7: [40.8, 44.8],\n  8: [44, 48],\n  9: [47.2, 50.4],\n  10: [50.4, 53.6],\n};\n\nconst LibraryMediaContainer = ({ src, alt, onClick, hoverOptions }) => {\n\n  // STATES MANAGEMENT ------------------------------------------------------------------------------\n\n  // DATA STATES\n  const [mediaData, setMediaData] = useState({});\n  const [mediaPreviewUrl, setMediaPreviewUrl] = useState(src);\n\n  // UI LOGIC STATES\n  const [isLoading, setIsLoading] = useState(true);\n  const [isMouseOver, setIsMouseOver] = useState(false);\n\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\n\n  return (<>\n    {isMobile ? \n      <div onClick={onClick} className=\"aspect-w-16 aspect-h-9 cursor-pointer\">\n        {isLoading && <div className=\"flex w-full h-full items-center justify-center\"><LoadingSpinner className=\"h-6 w-6 text-blue-600\" /></div>}\n        <img onLoad={() => setIsLoading(false)} src={mediaPreviewUrl} alt={mediaData.tags} className=\"select-none rounded-sm shadow w-full h-full object-center object-cover\" />\n        {((isMouseOver || isMobile) && hoverOptions.length > 0) && <div className=\"flex flex-row items-end justify-end\"><div className=\"p-1 bg-gray-800 bg-opacity-50 rounded-tl-lg rounded-br-sm\">{hoverOptions.map(option => option)}</div></div>}\n      </div>\n    :\n      <div onClick={onClick} onMouseOver={() => setIsMouseOver(true)} onMouseLeave={() => setIsMouseOver(false)} className=\"aspect-w-16 aspect-h-9 cursor-pointer\">\n        {isLoading && <div className=\"flex w-full h-full items-center justify-center\"><LoadingSpinner className=\"h-6 w-6 text-blue-600\" /></div>}\n        <img onLoad={() => setIsLoading(false)} src={mediaPreviewUrl} alt={mediaData.tags} className=\"select-none rounded-sm shadow w-full h-full object-center object-cover\" />\n        {((isMouseOver || isMobile) && hoverOptions.length > 0) && <div className=\"flex flex-row items-end justify-end\"><div className=\"p-1 bg-gray-800 bg-opacity-50 rounded-tl-lg rounded-tl-lg rounded-br-sm\">{hoverOptions.map(option => option)}</div></div>}\n      </div>\n    }\n  </>);\n}\n\nconst LoadingSpinner = ({ className }) => {\n  return (\n    <svg className={`animate-spin ${className}`} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n    </svg>\n  );\n}\n\nconst CreationTool = ({ isHidden }) => {\n  const [text, setText] = useState(defaultText);\n  const [textMaxWidth, setTextMaxWidth] = useState(DEFAULT_TEXT_MAX_WIDTH);\n  const [searchQueryWords, setSearchQueryWords] = useState([]);\n  const [images, setImages] = useState([]);\n  const [imagesToDisplay, setImagesToDisplay] = useState([]);\n  const [language, setLanguage] = useState(\"fr\");\n  const [pixaBayData, setPixaBayData] = useState({});\n  const [thumbBgImage, setThumbBgImage] = useState(\"\");\n  const [thumbText, setThumbText] = useState(\"\");\n  const [thumbTemplate, setThumbTemplate] = useState(4);\n\n  const [playingPreview, setPlayingPreview] = useState(true);\n\n  const [thumbPreviewWidth, setThumbPreviewWidth] = useState(0);\n  const [thumbPreviewTextClass, setThumbPreviewTextClass] = useState({});\n  const [thumbTextClass, setThumbTextClass] = useState(TEXT_ZONE_POSITION_CLASS[13]);\n\n  const [thumbTextZoneAllowPreview, setThumbTextZoneAllowPreview] = useState(true);\n\n  const [costumSearchTags, setCustomSearchTags] = useState([]);\n  const [selectedSearchTags, setSelectedSearchTags] = useState([]);\n  const [searchData, setSearchData] = useState({});\n\n  const [TEXT_ZONE_BG, setTextZoneBg] = useState(TEXT_ZONE_BG_DEFAULT);\n\n  const [thumbFontSize, setThumbFontSize] = useState(4);\n\n  const thumbPreview = useRef();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingThumbImage, setIsLoadingThumbImage] = useState(false);\n  const [isThumbCreated, setIsThumbCreated] = useState(false);\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\n\n  const NB_IMAGE_TO_DISPLAY = isMobile ? 21 : 20;\n\n  const analyzeEntities = (text) => {\n    CloudNaturalLanguageAPI.analyzeEntities(text).then((Result)=>{\n      console.log('analyzeEntities', Result);\n\n      setIsLoading(false);\n\n      if (Result.entities.length > 0) {\n\n        let wordsArray = [];\n        let searchWords = [];\n\n        setLanguage(Result.language);\n\n        Result.entities.forEach((words, index) => {\n\n          let word = {};\n\n          word.considered = false;\n          word.text = words.name.toLowerCase();\n          word.salience = words.salience;\n          word.searched = false;\n          word.addedSearch = false;\n\n          if (words.salience >= 0.07 && wordsArray.findIndex(word => word.text.toUpperCase() === words.name.toUpperCase()) == -1) {\n            word.considered = true;\n\n            if (((index > 0 && words.salience >= 0.50) || index < 1)) {\n              searchWords.push(words.name.toLowerCase());\n              word.searched = true;\n            }\n          }\n\n          wordsArray.push(word);\n        });\n\n        let filteredWordsArray = wordsArray.filter(word => word.considered);\n\n        /* setSearchQueryWords(filteredWordsArray); */\n\n        getCorrespondingImages(searchWords, Result.language);\n        setSelectedSearchTags([]);\n        setPlayingPreview(true);\n\n        searchPixaBayData(filteredWordsArray, Result.language, filteredWordsArray, searchWords);\n\n        console.log('wordsArray', wordsArray);\n\n      } else {\n        getCorrespondingImages([], Result.language);\n        setSelectedSearchTags([]);\n        setSearchQueryWords([]);\n        setPlayingPreview(true);\n      }\n\n      setIsLoading(false);\n\n    }).catch((Err)=>{\n      console.log('Saving API errors', Err);\n      setIsLoading(false);\n    });\n  }\n\n  const getCorrespondingImages = (words, lang) => {\n    PixaBayAPI.getCorrespondingImages(words, lang).then((Result)=>{\n      console.log('getCorrespondingImages', Result);\n\n      setImages(Result.hits);\n\n      let newImagesToDisplay = [...Result.hits];\n\n      setImagesToDisplay(newImagesToDisplay.splice(0, NB_IMAGE_TO_DISPLAY))\n\n      setIsLoading(false);\n\n      let customTags = getCustomTags(Result.hits, words);\n      setCustomSearchTags(customTags);\n\n    }).catch((Err)=>{\n      console.log('Saving API errors', Err);\n      setIsLoading(false);\n    });\n\n    /* PixaBayAPI.getCorrespondingImagesUnsplash(words, lang).then((Result)=>{\n      console.log('getCorrespondingImagesUnsplash', Result);\n\n      setImages(Result.hits);\n\n      setIsLoading(false);\n\n    }).catch((Err)=>{\n      console.log('getCorrespondingImagesUnsplash', Err);\n      setIsLoading(false);\n    }); */\n  }\n\n  const getCustomTags = (imagesFound, searchedWords) => {\n    let importantTags = {};\n\n    let importantTagsArr = [];\n\n    let wordExistInTags = false;\n\n    imagesFound.forEach(image => {\n      image.tags.split(\", \").forEach(tag => {\n        tag = tag.toLowerCase();\n        if (!importantTags[tag]) {\n          importantTags[tag] = 1;\n        } else {\n          importantTags[tag] += 1;\n        }\n      });\n    });\n\n    const objectArray = Object.entries(importantTags);\n\n    objectArray.forEach(([key, value]) => {\n      let confidence = value / imagesFound.length * 100;\n\n      if (/* confidence >= POURC_OF_CONFIDENCE */ value >= 3) {\n        if (!searchedWords.includes(key)) {\n          importantTagsArr.push({ word: key, confidence: confidence, nbImages: value });\n        }\n      }\n    });\n\n    console.log('getCustomTags', importantTagsArr);\n\n    setSelectedSearchTags([]);\n\n    return importantTagsArr;\n  }\n\n  const searchPixaBayData = (words, lang, newSearchWords, searchWords) => {\n\n    let promises = [];\n\n    const NB_TAG_OCCURENCE = 7;\n    const NB_IMAGE_TO_ANALIZE = 100;\n    const POURC_OF_CONFIDENCE = 0.5;\n\n    words.forEach(word => {\n      promises.push(PixaBayAPI.getCorrespondingImages([word.text], lang, NB_IMAGE_TO_ANALIZE).then((Result)=>{\n\n        let importantTags = {};\n\n        let importantTagsArr = [];\n\n        let wordExistInTags = false;\n\n        Result.hits.forEach(image => {\n          image.tags.split(\", \").forEach(tag => {\n            tag = tag.toLowerCase();\n            if (!importantTags[tag]) {\n              importantTags[tag] = 1;\n            } else {\n              importantTags[tag] += 1;\n            }\n          });\n        });\n\n        const objectArray = Object.entries(importantTags);\n\n        objectArray.forEach(([key, value]) => {\n          let confidence = value / Result.hits.length * 100;\n\n          if (/* confidence >= POURC_OF_CONFIDENCE */ value >= NB_TAG_OCCURENCE) {\n            if (word.text.toLowerCase() === key) {\n              wordExistInTags = true;\n            }\n            importantTagsArr.push({ word: key, confidence: confidence, nbImages: value });\n          }\n        });\n\n        return { word: word.text, tags: importantTagsArr, result: Result.hits, total: Result.total, totalHits: Result.totalHits, wordExistInTags: wordExistInTags };\n      }).catch((Err)=>{\n        console.log('Saving API errors', Err);\n      }));\n    });\n\n    Promise.all(promises).then(pixaBayDatas => {\n      console.log(pixaBayDatas);\n\n      let filteredWordsToRemoveArray = pixaBayDatas.filter(word => !word.wordExistInTags);\n\n      let tagSearchData = {};\n\n      let oneTagSearched = false;\n\n      pixaBayDatas.forEach(wordSearched => {\n        if (/* !wordSearched.wordExistInTags ||  */wordSearched.result.length < 10) {\n          newSearchWords.splice(newSearchWords.findIndex(word => word.text === wordSearched.word),1);\n        }\n        tagSearchData[wordSearched.word] = wordSearched.tags;\n      });\n\n      setSearchQueryWords(newSearchWords);\n\n      if (newSearchWords.length === 0) {\n        getCorrespondingImages([], lang);\n      }\n\n      setSearchData(tagSearchData);\n\n      /* if (searchWords.length === 1) {\n        setCustomSearchTags(tagSearchData[searchWords[0]]);\n      } else {\n        setCustomSearchTags([]);\n      } */\n\n    }).catch(reason => {\n      console.log(reason)\n    });\n    \n  }\n\n  const handleCreateThumb = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setIsThumbCreated(true);\n    analyzeEntities(text);\n    setThumbText(text);\n    /* setThumbBgImage(\"\"); */\n  }\n\n  const handleChange = (e) => {\n    const { target } = e;\n    const { value } = target;\n    e.persist();\n\n    setText(value);\n  };\n\n  const handleChangeQueryWords = (e, index) => {\n    e.preventDefault();\n    const { target } = e;\n    /* const { value } = target; */\n\n    let wordsArray = [...searchQueryWords];\n\n    let searchWords = [];\n\n    if (wordsArray[index].addedSearch) {\n      wordsArray[index].addedSearch = false;\n    } else if (wordsArray[index].searched) {\n      wordsArray.forEach(word => {\n        word.addedSearch = false;\n      });\n    } else {\n      let currentSearchWordIndex = wordsArray.findIndex(word => word.searched);\n\n      wordsArray[currentSearchWordIndex].searched = false;\n\n      wordsArray[index].searched = true;\n\n      wordsArray.forEach(word => {\n        word.addedSearch = false;\n      });\n    }\n\n    wordsArray.sort((a, b) => {\n      if ( (a.searched ? 1 : a.addedSearch ? 2 : 3) < (b.searched ? 1 : b.addedSearch ? 2 : 3) ){\n        return -1;\n      }\n      if ( (a.searched ? 1 : a.addedSearch ? 2 : 3) > (b.searched ? 1 : b.addedSearch ? 2 : 3) ){\n        return 1;\n      }\n      return 0;\n    });\n    \n\n    setSearchQueryWords(wordsArray);\n\n    wordsArray.forEach(word => {\n      if (word.searched || word.addedSearch) {\n        searchWords.push(word.text);\n      }\n    });\n\n    /* if (searchWords.length === 1) {\n      setCustomSearchTags(searchData[searchWords[0]]);\n    } else {\n      setCustomSearchTags([]);\n    } */\n\n    PixaBayAPI.getCorrespondingImages(searchWords, language).then((Result)=>{\n\n      console.log('getCorrespondingImages', Result);\n\n      setImages(Result.hits);\n      let newImagesToDisplay = [...Result.hits];\n      setImagesToDisplay(newImagesToDisplay.splice(0, NB_IMAGE_TO_DISPLAY))\n      setIsLoading(false);\n      let customTags = getCustomTags(Result.hits, searchWords);\n      setCustomSearchTags(customTags);\n    }).catch((Err)=>{\n      console.log('Saving API errors', Err);\n      setIsLoading(false);\n    });\n\n    /* PixaBayAPI.getCorrespondingImagesUnsplash(searchWords, language).then((Result)=>{\n\n      console.log('getCorrespondingImagesUnsplash', Result);\n\n      setImages(Result.hits);\n      setIsLoading(false);\n    }).catch((Err)=>{\n      console.log('Saving API errors', Err);\n      setIsLoading(false);\n    }); */\n  };\n\n  const handleChangeAddSearchQueryWord = (e, index) => {\n    e.preventDefault();\n    const { target } = e;\n\n    let wordsArray = [...searchQueryWords];\n\n    let searchWords = [];\n\n    wordsArray[index].addedSearch = !wordsArray[index].addedSearch;\n    \n\n    wordsArray.sort((a, b) => {\n      if ( (a.searched ? 1 : a.addedSearch ? 2 : 3) < (b.searched ? 1 : b.addedSearch ? 2 : 3) ){\n        return -1;\n      }\n      if ( (a.searched ? 1 : a.addedSearch ? 2 : 3) > (b.searched ? 1 : b.addedSearch ? 2 : 3) ){\n        return 1;\n      }\n      return 0;\n    });\n    \n\n    setSearchQueryWords(wordsArray);\n\n    wordsArray.forEach(word => {\n      if (word.searched || word.addedSearch) {\n        searchWords.push(word.text);\n      }\n    });\n\n    /* if (searchWords.length === 1) {\n      setCustomSearchTags(searchData[searchWords[0]]);\n    } else {\n      setCustomSearchTags([]);\n    } */\n\n    PixaBayAPI.getCorrespondingImages(searchWords, language).then((Result)=>{\n\n      console.log('getCorrespondingImages', Result);\n\n      setImages(Result.hits);\n      let newImagesToDisplay = [...Result.hits];\n      setImagesToDisplay(newImagesToDisplay.splice(0, NB_IMAGE_TO_DISPLAY))\n      setIsLoading(false);\n      let customTags = getCustomTags(Result.hits, searchWords);\n      setCustomSearchTags(customTags);\n    }).catch((Err)=>{\n      console.log('Saving API errors', Err);\n      setIsLoading(false);\n    });\n  }\n\n  const handleChangeSelectedSearchTags = (e, index) => {\n    e.preventDefault();\n    const { target } = e;\n\n    let newSelectedSearchTags = [...selectedSearchTags];\n\n    let selectedTag = costumSearchTags[index].word;\n\n    if (newSelectedSearchTags.includes(selectedTag)) {\n      newSelectedSearchTags.splice(newSelectedSearchTags.findIndex(tag => tag === selectedTag),1);\n    } else {\n      newSelectedSearchTags.push(selectedTag);\n    }\n\n    setSelectedSearchTags(newSelectedSearchTags);\n\n    let newImagesToDisplay = [...images];\n\n    if (newSelectedSearchTags.length > 0) {\n      newImagesToDisplay = newImagesToDisplay.filter(image => {\n        let match = false;\n        newSelectedSearchTags.forEach(tag => {\n          if (!match) {\n            match = image.tags.includes(tag);\n          }\n        })\n\n        return match;\n      });\n\n      if (newImagesToDisplay.length > 0) {\n        if (newImagesToDisplay.length > NB_IMAGE_TO_DISPLAY) {\n          newImagesToDisplay = newImagesToDisplay.splice(0,NB_IMAGE_TO_DISPLAY);\n        }\n        setImagesToDisplay(newImagesToDisplay);\n      }\n    } else {\n      if (newImagesToDisplay.length > NB_IMAGE_TO_DISPLAY) {\n        newImagesToDisplay = newImagesToDisplay.splice(0,NB_IMAGE_TO_DISPLAY);\n      }\n      setImagesToDisplay(newImagesToDisplay);\n    }\n    \n  };\n\n  const handleChangeAutoSelectedSearchTags = (e, index) => {\n    e.preventDefault();\n    const { target } = e;\n\n    let newSelectedSearchTags = [...selectedSearchTags].splice(0, index + 1);\n\n    setSelectedSearchTags(newSelectedSearchTags);\n\n    let newImagesToDisplay = [...images];\n    let indexSelectedSearchTag = newSelectedSearchTags.length - 1;\n\n    if (newSelectedSearchTags.length > 0) {\n      newImagesToDisplay = newImagesToDisplay.filter(image => {\n        let match = false;\n        if (!match) {\n          match = image.tags.includes(newSelectedSearchTags[indexSelectedSearchTag]);\n        }\n\n        return match;\n      });\n\n      if (newImagesToDisplay.length > 0) {\n        if (newImagesToDisplay.length > NB_IMAGE_TO_DISPLAY) {\n          newImagesToDisplay = newImagesToDisplay.splice(0,NB_IMAGE_TO_DISPLAY);\n        }\n        setImagesToDisplay(newImagesToDisplay);\n      }\n    } else {\n      if (newImagesToDisplay.length > NB_IMAGE_TO_DISPLAY) {\n        newImagesToDisplay = newImagesToDisplay.splice(0,NB_IMAGE_TO_DISPLAY);\n      }\n      setImagesToDisplay(newImagesToDisplay);\n    }\n    \n  };\n\n  const scrollToRef = (ref) => ref.current.scrollIntoView({behavior: 'smooth'}); /* window.scrollTo(0, ref.current.offsetTop) */\n\n  useEffect(() => {\n      scrollToRef(thumbPreview);\n  }, [thumbBgImage]);\n\n  const handleChangeThumbBgImage = (e, index) => {\n    e.preventDefault();\n    const { target } = e;\n\n    /* if (!playingPreview && thumbBgImage !== \"\") {\n      setPlayingPreview(true);\n    } */\n\n    if (thumbBgImage !== imagesToDisplay[index].fullHDURL) {\n      setIsLoadingThumbImage(true);\n    }\n    \n    setThumbBgImage(imagesToDisplay[index].fullHDURL);\n  };\n\n  const handleShowSimilarImages = (e, index) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    let tagToSelect = \"\";\n    let nbImagesForTag = 0;\n    let currentSelectedSearchTag = selectedSearchTags.length > 0 ? selectedSearchTags[selectedSearchTags.length - 1] : \"\";\n\n    imagesToDisplay[index].tags.split(\", \").forEach(tag => {\n      let tagFound = costumSearchTags.find(costumTag => costumTag.word === tag);\n\n      if (tagFound && tagFound.nbImages > nbImagesForTag && currentSelectedSearchTag !== tag && !selectedSearchTags.includes(tag)) {\n        tagToSelect = tagFound.word;\n        nbImagesForTag = tagFound.nbImages;\n      }\n    })\n\n    if (tagToSelect !== \"\") {\n      let newSelectedSearchTags = [...selectedSearchTags]; //.splice(0, selectedSearchTags.length - 1);\n\n      /* let tagExistIdx = newSelectedSearchTags.findIndex(tag => tag === tagToSelect);\n\n      if (tagExistIdx > -1) {\n        newSelectedSearchTags.splice(tagExistIdx, 1);\n      } */\n\n      newSelectedSearchTags.push(tagToSelect);\n      setSelectedSearchTags(newSelectedSearchTags);\n\n      let newImagesToDisplay = [...images];\n\n      let indexSelectedSearchTag = newSelectedSearchTags.length - 1;\n\n      if (newSelectedSearchTags.length > 0) {\n        newImagesToDisplay = newImagesToDisplay.filter(image => {\n          let match = false;\n          if (!match) {\n            match = image.tags.includes(newSelectedSearchTags[indexSelectedSearchTag]);\n          }\n\n          return match;\n        });\n\n        if (newImagesToDisplay.length > 0) {\n          if (newImagesToDisplay.length > NB_IMAGE_TO_DISPLAY) {\n            newImagesToDisplay = newImagesToDisplay.splice(0,NB_IMAGE_TO_DISPLAY);\n          }\n          setImagesToDisplay(newImagesToDisplay);\n        }\n      } else {\n        if (newImagesToDisplay.length > NB_IMAGE_TO_DISPLAY) {\n          newImagesToDisplay = newImagesToDisplay.splice(0,NB_IMAGE_TO_DISPLAY);\n        }\n        setImagesToDisplay(newImagesToDisplay);\n      }\n    }\n  }\n\n  const checkAsSimilarImages = (index) => {\n\n    let currentSelectedSearchTag = selectedSearchTags.length > 0 ? selectedSearchTags[selectedSearchTags.length - 1] : \"\";\n\n    let asSimilarImages = false;\n\n    imagesToDisplay[index].tags.split(\", \").forEach(tag => {\n      let tagFound = costumSearchTags.find(costumTag => costumTag.word === tag);\n\n      if (tagFound && currentSelectedSearchTag !== tag && !selectedSearchTags.includes(tag)) {\n        asSimilarImages = true;\n      }\n    })\n\n    return asSimilarImages;\n  }\n\n  const handleChangeThumbTemplate = (e, template) => {\n    e.preventDefault();\n    const { target } = e;\n\n    setThumbTemplate(template);\n  }\n\n  const handleChangeThumbFontSize = (e, fontSize) => {\n    e.preventDefault();\n    const { target } = e;\n\n    setThumbFontSize(fontSize);\n  }\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      setIsLoading(true);\n      setIsThumbCreated(true);\n      analyzeEntities(text);\n      setThumbText(text);\n      setThumbBgImage(\"\");\n    }\n  }\n\n  const handlePreviousSelectedSearchTag = (e) => {\n    e.preventDefault();\n    const { target } = e;\n\n    let newSelectedSearchTags = [...selectedSearchTags].splice(0, selectedSearchTags.length - 1);\n\n    setSelectedSearchTags(newSelectedSearchTags);\n\n    let newImagesToDisplay = [...images];\n    let indexSelectedSearchTag = newSelectedSearchTags.length - 1;\n\n    if (newSelectedSearchTags.length > 0) {\n      newImagesToDisplay = newImagesToDisplay.filter(image => {\n        let match = false;\n        if (!match) {\n          match = image.tags.includes(newSelectedSearchTags[indexSelectedSearchTag]);\n        }\n\n        return match;\n      });\n\n      if (newImagesToDisplay.length > 0) {\n        if (newImagesToDisplay.length > NB_IMAGE_TO_DISPLAY) {\n          newImagesToDisplay = newImagesToDisplay.splice(0,NB_IMAGE_TO_DISPLAY);\n        }\n        setImagesToDisplay(newImagesToDisplay);\n      }\n    } else {\n      if (newImagesToDisplay.length > NB_IMAGE_TO_DISPLAY) {\n        newImagesToDisplay = newImagesToDisplay.splice(0,NB_IMAGE_TO_DISPLAY);\n      }\n      setImagesToDisplay(newImagesToDisplay);\n    }\n  }\n\n  const handleOverTextZonePosition = (e, positionNo) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { target } = e;\n\n    if (thumbTextZoneAllowPreview) {\n      setThumbPreviewTextClass(TEXT_ZONE_POSITION_CLASS[positionNo]);\n    }\n    \n  }\n\n  const handleOutTextZonePosition = (e) => {\n    e.preventDefault();\n    const { target } = e;\n\n    setThumbPreviewTextClass({});\n    setThumbTextZoneAllowPreview(true);\n    setTextZoneBg(TEXT_ZONE_BG_DEFAULT);\n  }\n\n  const handleClickTextZonePosition = (e, positionNo) => {\n    e.preventDefault();\n    const { target } = e;\n\n    let newThumbTextClass = {};\n\n    if (thumbTextZoneAllowPreview || isMobile) {\n      newThumbTextClass = {...thumbPreviewTextClass};\n      setThumbTextClass(TEXT_ZONE_POSITION_CLASS[positionNo]);\n      setThumbPreviewTextClass({});\n      setThumbTextZoneAllowPreview(false);\n      \n      setTextZoneBg(\"text-transparent\");\n    } else {\n      newThumbTextClass = {...thumbPreviewTextClass};\n      setThumbTextZoneAllowPreview(true);\n      setTextZoneBg(TEXT_ZONE_BG_DEFAULT);\n      setThumbPreviewTextClass(TEXT_ZONE_POSITION_CLASS[positionNo]);\n    }\n    \n  }\n\n  const handlePlayingPreview = (e, play) => {\n    e.preventDefault();\n    const { target } = e;\n\n    setPlayingPreview(play);\n  }\n\n  const handleSelectAllText = (e) => {\n    const { target } = e;\n    if (thumbText !== '') {\n      target.select();\n    }\n    \n  }\n\n  useEffect(() => {\n    setThumbPreviewWidth(thumbPreview.current.offsetWidth);\n  }, [thumbPreview]);\n\n  const getComputedPixelSize = (pixel) => {\n    let computedPixelSize = 0;\n    let currentThuumbPreviewWidth = thumbPreviewWidth;\n\n    if (thumbPreviewWidth === 0) {\n      currentThuumbPreviewWidth = thumbPreview.current.offsetWidth;\n      setThumbPreviewWidth(currentThuumbPreviewWidth);\n    }\n\n    computedPixelSize = currentThuumbPreviewWidth / 672 * pixel;\n\n    return computedPixelSize;\n  }\n\n  const getComputedPixelSizeSpec = (pixel, size) => {\n    let computedPixelSize = 0;\n    let currentThuumbPreviewWidth = size;\n\n    computedPixelSize = currentThuumbPreviewWidth / 672 * pixel;\n\n    return computedPixelSize;\n  }\n\n  /* const handleResize = (movementX, movementY) => {\n\n    let currentMaxWidth = {...textMaxWidth};\n\n    setTextMaxWidth(currentMaxWidth + movementX);\n\n    console.log(handleResize, movementX);\n  }; */\n\n  const handleSaveAsImage = async () => {\n\n    let container = document.createElement(\"div\");\n    container.classList.add(\"overflow-hidden\");\n    container.classList.add(\"fixed\");\n\n    let preview = document.createElement(\"div\");\n\n    let html = renderScreenShot()\n\n    preview.innerHTML = ReactDOMServer.renderToStaticMarkup(html);\n\n    document.body.appendChild(container);\n\n    container.appendChild(preview);\n\n    /* htmlToImage.toPng(preview)\n    .then(function (dataUrl) {\n\n        let link = document.createElement(\"a\");\n        link.download = \"thumb.png\";\n        link.href = dataUrl;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n\n        document.body.removeChild(container);\n    })\n    .catch(function (error) {\n        console.error('oops, something went wrong!', error);\n    }); */\n\n    let blob = await htmlToImage.toBlob(preview);\n\n    saveAs(blob, \"thumb.png\");\n    document.body.removeChild(container);\n\n  }\n\n    const renderScreenShot = () => {\n        return <div className=\"aspect-w-16 aspect-h-9 bg-gray-100 overflow-hidden\" style={{ width: \"1920px\", height: \"1080px\" }} ref={thumbPreview}>\n                <div className=\"overflow-hidden\"><img src={thumbBgImage} alt=\"ThumbBg\" className={`select-none w-full h-full object-center object-cover`} /></div>\n\n                {thumbPreview && thumbTextClass.containerClass && !thumbPreviewTextClass.containerClass && <div className={`pointer-events-none flex w-full h-full ${thumbTextClass.containerClass} ${thumbTemplate === 3 && 'bg-gray-900 bg-opacity-15'} ${thumbTemplate === 6 && 'bg-gray-50 bg-opacity-20'}`}>\n                  <div className={`min-w-min pointer-events-none ${thumbTextClass.zoneClass.replaceAll(\"sm\", \"md\")} ${thumbTemplate === 1 && 'bg-gray-900 bg-opacity-50'} ${thumbTemplate === 4 && 'bg-gray-50 bg-opacity-70'}`} style={{maxWidth: `${textMaxWidth}%`, \n                  margin: `${getComputedPixelSizeSpec(thumbTextClass.margins[0], 1920)}px ${getComputedPixelSizeSpec(thumbTextClass.margins[1], 1920)}px ${getComputedPixelSizeSpec(thumbTextClass.margins[2], 1920)}px ${getComputedPixelSizeSpec(thumbTextClass.margins[3], 1920)}px`}}>\n                    <div className={`select-none pointer-events-none font-medium ${thumbTextClass.textClass} ${thumbTemplate >= 4 ? 'text-gray-900' : 'text-white'}`} style={thumbTemplate >= 4 ? {\"textShadow\": TEXT_SHADOWS.white, \n                    padding: `${getComputedPixelSizeSpec(thumbTextClass.paddings[0], 1920)}px ${getComputedPixelSizeSpec(thumbTextClass.paddings[1], 1920)}px ${getComputedPixelSizeSpec(thumbTextClass.paddings[2], 1920)}px ${getComputedPixelSizeSpec(thumbTextClass.paddings[3], 1920)}px`,\n                    fontSize: `${getComputedPixelSizeSpec(TEXT_ZONE_FONT_SIZE[thumbFontSize][0], 1920)}px`,\n                    lineHeight: `${getComputedPixelSizeSpec(TEXT_ZONE_FONT_SIZE[thumbFontSize][1], 1920)}px`\n                    } \n                    : \n                    {\"textShadow\": TEXT_SHADOWS.black, \n                    padding: `${getComputedPixelSizeSpec(thumbTextClass.paddings[0], 1920)}px ${getComputedPixelSizeSpec(thumbTextClass.paddings[1], 1920)}px ${getComputedPixelSizeSpec(thumbTextClass.paddings[2], 1920)}px ${getComputedPixelSizeSpec(thumbTextClass.paddings[3], 1920)}px`,\n                    fontSize: `${getComputedPixelSizeSpec(TEXT_ZONE_FONT_SIZE[thumbFontSize][0], 1920)}px`,\n                    lineHeight: `${getComputedPixelSizeSpec(TEXT_ZONE_FONT_SIZE[thumbFontSize][1], 1920)}px`\n                    }}>{thumbText}</div>\n                  </div>\n                </div>}\n\n          {/* {thumbPreview && thumbTextClass.containerClass && !thumbPreviewTextClass.containerClass && <div className={`pointer-events-none flex w-full h-full ${thumbTextClass.containerClass} ${thumbTemplate === 3 && 'bg-gray-900 bg-opacity-15'} ${thumbTemplate === 6 && 'bg-gray-50 bg-opacity-20'}`} style={{ transform: `scale(${1920 / thumbPreviewWidth}, ${1920 / thumbPreviewWidth})`}}> \n            <div className={`min-w-min pointer-events-none ${thumbTextClass.zoneClass} ${thumbTemplate === 1 && 'bg-gray-900 bg-opacity-50'} ${thumbTemplate === 4 && 'bg-gray-50 bg-opacity-70'}`} style={{maxWidth: `${textMaxWidth}%`, \n            margin: `${getComputedPixelSize(thumbTextClass.margins[0])}px ${getComputedPixelSize(thumbTextClass.margins[1])}px ${getComputedPixelSize(thumbTextClass.margins[2])}px ${getComputedPixelSize(thumbTextClass.margins[3])}px`}}>\n              <div className={`select-none pointer-events-none font-medium ${thumbTextClass.textClass} ${thumbTemplate >= 4 ? 'text-gray-900' : 'text-white'}`} style={thumbTemplate >= 4 ? {\"textShadow\": TEXT_SHADOWS.white, \n              padding: `${getComputedPixelSize(thumbTextClass.paddings[0])}px ${getComputedPixelSize(thumbTextClass.paddings[1])}px ${getComputedPixelSize(thumbTextClass.paddings[2])}px ${getComputedPixelSize(thumbTextClass.paddings[3])}px`,\n              fontSize: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][0])}px`,\n              lineHeight: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][1])}px`\n              } \n              : \n              {\"textShadow\": TEXT_SHADOWS.black, \n              padding: `${getComputedPixelSize(thumbTextClass.paddings[0])}px ${getComputedPixelSize(thumbTextClass.paddings[1])}px ${getComputedPixelSize(thumbTextClass.paddings[2])}px ${getComputedPixelSize(thumbTextClass.paddings[3])}px`,\n              fontSize: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][0])}px`,\n              lineHeight: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][1])}px`\n              }}>{thumbText}</div>\n            </div>\n          </div>} */}\n\n        </div>\n    }\n\n  return (\n    <div className={`min-h-screen flex-col lg:flex-row items-start justify-center bg-gray-50 py-20 lg:py-12 px-4 sm:px-6 lg:px-8 space-y-8 lg:space-y-0 lg:space-x-40 ${isHidden ? 'hidden' : 'flex'}`}>\n      <div className=\"lg:max-w-2xl w-full space-y-3\">\n        <div className=\"flex flex-col items-start justify-start\">\n          <h2 className=\"ml-2 text-left text-3xl font-extrabold text-gray-900 select-none\">Création simplifiée</h2>\n        </div>\n        <div className=\"flex flex-col items-center justify-center space-y-4 w-full\">\n          <div className=\"flex flex-row item-center justify-center align-middle space-x-2 bg-gray-100 p-2 rounded-md w-full\">\n            <div className=\"w-full\">\n              <label htmlFor=\"texte\" className=\"sr-only\">\n                Écrivez le texte qui s'affichera dans la vignette\n              </label>\n              <textarea\n                id=\"texte\"\n                onChange={handleChange}\n                value={text}\n                name=\"texte\"\n                type=\"textarea\"\n                onClick={handleSelectAllText}\n                required\n                className=\"resize-none select-all appearance-none rounded-none relative block w-full h-20 max-h-20 px-3 py-2 border border-gray-300 placeholder-gray-400 text-gray-900 rounded-md focus:placeholder-transparent focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Écrivez le texte qui s'affichera dans la vignette\"\n                onKeyDown={handleKeyDown}\n              />\n            </div>\n            <div onClick={handleCreateThumb} className=\"rounded-md select-none font-medium py-1 px-2 text-center text-sm text-white shadow align-middle bg-blue-600 hover:bg-blue-500 cursor-pointer border-2 border-blue-600 hover:border-blue-500 flex items-center justify-center\">\n              {isLoading ? <LoadingSpinner className=\"h-5 w-5 text-white\" /> : 'GO'}\n            </div>\n          </div>\n          \n        </div>\n        {isThumbCreated ? <>\n\n        {(selectedSearchTags.length > 0 || searchQueryWords.length > 0) && <div className=\"flex flex-col flex-wrap item-center justify-start align-middle bg-gray-100 py-1 px-2 rounded-md w-full\">\n          <div className=\"flex flex-row flex-wrap item-center justify-start align-middle\">\n            {searchQueryWords.length > 0 && searchQueryWords.map((word, index) => {\n              return <div key={word.text + '-words'} className={`flex flex-row flex-wrap item-center justify-start align-middle rounded-full my-1 ${(word.searched || word.addedSearch) && searchQueryWords[index + 1] && (!searchQueryWords[index + 1].addedSearch) ? 'mr-8' : (word.searched || word.addedSearch) ? 'mr-px' : 'mr-1 ml-1' }`}>\n                {(!word.searched && !(word.addedSearch && !word.searched)) && <div onClick={event => handleChangeAddSearchQueryWord(event, index)}  className={\"rounded-full mx-0.5 text-center text-sm lg:text-xs flex items-center justify-center align-middle cursor-pointer border-2 text-blue-600 hover:text-blue-500 border-gray-100\"}>\n                  <PlusCircleIcon className=\"lg:h-5 lg:w-5 h-6 w-6\"/>\n                </div>}\n                <div onClick={event => handleChangeQueryWords(event, index)} className={`${word.searched && searchQueryWords[index + 1] && (searchQueryWords[index + 1].addedSearch) ? 'rounded-l-full' : word.addedSearch && searchQueryWords[index + 1] && (searchQueryWords[index + 1].addedSearch) ? '' : word.addedSearch ? 'rounded-r-full' : 'rounded-full' } py-0.5 px-2 text-center text-sm lg:text-xs flex items-center justify-center align-middle cursor-pointer border-2 select-none ` + \n                  (word.searched ? \"text-white bg-blue-600 hover:bg-blue-500 cursor-pointer border-2 border-blue-600 hover:border-blue-500\" : (word.addedSearch && !word.searched) ? \"text-white bg-blue-500 hover:bg-blue-400 cursor-pointer border-2 border-blue-500 hover:border-blue-400\" : \"text-gray-900 bg-gray-300 hover:bg-gray-200 border-gray-300 hover:border-gray-200 rounded-r-full\")}>\n                  {word.text} {word.addedSearch && <XCircleIcon className=\"ml-2 h-4 w-4\"/>}\n                </div>\n              </div>\n            })}\n          </div>\n          <div className=\"flex flex-row flex-wrap item-center justify-start align-middle\">\n            {selectedSearchTags.length > 0 && <div onClick={handlePreviousSelectedSearchTag} className=\"flex flex-row flex-wrap item-center justify-start align-middle m-1 cursor-pointer\"><ArrowCircleLeftIcon className=\"lg:h-5 lg:w-5 h-6 w-6 text-blue-500\"/></div>}\n            {selectedSearchTags.map((tag, index) => {\n                return <div onClick={event => handleChangeAutoSelectedSearchTags(event, index)} value={index} key={tag + '-selectedSearchTags'} className={\"select-none rounded-md ml-1 text-center text-sm lg:text-xs flex items-center justify-center align-middle cursor-pointer \" + \n                (selectedSearchTags.length - 1 === index ? \"text-blue-500 cursor-pointer\" : \"text-gray-500 cursor-pointer\")}>\n                  {tag} {selectedSearchTags.length - 1 !== index && '/'}\n                </div>\n              })}\n          </div>\n        </div>}\n\n        {isThumbCreated && imagesToDisplay.length > 0 && !isLoading && <div className=\"flex flex-row w-full mt-1 items-center justify-center\">{isMobile ? <FingerPrintIcon className=\"h-4 w-4 text-green-500 mr-1\" /> : <CursorClickIcon className=\"h-4 w-4 text-green-500 mr-1\" />}<div className=\"select-none text-green-500 text-xs text-center\">Sélectionnez une image ci-dessous</div></div>}\n\n        <div className=\"container grid grid-cols-3 gap-1 lg:grid-cols-4 lg:gap-2 mx-auto\">\n          {imagesToDisplay.map((image, index) => {\n            return <LibraryMediaContainer key={image.id} alt={image.tags} onClick={event => handleChangeThumbBgImage(event, index)} src={image.previewURL} hoverOptions={checkAsSimilarImages(index) ? [<ViewGridAddIcon onClick={event => handleShowSimilarImages(event, index)} className=\"h-4 w-4 lg:h-5 lg:w-5 text-white hover:text-opacity-75\" />] : []} />\n          })}\n        </div></> : <></>}\n      </div>\n      <div className=\"lg:max-w-2xl w-full\" ref={thumbPreview}>\n        {isThumbCreated && thumbBgImage !== \"\" && <>\n        <div className=\"w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md shadow overflow-hidden\">\n          {thumbBgImage !== \"\" && <div className=\"overflow-hidden\"><img src={thumbBgImage} alt=\"ThumbBg\" onLoad={event => {handlePlayingPreview(event, true); setIsLoadingThumbImage(false)}} onAnimationStart={event => handlePlayingPreview(event, true)} onAnimationEnd={event => handlePlayingPreview(event, false)} className={`${playingPreview ? 'zoom-in-zoom-out' : 'zoom-ended'} select-none rounded-md w-full h-full object-center object-cover`} /></div>}\n\n          <div className={`flex flex-col w-full h-full p-${TEXT_ZONE_POSITION_SPACE} space-y-${TEXT_ZONE_POSITION_SPACE}`} onMouseLeave={event => handleOutTextZonePosition(event)}>\n            {[1, 4, 2, 3, 5, 6].includes(thumbTemplate) && <div className={`flex flex-auto flex-row space-x-${TEXT_ZONE_POSITION_SPACE}`}>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 1)} onMouseOver={event => handleOverTextZonePosition(event, 1)}>{DEV_POSITION_ZONES_NUMBERS[5]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 2)} onMouseOver={event => handleOverTextZonePosition(event, 2)}>{DEV_POSITION_ZONES_NUMBERS[6]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 3)} onMouseOver={event => handleOverTextZonePosition(event, 3)}>{DEV_POSITION_ZONES_NUMBERS[7]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 4)} onMouseOver={event => handleOverTextZonePosition(event, 4)}>{DEV_POSITION_ZONES_NUMBERS[8]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 5)} onMouseOver={event => handleOverTextZonePosition(event, 5)}>{DEV_POSITION_ZONES_NUMBERS[9]}</div>\n            </div>}\n            <div className={`flex flex-auto flex-row space-x-${TEXT_ZONE_POSITION_SPACE}`}>\n              {[1, 4, 2, 3, 5, 6].includes(thumbTemplate) && <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 6)} onMouseOver={event => handleOverTextZonePosition(event, 6)}>{DEV_POSITION_ZONES_NUMBERS[33]}</div>}\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 7)} onMouseOver={event => handleOverTextZonePosition(event, 7)}>{DEV_POSITION_ZONES_NUMBERS[34]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 8)} onMouseOver={event => handleOverTextZonePosition(event, 8)}>{DEV_POSITION_ZONES_NUMBERS[35]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 9)} onMouseOver={event => handleOverTextZonePosition(event, 9)}>{DEV_POSITION_ZONES_NUMBERS[36]}</div>\n              {[1, 4, 2, 3, 5, 6].includes(thumbTemplate) && <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 10)} onMouseOver={event => handleOverTextZonePosition(event, 10)}>{DEV_POSITION_ZONES_NUMBERS[37]}</div>}\n            </div>\n            <div className={`flex flex-auto flex-row space-x-${TEXT_ZONE_POSITION_SPACE}`}>\n              {[1, 4, 2, 3, 5, 6].includes(thumbTemplate) && <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 11)} onMouseOver={event => handleOverTextZonePosition(event, 11)}>{DEV_POSITION_ZONES_NUMBERS[33]}</div>}\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 12)} onMouseOver={event => handleOverTextZonePosition(event, 12)}>{DEV_POSITION_ZONES_NUMBERS[34]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 13)} onMouseOver={event => handleOverTextZonePosition(event, 13)}>{DEV_POSITION_ZONES_NUMBERS[35]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 14)} onMouseOver={event => handleOverTextZonePosition(event, 14)}>{DEV_POSITION_ZONES_NUMBERS[36]}</div>\n              {[1, 4, 2, 3, 5, 6].includes(thumbTemplate) && <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 15)} onMouseOver={event => handleOverTextZonePosition(event, 15)}>{DEV_POSITION_ZONES_NUMBERS[37]}</div>}\n            </div>\n            <div className={`flex flex-auto flex-row space-x-${TEXT_ZONE_POSITION_SPACE}`}>\n              {[1, 4, 2, 3, 5, 6].includes(thumbTemplate) && <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 16)} onMouseOver={event => handleOverTextZonePosition(event, 16)}>{DEV_POSITION_ZONES_NUMBERS[33]}</div>}\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 17)} onMouseOver={event => handleOverTextZonePosition(event, 17)}>{DEV_POSITION_ZONES_NUMBERS[34]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 18)} onMouseOver={event => handleOverTextZonePosition(event, 18)}>{DEV_POSITION_ZONES_NUMBERS[35]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 19)} onMouseOver={event => handleOverTextZonePosition(event, 19)}>{DEV_POSITION_ZONES_NUMBERS[36]}</div>\n              {[1, 4, 2, 3, 5, 6].includes(thumbTemplate) && <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 20)} onMouseOver={event => handleOverTextZonePosition(event, 20)}>{DEV_POSITION_ZONES_NUMBERS[37]}</div>}\n            </div>\n            {[1, 4, 2, 3, 5, 6].includes(thumbTemplate) && <div className={`flex flex-auto flex-row space-x-${TEXT_ZONE_POSITION_SPACE}`}>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 21)} onMouseOver={event => handleOverTextZonePosition(event, 21)}>{DEV_POSITION_ZONES_NUMBERS[33]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 22)} onMouseOver={event => handleOverTextZonePosition(event, 22)}>{DEV_POSITION_ZONES_NUMBERS[34]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 23)} onMouseOver={event => handleOverTextZonePosition(event, 23)}>{DEV_POSITION_ZONES_NUMBERS[35]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 24)} onMouseOver={event => handleOverTextZonePosition(event, 24)}>{DEV_POSITION_ZONES_NUMBERS[36]}</div>\n              <div className={`flex-auto h-full ${TEXT_ZONE_BG}`} onClick={event => handleClickTextZonePosition(event, 25)} onMouseOver={event => handleOverTextZonePosition(event, 25)}>{DEV_POSITION_ZONES_NUMBERS[37]}</div>\n            </div>}\n          </div>\n\n          {thumbPreview && thumbPreviewTextClass.containerClass && thumbTextZoneAllowPreview && <div className={`pointer-events-none flex w-full h-full ${thumbPreviewTextClass.containerClass} ${thumbTemplate === 3 && 'bg-gray-800 bg-opacity-15'}  ${thumbTemplate === 6 && 'bg-gray-50 bg-opacity-20'}`}>\n            <div className={`min-w-min pointer-events-none ${thumbPreviewTextClass.zoneClass} ${thumbTemplate === 1 && 'bg-gray-900 bg-opacity-40'} ${thumbTemplate === 4 && 'bg-gray-50 bg-opacity-60'} ${'border-3 border-blue-600 border-opacity-75'} rounded`} style={{maxWidth: `${parseInt(textMaxWidth) + 2}%`, \n            margin: `${getComputedPixelSize(thumbPreviewTextClass.margins[0] /* - (![1, 4].includes(thumbTemplate) && thumbPreviewTextClass.margins[0] === 60 ? 20 : 0) */)}px ${getComputedPixelSize(thumbPreviewTextClass.margins[1])}px ${getComputedPixelSize(thumbPreviewTextClass.margins[2] /* - (![1, 4].includes(thumbTemplate) && thumbPreviewTextClass.margins[2] === 60 ? 20 : 0) */)}px ${getComputedPixelSize(thumbPreviewTextClass.margins[3])}px`\n            }}>\n              <div className={`select-none pointer-events-none align-middle font-medium rounded ${thumbPreviewTextClass.textClass} ${thumbTemplate >= 4 ? 'text-gray-900' : 'text-white'}`} style={thumbTemplate >= 4 ? {\"textShadow\": TEXT_SHADOWS.white, \n              padding: `${getComputedPixelSize(thumbPreviewTextClass.paddings[0])}px ${getComputedPixelSize(thumbPreviewTextClass.paddings[1])}px ${getComputedPixelSize(thumbPreviewTextClass.paddings[2])}px ${getComputedPixelSize(thumbPreviewTextClass.paddings[3])}px`,\n              fontSize: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][0])}px`,\n              lineHeight: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][1])}px`\n              } \n              : \n              {\"textShadow\": TEXT_SHADOWS.black, \n              padding: `${getComputedPixelSize(thumbPreviewTextClass.paddings[0])}px ${getComputedPixelSize(thumbPreviewTextClass.paddings[1])}px ${getComputedPixelSize(thumbPreviewTextClass.paddings[2])}px ${getComputedPixelSize(thumbPreviewTextClass.paddings[3])}px`,\n              fontSize: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][0])}px`,\n              lineHeight: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][1])}px`\n              }}>{thumbText}</div>\n            </div>\n          </div>}\n\n          {thumbPreview && thumbTextClass.containerClass && !thumbPreviewTextClass.containerClass && <div className={`pointer-events-none flex w-full h-full ${thumbTextClass.containerClass} ${thumbTemplate === 3 && 'bg-gray-900 bg-opacity-15'} ${thumbTemplate === 6 && 'bg-gray-50 bg-opacity-20'}`}>\n            <div className={`min-w-min pointer-events-none ${thumbTextClass.zoneClass} ${thumbTemplate === 1 && 'bg-gray-900 bg-opacity-50'} ${thumbTemplate === 4 && 'bg-gray-50 bg-opacity-70'}`} style={{maxWidth: `${textMaxWidth}%`, \n            margin: `${getComputedPixelSize(thumbTextClass.margins[0] /* - (![1, 4].includes(thumbTemplate) && thumbTextClass.margins[0] === 60 ? 20 : 0) */)}px ${getComputedPixelSize(thumbTextClass.margins[1])}px ${getComputedPixelSize(thumbTextClass.margins[2] /* - (![1, 4].includes(thumbTemplate) && thumbTextClass.margins[2] === 60 ? 20 : 0) */)}px ${getComputedPixelSize(thumbTextClass.margins[3])}px`}}>\n              {/* <Resizer onResize={handleResize} sides={[\"left\", \"right\"]} /> */}\n              <div className={`select-none pointer-events-none font-medium ${thumbTextClass.textClass} ${thumbTemplate >= 4 ? 'text-gray-900' : 'text-white'}`} style={thumbTemplate >= 4 ? {\"textShadow\": TEXT_SHADOWS.white, \n              padding: `${getComputedPixelSize(thumbTextClass.paddings[0])}px ${getComputedPixelSize(thumbTextClass.paddings[1])}px ${getComputedPixelSize(thumbTextClass.paddings[2])}px ${getComputedPixelSize(thumbTextClass.paddings[3])}px`,\n              fontSize: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][0])}px`,\n              lineHeight: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][1])}px`\n              } \n              : \n              {\"textShadow\": TEXT_SHADOWS.black, \n              padding: `${getComputedPixelSize(thumbTextClass.paddings[0])}px ${getComputedPixelSize(thumbTextClass.paddings[1])}px ${getComputedPixelSize(thumbTextClass.paddings[2])}px ${getComputedPixelSize(thumbTextClass.paddings[3])}px`,\n              fontSize: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][0])}px`,\n              lineHeight: `${getComputedPixelSize(TEXT_ZONE_FONT_SIZE[thumbFontSize][1])}px`\n              }}>{thumbText}</div>\n            </div>\n          </div>}\n\n          {isLoadingThumbImage && <div className=\"flex w-full h-full bg-gray-800 bg-opacity-70 items-center justify-center p-3\"><LoadingSpinner className=\"h-8 w-8 text-white\" /></div>}\n\n        </div>\n        <div className=\"flex flex-row flex-wrap item-center justify-start align-middle w-full mt-2\">\n          {thumbBgImage !== \"\" && <div className=\"relative w-full\">\n            {!playingPreview && <PlayIcon onClick={event => handlePlayingPreview(event, true)} className=\"absolute right-10 top-0 h-7 w-7 -mt-1 text-blue-600 hover:text-blue-500 cursor-pointer\" />}\n            <CameraIcon onClick={handleSaveAsImage} className=\"absolute right-1 top-0 h-7 w-7 -mt-1 text-blue-600 hover:text-blue-500 cursor-pointer\"/>\n          </div>}\n          <div className=\"flex flex-row w-3/4 md:w-full mt-0 items-center ml-1\">{isMobile ? <FingerPrintIcon className=\"h-4 w-4 text-green-500 mr-1 md:self-center self-start\" /> : <CursorClickIcon className=\"h-4 w-4 text-green-500 mr-1\" />}<div className=\"select-none text-green-500 text-xs text-left md:text-center\">Cliquez dans la vignette pour déplacer le texte</div></div>\n        </div>\n        \n        {/* {thumbBgImage !== \"\" && <div className=\"relative pt-1\">\n          <div className=\"overflow-hidden h-1 mb-4 text-xs flex rounded-full bg-blue-200\">\n            <div className=\"animationProgress shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-600\"></div>\n          </div>\n        </div>} */}\n        <div className=\"flex flex-col lg:flex-row flex-wrap item-center justify-start align-middle w-full mt-4\">\n          <div className=\"flex flex-row\">\n            <div className={\"select-none rounded-md m-1 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n              Taille du texte :\n            </div>\n            <div className={\"select-none rounded-md m-1 px-2 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n              <input type=\"range\" id=\"fontSize\" step={1} name=\"fontSize\" min=\"0\" max=\"10\" onChange={e => setThumbFontSize(e.target.value)} defaultValue={4} />\n            </div>\n          </div>\n          \n          {/* <div onClick={event => handleChangeThumbFontSize(event, 1)} className={\"select-none rounded-md m-0.5 py-0.5 px-2 text-center font-medium text-xs flex items-center justify-center align-middle cursor-pointer border-2 leading-none \" + \n            (thumbFontSize === 1 ? \"text-white bg-blue-600 hover:bg-blue-500 cursor-pointer border-2 border-blue-600 hover:border-blue-500\" : \"text-gray-900 border-gray-50 hover:bg-blue-100 hover:border-blue-100\")}>\n            1\n          </div>\n          <div onClick={event => handleChangeThumbFontSize(event, 2)} className={\"select-none rounded-md m-0.5 py-0.5 px-2 text-center font-medium text-xs flex items-center justify-center align-middle cursor-pointer border-2 leading-none \" + \n            (thumbFontSize === 2 ? \"text-white bg-blue-600 hover:bg-blue-500 cursor-pointer border-2 border-blue-600 hover:border-blue-500\" : \"text-gray-900 border-gray-50 hover:bg-blue-100 hover:border-blue-100\")}> \n            2\n          </div>\n          <div onClick={event => handleChangeThumbFontSize(event, 3)} className={\"select-none rounded-md m-0.5 py-0.5 px-2 text-center font-medium text-xs flex items-center justify-center align-middle cursor-pointer border-2 leading-none \" + \n            (thumbFontSize === 3 ? \"text-white bg-blue-600 hover:bg-blue-500 cursor-pointer border-2 border-blue-600 hover:border-blue-500\" : \"text-gray-900 border-gray-50 hover:bg-blue-100 hover:border-blue-100\")}>\n            3\n          </div>\n          <div onClick={event => handleChangeThumbFontSize(event, 4)} className={\"select-none rounded-md m-0.5 py-0.5 px-2 text-center font-medium text-xs flex items-center justify-center align-middle cursor-pointer border-2 leading-none \" + \n            (thumbFontSize === 4 ? \"text-white bg-blue-600 hover:bg-blue-500 cursor-pointer border-2 border-blue-600 hover:border-blue-500\" : \"text-gray-900 border-gray-50 hover:bg-blue-100 hover:border-blue-100\")}>\n            4\n          </div>\n          <div onClick={event => handleChangeThumbFontSize(event, 5)} className={\"select-none rounded-md m-0.5 py-0.5 px-2 text-center font-medium text-xs flex items-center justify-center align-middle cursor-pointer border-2 leading-none \" + \n            (thumbFontSize === 5 ? \"text-white bg-blue-600 hover:bg-blue-500 cursor-pointer border-2 border-blue-600 hover:border-blue-500\" : \"text-gray-900 border-gray-50 hover:bg-blue-100 hover:border-blue-100\")}>\n            5\n          </div>\n          <div onClick={event => handleChangeThumbFontSize(event, 6)} className={\"select-none rounded-md m-0.5 py-0.5 px-2 text-center font-medium text-xs flex items-center justify-center align-middle cursor-pointer border-2 leading-none \" + \n            (thumbFontSize === 6 ? \"text-white bg-blue-600 hover:bg-blue-500 cursor-pointer border-2 border-blue-600 hover:border-blue-500\" : \"text-gray-900 border-gray-50 hover:bg-blue-100 hover:border-blue-100\")}>\n            6\n          </div>\n          <div onClick={event => handleChangeThumbFontSize(event, 7)} className={\"select-none rounded-md m-0.5 py-0.5 px-2 text-center font-medium text-xs flex items-center justify-center align-middle cursor-pointer border-2 leading-none \" + \n            (thumbFontSize === 7 ? \"text-white bg-blue-600 hover:bg-blue-500 cursor-pointer border-2 border-blue-600 hover:border-blue-500\" : \"text-gray-900 border-gray-50 hover:bg-blue-100 hover:border-blue-100\")}>\n            7\n          </div> */}\n          <div className=\"flex flex-row\">\n            <div className={\"select-none rounded-md m-1 lg:pl-6 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n              Largeur du texte :\n            </div>\n            <div className={\"select-none rounded-md m-1 px-2 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n              <input type=\"range\" id=\"textWidth\" step={1} name=\"textWidth\" min=\"0\" max=\"100\" onChange={e => setTextMaxWidth(e.target.value)} defaultValue={DEFAULT_TEXT_MAX_WIDTH} />\n            </div>\n          </div>\n          \n        </div>\n        <div className=\"container grid grid-cols-3 gap-2 mx-auto mt-4\">\n          <div onClick={event => handleChangeThumbTemplate(event, 4)} className={`w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md overflow-hidden border-2 ${thumbTemplate === 4 ? `border-blue-600 shadow ${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-blue-400 hover:${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"w-full h-full object-center object-cover\" />}\n            <div className=\"flex flex-col w-full h-full shadow justify-center items-center\">\n              <div className=\"w-full rounded-t-md\"></div>\n              <div className=\"justify-center items-center text-center align-middle flex flex-row bg-gray-50 bg-opacity-75 rounded-sm\">\n                <div className=\"pt-1 pb-1 px-2 lg:px-4 text-center text-gray-900 align-middle font-medium select-none\" style={isMobile ? {\"textShadow\": TEXT_SHADOWS.white, fontSize: `${getComputedPixelSize(30)}px`} : {\"textShadow\": TEXT_SHADOWS.white, fontSize: `${getComputedPixelSize(30)}px`}}>Abc</div>\n              </div>\n              <div className=\"w-full rounded-b-md\"></div>\n            </div>\n          </div>\n          <div onClick={event => handleChangeThumbTemplate(event, 2)} className={`w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md overflow-hidden border-2 ${thumbTemplate === 2 ? `border-blue-600 shadow ${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-blue-400 hover:${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"w-full h-full object-center object-cover\" />}\n            <div className=\"flex flex-col w-full h-full shadow\">\n              <div className=\"w-full flex-auto rounded-t-md\"></div>\n              <div className=\"w-full flex-auto justify-center items-center text-center align-middle flex flex-row\">\n                <div className=\"py-2 px-24 text-center text-white align-middle font-medium select-none\" style={isMobile ? {\"textShadow\": TEXT_SHADOWS.white, fontSize: `${getComputedPixelSize(35)}px`} : {\"textShadow\": TEXT_SHADOWS.black, fontSize: `${getComputedPixelSize(35)}px`}}>Abc</div>\n              </div>\n              <div className=\"w-full flex-auto rounded-b-md\"></div>\n            </div>\n          </div>\n          <div onClick={event => handleChangeThumbTemplate(event, 3)} className={`w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md overflow-hidden border-2 ${thumbTemplate === 3 ? `border-blue-600 shadow ${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-blue-400 hover:${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"w-full h-full object-center object-cover\" />}\n            <div className=\"bg-gray-900 bg-opacity-20\"></div>\n            <div className=\"flex flex-col w-full h-full shadow\">\n              <div className=\"w-full flex-auto rounded-t-md\"></div>\n              <div className=\"w-full flex-auto justify-center items-center text-center align-middle flex flex-row\">\n                <div className=\"py-2 px-24 text-center text-white align-middle font-medium select-none\" style={isMobile ? {\"textShadow\": TEXT_SHADOWS.black, fontSize: `${getComputedPixelSize(35)}px`} : {\"textShadow\": TEXT_SHADOWS.black, fontSize: `${getComputedPixelSize(35)}px`}}>Abc</div>\n              </div>\n              <div className=\"w-full flex-auto rounded-b-md\"></div>\n            </div>\n          </div>\n          <div onClick={event => handleChangeThumbTemplate(event, 1)} className={`w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md overflow-hidden border-2 ${thumbTemplate === 1 ? `border-blue-600 shadow ${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-blue-400 hover:${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"w-full h-full object-center object-cover\" />} \n            <div className=\"flex flex-col w-full h-full shadow justify-center items-center\">\n              <div className=\"w-full rounded-t-md\"></div>\n              <div className=\"justify-center items-center text-center align-middle flex flex-row bg-gray-900 bg-opacity-75 rounded-sm\">\n                <div className=\"pt-1 pb-1 px-2 lg:px-4 text-center text-white align-middle font-medium select-none\" style={isMobile ? {\"textShadow\": TEXT_SHADOWS.black, fontSize: `${getComputedPixelSize(30)}px`} : {\"textShadow\": TEXT_SHADOWS.black, fontSize: `${getComputedPixelSize(30)}px`}}>Abc</div>\n              </div>\n              <div className=\"w-full rounded-b-md\"></div>\n            </div>\n          </div>\n          <div onClick={event => handleChangeThumbTemplate(event, 5)} className={`w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md overflow-hidden border-2 ${thumbTemplate === 5 ? `border-blue-600 shadow ${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-blue-400 hover:${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"w-full h-full object-center object-cover\" />}\n            <div className=\"flex flex-col w-full h-full shadow\">\n              <div className=\"w-full flex-auto rounded-t-md\"></div>\n              <div className=\"w-full flex-auto justify-center items-center text-center align-middle flex flex-row\">\n                <div className=\"py-2 px-24 text-center text-gray-900 align-middle font-medium select-none\" style={isMobile ? {\"textShadow\": TEXT_SHADOWS.white, fontSize: `${getComputedPixelSize(35)}px`} : {\"textShadow\": TEXT_SHADOWS.white, fontSize: `${getComputedPixelSize(35)}px`}}>Abc</div>\n              </div>\n              <div className=\"w-full flex-auto rounded-b-md\"></div>\n            </div>\n          </div>\n          <div onClick={event => handleChangeThumbTemplate(event, 6)} className={`w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md overflow-hidden border-2 ${thumbTemplate === 6 ? `border-blue-600 shadow ${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'}` : 'border-gray-100 bg-gray-100'} hover:border-blue-400 hover:${thumbBgImage !== \"\" ? 'bg-gray-200' : 'bg-gray-100'} cursor-pointer`}>\n            {thumbBgImage !== \"\" && <img src={thumbBgImage} alt=\"ThumbBg\" className=\"w-full h-full object-center object-cover\" />}\n            <div className=\"bg-gray-50 bg-opacity-20\"></div>\n            <div className=\"flex flex-col w-full h-full shadow\">\n              <div className=\"w-full flex-auto rounded-t-md\"></div>\n              <div className=\"w-full flex-auto justify-center items-center text-center align-middle flex flex-row\">\n                <div className=\"py-2 px-24 text-center text-gray-900 align-middle font-medium select-none\" style={isMobile ? {\"textShadow\": TEXT_SHADOWS.white, fontSize: `${getComputedPixelSize(35)}px`} : {\"textShadow\": TEXT_SHADOWS.white, fontSize: `${getComputedPixelSize(35)}px`}}>Abc</div>\n              </div>\n              <div className=\"w-full flex-auto rounded-b-md\"></div>\n            </div>\n          </div>\n        </div></>}\n      </div>\n    </div>\n  )\n}\n\nexport default CreationTool;","/**\n * FcmBD - Fonctions communes pour la gestion des sources de données.\n * @namespace FcmBd\n */\nconst FcmBd = (() => {\n\n    /* ===================\n     CONSTANT DECLARATION\n    =================== */\n\n    const _DataSources = {};\n    const dataSources = { refs: [] };\n    const dataStores = {};\n    const queries = { refs: [] };\n    const tableModels = { refs: [] };\n\n    const config = {};\n\n    const dataSourceType = {\n        GOOGLESHEET: \"GOOGLESHEET\",\n        API: \"API\"\n    };\n\n    const dataSourceTypeDefaultParams = {\n        GOOGLESHEET: '',\n        API: '',\n    };\n\n    const defaultDataSourceModel = {\n        id: 0,\n        ref: '',\n        type: '',\n        name: '',\n        baseUrl: '',\n        properties: {},\n        dataSets: {\n            refs: [],\n        }\n    }\n\n    const defaultDataSetModel = {\n        id: 0,\n        ref: '',\n        type: '',\n        name: '',\n        baseUrl: '',\n        dataLoaded: false,\n        storeRefreshRate: 3600000,\n        dataStoreRef: '',\n        columns: {\n            refs: [],\n        },\n    }\n\n    const defaultColumnModel = {\n        id: 0,\n        ref: '',\n        dataType: '',\n        name: '',\n        index: 0,\n    }\n\n    /* =========\n     FCMBD INIT\n    ========= */\n\n    const init = ({ GOOGLESHEETAPIKEY }) => {\n        if (GOOGLESHEETAPIKEY) {\n           config.GOOGLESHEETAPIKEY = GOOGLESHEETAPIKEY;\n           dataSourceTypeDefaultParams.GOOGLESHEET = '?alt=json&key=' + GOOGLESHEETAPIKEY;\n        }\n    }\n\n    /* ===============\n     DATASOURCES INIT\n    =============== */\n\n    _DataSources.init = async (url) => {\n        return await fetchQuery(url).then(data => {\n            let initData = deepParse(data);\n\n            if (initData) {\n                if (initData.dataSources) {\n                    initData.dataSources.forEach(source => {\n                        _DataSources.createFromJson(source);\n                    });\n                }\n\n                if (initData.queries) {\n                    initData.queries.forEach(query => {\n                        addItemAndRef(queries, queries.refs, query.ref, query);\n                    });\n                }\n\n                if (initData.tableModels) {\n                    initData.tableModels.forEach(tableModel => {\n                        addItemAndRef(tableModels, tableModels.refs, tableModel.ref, tableModel);\n                    });\n                }\n            }\n        });\n    }\n\n    /* ====================\n     DATASOURCES FUNCTIONS\n    ==================== */\n\n    _DataSources.add = (dataSourceRef, dataSourceModel = {}) => {\n\n        try {\n            const dataSource = dataSources[dataSourceRef];\n\n            if (!dataSource) {\n                dataSourceModel = {...JSON.parse(JSON.stringify(defaultDataSourceModel)), ...dataSourceModel};\n                addItemAndRef(dataSources, dataSources.refs, dataSourceRef, dataSourceModel);\n            } else {\n                // TODO: Si une dataSource avec le même nom existe déjà.\n                throw new Error(`Une source de données nommée '${dataSourceRef}' existe déjà.`);\n            }\n        } catch (err) {\n            console.error('FcmBd.DataSources.add() : ' + err.message);\n        }\n        \n    }\n\n    _DataSources.addDataSet = (dataSourceRef, dataSetRef, dataSetModel = {}) => {\n\n        try {\n\n            validateRequest(dataSourceRef);\n\n            const dataSource = dataSources[dataSourceRef];\n\n            const dataSets = dataSource.dataSets;\n\n            if (!dataSets[dataSetRef]) {\n                dataSetModel = {...JSON.parse(JSON.stringify(defaultDataSetModel)), ...dataSetModel};\n                addItemAndRef(dataSets, dataSets.refs, dataSetRef, dataSetModel);\n\n                if (!dataStores[dataSetModel.dataStoreRef]) {\n                    dataStores[dataSetModel.dataStoreRef] = [];\n                } else {\n                    // TODO: Si un dataStore avec le même nom existe déjà.\n                    throw new Error(`Un stockage de données nommé '${dataSetModel.dataStoreRef}' existe déjà.`);\n                }\n\n                setUpdateStoreInterval(dataSourceRef, dataSetRef);\n                \n            } else {\n                // TODO: Si un dataSet avec le même nom existe déjà.\n                throw new Error(`Un ensemble de données nommé '${dataSetRef}' existe déjà dans '${dataSourceRef}'.`);\n            }\n\n        } catch (err) {\n            console.error('FcmBd.DataSources.addDataSet() : ' + err.message);\n        }\n    }\n\n    _DataSources.addDataSetColumn = (dataSourceRef, dataSetRef, columnRef, columnModel = {}) => {\n\n        try {\n\n            validateRequest(dataSourceRef, dataSetRef);\n\n            const dataSource = dataSources[dataSourceRef];\n\n            const dataSet = dataSource.dataSets[dataSetRef];\n\n            const columns = dataSet.columns;\n\n            if (!columns[columnRef]) {\n                columnModel = {...JSON.parse(JSON.stringify(defaultColumnModel)), ...columnModel}\n                addItemAndRef(columns, columns.refs, columnRef, columnModel);\n            } else {\n                // TODO: Si une colonne avec le même nom existe déjà.\n                throw new Error(`Une colonne nommée '${columnRef}' existe déjà dans '${dataSetRef}'.`);\n            }\n\n        } catch (err) {\n            console.error('FcmBd.DataSources.addDataSetColumn() : ' + err.message);\n        }\n    }\n\n    _DataSources.remove = (dataSourceRef) => {\n        try {\n            validateRequest(dataSourceRef);\n\n            removeItemAndRef(dataSources, dataSources.refs, dataSourceRef);\n\n        } catch (err) {\n            console.error('FcmBd.DataSources.remove() : ' + err.message);\n        }\n    }\n\n    _DataSources.removeDataSet = (dataSourceRef, dataSetRef) => {\n\n        try {\n            validateRequest(dataSourceRef, dataSetRef);\n\n            const dataSource = dataSources[dataSourceRef];\n\n            const dataSet = dataSource.dataSets[dataSetRef];\n\n            clearUpdateStoreInterval(dataSourceRef, dataSetRef);\n\n            delete dataStores[dataSet.dataStoreRef];\n\n            removeItemAndRef(dataSource.dataSets, dataSource.dataSets.refs, dataSetRef);\n\n        } catch (err) {\n            console.error('FcmBd.DataSources.removeDataSet() : ' + err.message);\n        }\n    }\n\n    _DataSources.removeDataSetColumn = (dataSourceRef, dataSetRef, columnRef) => {\n\n        try {\n            validateRequest(dataSourceRef, dataSetRef, columnRef);\n\n            const dataSource = dataSources[dataSourceRef];\n\n            const dataSet = dataSource.dataSets[dataSetRef];\n\n            removeItemAndRef(dataSet.columns, dataSet.columns.refs, columnRef);\n\n        } catch (err) {\n            console.error('FcmBd.DataSources.removeDataSetColumn() : ' + err.message);\n        }\n    }\n\n    /**\n     * Ajouter une source de données\n     * \n     * @param  {string}     dataSourceRef    - Nom unique de la source de données.\n     * @param  {string}     url     - L'url pour accéder à la source de données.\n     * @param  {string}     [type]  - Type de source de données.\n     */\n    _DataSources.create = async (dataSourceRef, url, callback) => {\n\n        try {\n\n            if (dataSources[dataSourceRef]) {\n                throw new Error(`Une source de données nommée '${dataSourceRef}' existe déjà.`);\n            }\n\n            let dataSourceModel = {\n                id: dataSources.refs.length + 1,\n                type: getDataSourceType(url),\n                ref: dataSourceRef,\n            }\n\n            _DataSources.add(dataSourceRef, dataSourceModel);\n\n            let source = dataSources[dataSourceRef];\n\n            switch (source.type) {\n                case dataSourceType.GOOGLESHEET:\n                    let id = url.substring(url.indexOf(\"/d/\") + 3, url.lastIndexOf(\"/\"));\n                    source.properties.spreadsheetId = id;\n                    source.baseUrl = `https://sheets.googleapis.com/v4/spreadsheets/${id}`;\n\n                    const spreadsheet = await fetchQuery(source.baseUrl + dataSourceTypeDefaultParams[source.type]);\n\n                    source.name = spreadsheet.properties.title;\n\n                    let dataSets = [];\n\n                    for (const sheet of spreadsheet.sheets) {\n                        dataSets.push(fetchQuery(source.baseUrl + '/values/' + sheet.properties.title + dataSourceTypeDefaultParams[source.type]).then(sheetData => {\n                            let sheetId = sheet.properties.sheetId;\n                            let dataStoreRef = `${dataSourceRef}_${sheetId}`;\n                            let dataSetRef = sheet.properties.title;\n\n                            let dataSetModel = { \n                                id: sheetId,\n                                type: 'JSON',\n                                name: dataSetRef,\n                                baseUrl: '/values/' + dataSetRef,\n                                dataStoreRef: dataStoreRef\n                            };\n\n                            _DataSources.addDataSet(dataSourceRef, dataSetRef, dataSetModel);\n                            \n                            let dataSet = source.dataSets[dataSetRef];\n\n                            if (sheetData.values.length > 0) {\n                                sheetData.values[0].forEach((columnRef, colIdx) => {\n\n                                    let columnModel = { \n                                        id: colIdx + 1,\n                                        ref: columnRef,\n                                        dataType: getDataType(sheetData.values[1][colIdx]),\n                                        name: columnRef,\n                                        index: colIdx\n                                    };\n\n                                    _DataSources.addDataSetColumn(dataSourceRef, dataSetRef, columnRef, columnModel);\n                                });\n                            }\n    \n                            sheetData.values.splice(0, 1);\n    \n                            sheetData.values.forEach((row, rowIdx) => {\n                                let rowData = {};\n                                dataSet.columns.refs.forEach((column, colIdx) => {\n                                    rowData[column] = row[colIdx] ? row[colIdx] : ''\n                                });\n    \n                                dataStores[dataStoreRef].push(rowData);\n                            });\n    \n                            dataSet.dataLoaded = true;\n                        }));\n                    };\n\n                    await Promise.all(dataSets);\n\n                    break;\n                case dataSourceType.API:\n                    source.baseUrl = url;\n\n                    break;\n                default:\n                    source.baseUrl = url;\n\n                    break;\n            }\n\n            /* dataSources[dataSourceRef] = source;\n            dataSources.refs.push(dataSourceRef); */\n\n            return callback(null, dataSources[dataSourceRef]);\n        } catch (err) {\n            console.error('FcmBd.DataSources.create() : ' + err.message);\n        }\n    }\n\n    _DataSources.createFromJson = (dataSourceModel) => {\n        let dataSets = dataSourceModel.dataSets;\n\n        delete dataSourceModel.dataSets;\n\n        let dataSource = dataSourceModel;\n\n        let dataSourceRef = dataSource.ref\n\n        _DataSources.add(dataSourceRef, dataSource);\n\n        dataSets.refs.forEach(dataSetRef => {\n            let columns = dataSets[dataSetRef].columns;\n\n            delete dataSets[dataSetRef].columns\n\n            _DataSources.addDataSet(dataSourceRef, dataSetRef, dataSets[dataSetRef]);\n\n            columns.refs.forEach(columnRef => {    \n                _DataSources.addDataSetColumn(dataSourceRef, dataSetRef, columnRef, columns[columnRef]);\n            });\n        });\n    }\n\n    /**\n     * Retourne les informations d'une source de données\n     * \n     * @param  {string} name    - Nom unique de la source de données.\n     * \n     * @return {object} - Un objet contenant les informations de base de la source de données.\n     */\n    _DataSources.find = (name) => {\n        return dataSources[name];\n    }\n\n    _DataSources.list = (dataSourceRef = undefined, dataSetRef = undefined) => {\n        let list;\n\n        if (!dataSourceRef) {\n            list = dataSources.refs;\n        } else if (dataSourceRef && !dataSetRef) {\n            list = dataSources[dataSourceRef].dataSets.refs;\n        } else if (dataSourceRef && dataSetRef) {\n            list = dataSources[dataSourceRef].dataSets[dataSetRef].columns.refs;\n        }\n\n        return  list;\n    }\n\n    _DataSources.executeStoredQuery = async (queryRef, queryModifier = undefined) => {\n\n        try {\n            let query = queries[queryRef];\n\n            if (query) {\n                if (queryModifier) {\n                    query = {...query, ...queryModifier};\n                }\n\n                return _DataSources.query(query.dataSourceRef, query.liveData, query);\n            } else {\n                throw new Error(`La requête '${queryRef}' n'existe pas.`);\n            }\n        } catch (err) {\n            console.error('FcmBd.DataSources.executeStoredQuery() : ' + err.message);\n        }\n        \n    }\n\n    _DataSources.getStoredQueryTableModel = (queryRef) => {\n        try {\n            const query = queries[queryRef];\n            if (query) {\n                if (query.tableModel) {\n                    const tableModel = tableModels[query.tableModel];\n        \n                    if (tableModel) {\n                        return tableModel;\n                    } else {\n                        throw new Error(`Le modèle de tableau '${query.tableModel}' n'existe pas.`);\n                    }\n                } else {\n                    throw new Error(`Aucun modèle de tableau n'existe pour la requête '${queryRef}'.`);\n                }\n            } else {\n                throw new Error(`La requête '${queryRef}' n'existe pas.`);\n            }\n        } catch (err) {\n            console.error('FcmBd.DataSources.executeStoredQuery() : ' + err.message);\n        }\n    }\n\n    _DataSources.query = async (dataSourceRef, liveData = false, query = {}) => {\n\n        try {\n            validateRequest(dataSourceRef, query.from);\n\n            const startTime = getNowTimeStamp();\n\n            let queryResult = {\n                datasetNbRows: 0,\n                returnedNbRows: 0,\n                duration: 0,\n                data: []\n            };\n\n            let data = [];\n\n            const dataSource = dataSources[dataSourceRef];\n\n            if (dataSource) {\n\n                const dataSet = dataSource.dataSets[query.from];\n\n                if (dataSet.dataLoaded && !liveData) {\n                    data = dataStores[dataSet.dataStoreRef];\n                    queryResult.datasetNbRows = data.length;\n\n                    if (query.where) {\n                        data = where(data, query.where, dataSet.columns);\n                    }\n\n                    if (query.select && data.length > 0) {\n                        data = select(data, query.select);\n                    }\n\n                    if (query.orderBy && data.length > 0) {\n                        data = orderBy(data, query.orderBy, dataSet.columns);\n                    }\n\n                    if (query.skip && query.limit) {\n                        data = data.slice(query.skip, query.skip + query.limit);\n                    } else if (query.limit) {\n                        data = data.slice(0, query.limit);\n                    } else if (query.skip) {\n                        data = data.slice(query.skip);\n                    }\n\n                    if (query.tableModel) {\n                        let tableModel = tableModels[query.tableModel];\n\n                        if (tableModel) {\n                            queryResult.tableModel = tableModel;\n                        }\n                    }\n\n                    queryResult.returnedNbRows = data.length;\n                    queryResult.data = data;\n\n                    queryResult.duration = (getNowTimeStamp() - startTime) / 1000;\n\n                    if (queryResult.duration === 0) {\n                        queryResult.duration = 0.0001\n                    }\n\n                    return queryResult;\n\n                } else {\n                    // TODO: Load dataSet data to store (need a function for that) then rerun query() with same param.\n                    dataSet.dataLoaded = false;\n\n                    return await updateStore(dataSource.ref, dataSet.ref).then(() => _DataSources.query(dataSourceRef, false, query));\n                }\n            }\n        } catch (err) {\n            console.error('FcmBd.DataSources.query() : ' + err.message);\n        }\n\n    }\n\n    _DataSources.checkStoredQueryResultUpdated = (queryRef, lastUpdateTime) => {\n        try {\n            const query = queries[queryRef];\n            if (query) {\n\n                const dataSource = dataSources[query.dataSourceRef];\n                const dataSet = dataSource.dataSets[query.from];\n        \n                return dataSet.lastUpdateTime > lastUpdateTime;\n\n            } else {\n                throw new Error(`La requête '${queryRef}' n'existe pas.`);\n            }\n        } catch (err) {\n            console.error('FcmBd.DataSources.executeStoredQuery() : ' + err.message);\n        }\n    }\n\n    /* ==============================\n     DATA STORE MANAGEMENT FUNCTIONS\n    ============================== */\n\n    const updateStore = async (dataSourceRef, dataSetRef) => {\n\n        const dataSource = dataSources[dataSourceRef];\n        const dataSet = dataSource.dataSets[dataSetRef];\n\n        return await fetchQuery(dataSource.baseUrl + dataSet.baseUrl + dataSourceTypeDefaultParams[dataSource.type]).then(data => {\n            let updatedData = undefined;\n\n            switch (dataSource.type) {\n                case \"GOOGLESHEET\":\n\n                    updatedData = [];\n\n                    data.values.splice(0, 1);\n    \n                    data.values.forEach((row, rowIdx) => {\n                        let rowData = {};\n                        dataSet.columns.refs.forEach((column, colIdx) => {\n                            rowData[column] = row[colIdx] ? row[colIdx] : ''\n                        });\n\n                        updatedData.push(rowData);\n                    });\n                    break;\n                default:\n                    switch (dataSet.type) {\n                        case \"CSV\":\n                            updatedData = [];\n\n                            data.forEach((row, rowIdx) => {\n                                let rowData = {};\n                                dataSet.columns.refs.forEach((column, colIdx) => {\n                                    rowData[column] = row[colIdx] ? row[colIdx] : ''\n                                });\n        \n                                updatedData.push(rowData);\n                            });\n\n                        break;\n                        default:\n                            updatedData = data;\n                    }\n                break;\n            }\n\n            if (updatedData) {\n\n                if (dataStores[dataSet.dataStoreRef] && JSON.stringify(dataStores[dataSet.dataStoreRef]) !== JSON.stringify(updatedData)) {\n                    dataStores[dataSet.dataStoreRef] = updatedData;\n                    dataSet.lastUpdateTime = getNowTimeStamp();\n                }\n                \n                dataSet.dataLoaded = true;\n\n            }\n        });\n    }\n\n    const setUpdateStoreInterval = (dataSourceRef, dataSetRef) => {\n\n        const dataSource = dataSources[dataSourceRef];\n        const dataSet = dataSource.dataSets[dataSetRef];\n\n        if (!dataSet.updateStoreInterval && dataSet.storeRefreshRate) {\n            dataSet.updateStoreInterval = setInterval(function() { updateStore(dataSourceRef, dataSetRef); }, dataSet.storeRefreshRate < 1000 ? 1000 : dataSet.storeRefreshRate);\n        }\n    }\n\n    const clearUpdateStoreInterval = (dataSourceRef, dataSetRef) => {\n        \n        const dataSource = dataSources[dataSourceRef];\n        const dataSet = dataSource.dataSets[dataSetRef];\n\n        if (dataSet.updateStoreInterval) {\n            clearInterval(dataSet.updateStoreInterval);\n\n            dataSet.updateStoreInterval = undefined;\n        }\n    }\n\n    /* const resetNbUseSinceStoreUpdate = (dataSourceRef, dataSetRef) => {\n        \n        let dataSource = dataSources[dataSourceRef];\n        let dataSet = dataSource.dataSets[dataSetRef];\n\n        dataSet.nbUseSinceStoreUpdate = 0;\n    }\n\n    const incrementNbUseSinceStoreUpdate = (dataSourceRef, dataSetRef) => {\n        \n        let dataSource = dataSources[dataSourceRef];\n        let dataSet = dataSource.dataSets[dataSetRef];\n\n        if (!dataSet.nbUseSinceStoreUpdate && dataSet.nbUseSinceStoreUpdate !== 0) {\n            dataSet.nbUseSinceStoreUpdate = 1;\n        } else {\n            dataSet.nbUseSinceStoreUpdate += 1;\n        }\n    } */\n\n    /* ======================\n     DATA FETCHING FUNCTIONS\n    ====================== */\n\n    const fetchQuery = async (url) => {\n        try {\n            const response = await fetch(url);\n            const result = await handleResponse(response);\n\n            return result;\n        } catch (err) {\n\n        }\n    }\n\n    const handleResponse = (response) => {\n        let contentType = response.headers.get('content-type')\n        if (contentType.includes('application/json')) {\n          return handleJSONResponse(response)\n        } else if (contentType.includes('text/html')) {\n          return handleTextResponse(response)\n        } else if (contentType.includes('text/csv')) {\n            return handleCSVResponse(response)\n        } else {\n          // Other response types as necessary. I haven't found a need for them yet though.\n          throw new Error(`Sorry, content-type ${contentType} not supported`)\n        }\n    }\n      \n    const handleJSONResponse = (response) => {\n        return response.json()\n          .then(json => {\n            if (response.ok) {\n              return json\n            } else {\n              return Promise.reject(Object.assign({}, json, {\n                status: response.status,\n                statusText: response.statusText\n              }))\n            }\n          })\n    }\n    \n    const handleTextResponse = (response) => {\n        return response.text()\n          .then(text => {\n            if (response.ok) {\n              return text\n            } else {\n              return Promise.reject({\n                status: response.status,\n                statusText: response.statusText,\n                err: text\n              })\n            }\n          })\n    }\n\n    const handleCSVResponse = (response) => {\n        return response.text()\n          .then(text => {\n            if (response.ok) {\n              return parseCSV(text)\n            } else {\n              return Promise.reject({\n                status: response.status,\n                statusText: response.statusText,\n                err: text\n              })\n            }\n          })\n    }\n\n    /* ==============\n     QUERY FUNCTIONS\n    ============== */\n\n    const filter = (objectTocheck, filters, dataSetColumns, operator = '', keyToCheck = undefined, isMacthing = true) => {\n\n        let filterArr;\n\n        if (filters !== null && typeof filters == \"object\") {\n\n            if (Array.isArray(filters)) {\n                for (let filter of filters) {\n                    isMacthing = filter(objectTocheck, filter, dataSetColumns, operator, keyToCheck, isMacthing);\n\n                    if (operator === '$and' && !isMacthing) {\n                        break;\n                    } else if (operator === '$or' && isMacthing) {\n                        break;\n                    }\n                }\n            } else {\n                filterArr = Object.entries(filters);\n\n                for (let [key, value] of filterArr) {\n\n                    if (key.includes('$')) {\n                        \n                        if (value !== null && typeof value == \"object\") {\n                            operator = key;\n                            filters = value;\n                            isMacthing = filter(objectTocheck, filters, dataSetColumns, operator, keyToCheck, isMacthing);\n                        } else {\n                            operator = key;\n                            isMacthing = compare(convertToDataType(objectTocheck[keyToCheck], dataSetColumns[keyToCheck].dataType), convertToDataType(value, dataSetColumns[keyToCheck].dataType), operator);\n                        }\n                        \n                    } else if (value !== null && typeof value == \"object\") {\n                        operator = '';\n                        filters = value;\n                        keyToCheck = key;\n                        isMacthing = filter(objectTocheck, filters, dataSetColumns, operator, keyToCheck, isMacthing);\n                    } else {\n                        if (!keyToCheck || operator === '') {\n                            keyToCheck = key;\n                        };\n\n                        isMacthing = compare(convertToDataType(objectTocheck[keyToCheck], dataSetColumns[keyToCheck].dataType), convertToDataType(value, dataSetColumns[keyToCheck].dataType), operator);\n\n                        operator = '';\n                    }\n\n                    if (!isMacthing) {\n                        break;\n                    }\n                }\n            }\n\n        }\n\n        return isMacthing;\n\n    }\n\n    const expression = (expr, object) => {\n\n        let result;\n\n        if (expr !== null && typeof expr == \"object\") {\n            if (Array.isArray(expr)) {\n                result = [];\n\n                expr.forEach((computation, index) => {\n                    result.push(expression(computation, object));\n                });\n\n            } else {\n                for (let [key, value] of Object.entries(expr)) {\n                    if (key.includes('$')) {\n                        result = compute(expression(value, object), key);\n                    }\n                }\n            }\n        } else {\n            if (typeof expr == \"string\" && expr.startsWith('$')) {\n                result = object[expr.substring(1)];\n\n                if (result === undefined) {\n                    result = expr;\n                }\n            } else {\n                result = expr;\n            }\n        }\n\n        return result;\n    }\n\n   /*  if (expr !== null && typeof expr == \"object\") {\n        if (Array.isArray(expr)) {\n        } else {\n\n        }\n    } else {\n\n    } */\n\n    const compute = (value, operator = \"\") => {\n\n        let computedValue;\n\n        switch (operator) {\n            case \"$concat\":\n                computedValue = \"\";\n\n                value.forEach(string => {\n                    computedValue += string;\n                })\n            break;\n            case \"$lower\":\n                if (typeof value == \"string\") {\n                    computedValue = value.toLowerCase();\n                } else {\n                    computedValue = value;\n                }\n            break;\n            case \"$upper\":\n                if (typeof value == \"string\") {\n                    computedValue = value.toUpperCase();\n                } else {\n                    computedValue = value;\n                }\n            break;\n            case \"$substr\":\n                if (typeof value[0] == \"string\") {\n                    computedValue = value[0].substring(value[1], value[2]);\n                } else {\n                    computedValue = value;\n                }\n            break;\n            default:\n                computedValue = value;\n        }\n        \n        return computedValue;\n    }\n\n    const compare = (valueToCheck, valueToMatch, operator = \"\") => {\n        let isMacthing = false;\n    \n        switch (operator) {\n            case \"$gt\":\n                isMacthing = valueToCheck > valueToMatch;\n            break;\n            case \"$lt\":\n                isMacthing = valueToCheck < valueToMatch;\n            break;\n            case \"$gte\":\n                isMacthing = valueToCheck >= valueToMatch;\n            break;\n            case \"$lte\":\n                isMacthing = valueToCheck <= valueToMatch;\n            break;\n            case \"$ne\":\n                isMacthing = valueToCheck !== valueToMatch;\n            break;\n            case \"$in\":\n                isMacthing = valueToMatch.includes(valueToCheck);\n            break;\n            case \"$sameMonthAndDay\":\n                isMacthing = (valueToCheck.getUTCMonth() + 1 === valueToMatch.getUTCMonth() + 1) && (valueToCheck.getUTCDate() === valueToMatch.getUTCDate());\n            break;\n            default:\n                isMacthing = valueToCheck === valueToMatch;\n        }\n        \n        return isMacthing;\n    }\n    \n    const where = (data = [], filters = {}, dataSetColumns = {}) => {\n\n        let filteredData = data.filter(item => {\n            return filter(item, filters, dataSetColumns);\n        });\n        \n        return filteredData;\n    }\n    \n    const orderBy = (data = [], keys = [], dataSetColumns = {}) => {\n\n        let columns = keys.map(key => {\n            return Object.entries(key)[0];\n        });\n\n        let sortedData = data.sort((itemA, itemB) => {\n            let sorted = 0;\n\n            for (let [key, direction] of columns) {\n                let valueA = direction ? itemA[key] : itemB[key];\n                let valueB = direction ? itemB[key] : itemA[key];\n\n                if (dataSetColumns[key].dataType === \"number\" || dataSetColumns[key].dataType === \"date\") {\n                    valueA = convertToDataType(valueA, dataSetColumns[key].dataType);\n                    valueB = convertToDataType(valueB, dataSetColumns[key].dataType);\n\n                    if (valueA < valueB) {\n                        sorted = -1;\n                    }\n\n                    if (valueA > valueB) {\n                        sorted = 1;\n                    }\n\n                } else {\n                    sorted = valueA.localeCompare(valueB) * direction;\n                }\n\n                if (sorted !== 0) {\n                    break;\n                }\n            }\n\n            return sorted;\n\n        });\n\n        return sortedData;\n    }\n\n    const select = (data = [], select = {}) => {\n\n        let selects = Object.entries(select);\n\n        let selectedData = data.map(item => {\n            let dataRow = {};\n\n            for (let [key, value] of selects) {\n                if (value !== null && typeof value == \"object\") {\n                    dataRow[key] = expression(value, item);\n                } else {\n                    dataRow[key] = item[key];\n                }\n            }\n\n            return dataRow;\n        })\n\n        return selectedData;\n    }\n\n    /* ====================================\n     VALIDATION & ERROR HANDLING FUNCTIONS\n    ==================================== */\n\n    const validateRequest = (dataSourceRef, dataSetRef = null, columnRef = null) => {\n\n        const dataSource = dataSources[dataSourceRef];\n\n        if (!dataSource) {\n            throw new Error(`La source de données '${dataSourceRef}' n'existe pas.`);\n        } else if (dataSetRef && !dataSource.dataSets[dataSetRef]) {\n            throw new Error(`L'ensemble de données '${dataSetRef}' n'existe pas dans '${dataSourceRef}'.`);\n        } else if (columnRef && !dataSource.dataSets[dataSetRef].columns[columnRef]) {\n            throw new Error(`La colonne '${columnRef}' n'existe pas dans '${dataSetRef}'.`);\n        }\n    }\n\n    /* ==============\n     UTILS FUNCTIONS\n    ============== */\n\n    const getNowTimeStamp = () => {\n        let nowTimeStamp = new Date();\n        return nowTimeStamp.getTime();\n    }\n\n    const addItemAndRef = (object, refArr, ref, item) => {\n        item.ref = ref;\n        object[ref] = item;\n        refArr.push(ref);\n    }\n\n    const removeItemAndRef = (object, refArr, ref) => {\n        delete object[ref];\n        const index = refArr.indexOf(ref);\n        if (index > -1) {\n            refArr.splice(index, 1);\n        }\n    }\n\n    const getDataSourceType = (url) => {\n        let type;\n        if (url.indexOf(\"https://docs.google.com/spreadsheets/\") > -1) {\n            type = dataSourceType.GOOGLESHEET;\n        } else {\n            type = dataSourceType.API;\n        }\n\n        return type;\n    }\n\n    const getDataType = (value) => {\n        let type = 'string';\n        \n        if (value === '') {\n            type = 'string';\n        } else if (value === 'true' || value === 'false') {\n            type = 'boolean';\n        } else if (Date.parse(value) && (value.includes('-') || value.includes(':'))) {\n            type = 'date';\n        } else if (!isNaN(parseFloat(value))) {\n            type = 'number';\n        }\n\n        return type;\n    }\n\n    const convertToDataType = (valueToConvert, dataType) => {\n\n        let convertedValue;\n\n        switch (dataType) {\n            case \"string\":\n                convertedValue = String(valueToConvert);\n            break;\n            case \"number\":\n                convertedValue = Number(valueToConvert);\n            break;\n            case \"boolean\":\n                convertedValue = Boolean(valueToConvert);\n            break;\n            case \"date\":\n                let newDate = new Date(valueToConvert);\n\n                convertedValue = newDate;\n\n                /* convertedValue = newDate.getTime(); */\n            break;\n            default:\n                \n        }\n\n        return convertedValue;\n    }\n\n    const deepCopy = (inObject) => {\n        let outObject, value, key;\n\n        if (typeof inObject !== \"object\" || inObject == null) {\n            return inObject;\n        }\n\n        outObject = Array.isArray(inObject) ? [] : {};\n\n        for (key in inObject) {\n            value = inObject[key];\n\n            outObject[key] = deepCopy(value);\n        }\n\n        return outObject;\n    }\n\n    const deepParse = (stringToParse) => {\n        let outObject;\n\n        if (typeof stringToParse == \"string\" && isValidJSON(stringToParse)) {\n            outObject = JSON.parse(stringToParse);\n\n            if (outObject !== null && typeof outObject == \"object\") {\n               if (Array.isArray(outObject)) {\n                    outObject.forEach((item, index) => {\n                        outObject[index] = deepParse(item);\n                    });\n                } else {\n                    for (let [key, value] of Object.entries(outObject)) {\n                        outObject[key] = deepParse(value);\n                    }\n                } \n            }\n        } else {\n            outObject = stringToParse;\n        }\n\n        return outObject;\n    }\n\n    const isValidJSON = str => {\n        try {\n            JSON.parse(str);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Parse takes a string of CSV data and converts it to a 2 dimensional array\n     *\n     * options\n     * - typed - infer types [false]\n     *\n     * @static\n     * @param {string} csv the CSV string to parse\n     * @param {Object} [options] an object containing the options\n     * @param {Function} [reviver] a custom function to modify the values\n     * @returns {Array} a 2 dimensional array of `[entries][values]`\n     */\n     const parseCSV = (csv, options, reviver = v => v) => {\n        const ctx = Object.create(null);\n        ctx.options = options || {};\n        ctx.reviver = reviver;\n        ctx.value = '';\n        ctx.entry = [];\n        ctx.output = [];\n        ctx.col = 1;\n        ctx.row = 1;\n    \n        const lexer = /\"|,|\\r\\n|\\n|\\r|[^\",\\r\\n]+/y;\n        const isNewline = /^(\\r\\n|\\n|\\r)$/;\n    \n        let matches = [];\n        let match = '';\n        let state = 0;\n    \n        while ((matches = lexer.exec(csv)) !== null) {\n            match = matches[0];\n        \n            switch (state) {\n                case 0: // start of entry\n                switch (true) {\n                    case match === '\"':\n                    state = 3;\n                    break;\n                    case match === ',':\n                    state = 0;\n                    valueEnd(ctx);\n                    break;\n                    case isNewline.test(match):\n                    state = 0;\n                    valueEnd(ctx);\n                    entryEnd(ctx);\n                    break;\n                    default:\n                    ctx.value += match;\n                    state = 2;\n                    break;\n                }\n                break;\n                case 2: // un-delimited input\n                switch (true) {\n                    case match === ',':\n                    state = 0;\n                    valueEnd(ctx);\n                    break;\n                    case isNewline.test(match):\n                    state = 0;\n                    valueEnd(ctx);\n                    entryEnd(ctx);\n                    break;\n                    default:\n                    state = 4;\n                    throw Error(`CSVError: Illegal state [row:${ctx.row}, col:${ctx.col}]`);\n                }\n                break;\n                case 3: // delimited input\n                switch (true) {\n                    case match === '\"':\n                    state = 4;\n                    break;\n                    default:\n                    state = 3;\n                    ctx.value += match;\n                    break;\n                }\n                break;\n                case 4: // escaped or closing delimiter\n                switch (true) {\n                    case match === '\"':\n                    state = 3;\n                    ctx.value += match;\n                    break;\n                    case match === ',':\n                    state = 0;\n                    valueEnd(ctx);\n                    break;\n                    case isNewline.test(match):\n                    state = 0;\n                    valueEnd(ctx);\n                    entryEnd(ctx);\n                    break;\n                    default:\n                    throw Error(`CSVError: Illegal state [row:${ctx.row}, col:${ctx.col}]`);\n                }\n                break;\n                default:\n                    throw Error(`CSVError: Illegal state [row:${ctx.row}, col:${ctx.col}]`);\n            }\n        }\n    \n        // flush the last value\n        if (ctx.entry.length !== 0) {\n            valueEnd(ctx);\n            entryEnd(ctx);\n        }\n    \n        return ctx.output;\n    }\n\n    const valueEnd = (ctx) => {\n        const value = ctx.options.typed ? inferType(ctx.value) : ctx.value;\n        ctx.entry.push(ctx.reviver(value, ctx.row, ctx.col));\n        ctx.value = '';\n        ctx.col++;\n    }\n    \n    const entryEnd = (ctx) => {\n        ctx.output.push(ctx.entry);\n        ctx.entry = [];\n        ctx.row++;\n        ctx.col = 1;\n    }\n\n    const inferType = (value) => {\n        const isNumber = /.\\./;\n    \n        switch (true) {\n        case value === 'true':\n        case value === 'false':\n            return value === 'true';\n        case isNumber.test(value):\n            return parseFloat(value);\n        case isFinite(value):\n            return parseInt(value);\n        default:\n            return value;\n        }\n    }\n\n    return {\n        DataSources: _DataSources,\n        init: init,\n    }\n})();\n\nexport default FcmBd;","import React, { useState, useRef, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport FcmBd from '../dataSource/FcmBd';\nimport * as htmlToImage from 'html-to-image';\nimport { CameraIcon } from '@heroicons/react/outline'\n\nimport { saveAs } from 'file-saver';\n\nconst BIRTHDAY_IMG_BACKGROUNDS = [\n    { img: \"https://images.unsplash.com/photo-1523755130311-9eadea3a0861?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3800&q=80\", textColor: \"gray-900\", textShadow: \"0 0px 2px rgba(255,255,255,0.70)\", maxNameCol: 6 },\n    { img: \"https://images.unsplash.com/photo-1523757956233-94a86ff74ea5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3800&q=80\", textColor: \"gray-900\", textShadow: \"0 0px 2px rgba(255,255,255,0.70)\", maxNameCol: 3 },\n    { img: \"https://images.unsplash.com/photo-1486427944299-d1955d23e34d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3800&q=80\", textColor: \"gray-900\", textShadow: \"0 0px 2px rgba(255,255,255,0.70)\", maxNameCol: 3},\n    { img: \"https://images.unsplash.com/photo-1513151233558-d860c5398176?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3500&q=80\", textColor: \"white\", textShadow: \"0px 0px 2px rgba(0,0,0,0.9)\", maxNameCol: 6 },\n    { img: \"https://images.unsplash.com/photo-1559456751-057ed03f3143?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=5000&q=80\", textColor: \"white\", textShadow: \"0px 0px 2px rgba(0,0,0,0.9)\", maxNameCol: 6 },\n    { img: \"https://images.unsplash.com/photo-1530103862676-de8c9debad1d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=6400&q=80\", textColor: \"white\", textShadow: \"0px 0px 2px rgba(0,0,0,0.9)\", maxNameCol: 6 },\n    { img: \"https://images.unsplash.com/photo-1519306980079-d14db7cebf33?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3800&q=80\", textColor: \"white\", textShadow: \"0px 0px 2px rgba(0,0,0,0.9)\", maxNameCol: 6 },\n    { img: \"https://images.unsplash.com/photo-1498673394965-85cb14905c89?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3800&q=80\", textColor: \"white\", textShadow: \"0px 0px 2px rgba(0,0,0,0.9)\", maxNameCol: 6 }\n];\n\n/* { img: \"https://images.unsplash.com/photo-1523755130311-9eadea3a0861?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3800&q=80\", textColor: \"gray-900\", textShadow: \"0 0px 2px rgba(255,255,255,0.40), 0 0px 15px rgba(255,255,255,0.15)\", maxNameCol: 6 },\n    { img: \"https://images.unsplash.com/photo-1523757956233-94a86ff74ea5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3800&q=80\", textColor: \"gray-900\", textShadow: \"0 0px 2px rgba(255,255,255,0.40), 0 0px 15px rgba(255,255,255,0.15)\", maxNameCol: 3 },\n    { img: \"https://images.unsplash.com/photo-1486427944299-d1955d23e34d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3800&q=80\", textColor: \"white\", textShadow: \"0 0px 2px rgba(0,0,0,0.40), 0 0px 15px rgba(0,0,0,0.15)\", maxNameCol: 3},\n    { img: \"https://images.unsplash.com/photo-1513151233558-d860c5398176?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3500&q=80\", textColor: \"white\", textShadow: \"0 0px 2px rgba(0,0,0,0.40), 0 0px 15px rgba(0,0,0,0.15)\", maxNameCol: 6 },\n    { img: \"https://images.unsplash.com/photo-1559456751-057ed03f3143?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=5000&q=80\", textColor: \"white\", textShadow: \"0 0px 2px rgba(0,0,0,0.40), 0 0px 15px rgba(0,0,0,0.15)\", maxNameCol: 6 },\n    { img: \"https://images.unsplash.com/photo-1530103862676-de8c9debad1d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=6400&q=80\", textColor: \"white\", textShadow: \"0 0px 2px rgba(0,0,0,0.40), 0 0px 15px rgba(0,0,0,0.15)\", maxNameCol: 6 },\n    { img: \"https://images.unsplash.com/photo-1519306980079-d14db7cebf33?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3800&q=80\", textColor: \"white\", textShadow: \"0 0px 2px rgba(0,0,0,0.40), 0 0px 15px rgba(0,0,0,0.15)\", maxNameCol: 6 },\n    { img: \"https://images.unsplash.com/photo-1498673394965-85cb14905c89?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3800&q=80\", textColor: \"white\", textShadow: \"0 0px 2px rgba(0,0,0,0.40), 0 0px 15px rgba(0,0,0,0.15)\", maxNameCol: 6 } */\n\nconst BIRTHDAY_TITLES = [\n    \"Joyeux anniversaire!\",\n    \"Bonne fête!\",\n    \"Bon anniversaire!\",\n    \"Nos fêtés de la journée!\"\n];\n\nconst BirthdayTool = ({ isHidden }) => {\n\n    const [date, setDate] = useState(\"2021-09-20\");\n    const [birthdays, setBirthdays] = useState([]);\n    const [bgImgIdx, setBgImgIdx] = useState(0);\n    const [titleIdx, setTitleIdx] = useState(0);\n\n    const [playingPreview, setPlayingPreview] = useState(true);\n\n    const [thumbPreviewWidth, setThumbPreviewWidth] = useState(0);\n    const thumbPreview = useRef();\n\n    const handleLoadBirthdays = () => {\n        let query = { \n            select: {\n                nom: 1,\n                prenom: 1,\n                date: 1,\n            }, \n            from: 'Fetes',\n            where: { \"date\": { \"$sameMonthAndDay\": date }},\n            orderBy: [{ nom: 1 }, { prenom: 1 }]\n        };\n\n        console.log(FcmBd.DataSources.find('TestData'));\n\n        FcmBd.DataSources.query('TestData', false, query).then(results => {\n            incrBgImgIdx();\n            setPlayingPreview(false);\n            setBirthdays(results.data);\n        });\n    }\n\n    const incrBgImgIdx = () => {\n        let newBgImgIdx = bgImgIdx + 1;\n        let newTitleIdx = titleIdx + 1;\n\n        if (BIRTHDAY_IMG_BACKGROUNDS.length > newBgImgIdx) {\n            setBgImgIdx(newBgImgIdx);\n        } else {\n            setBgImgIdx(0);\n        }\n\n        if (BIRTHDAY_TITLES.length > newTitleIdx) {\n            setTitleIdx(newTitleIdx);\n        } else {\n            setTitleIdx(0);\n        }\n    }\n\n    const handlePlayingPreview = (e, play) => {\n        e.preventDefault();\n\n        if (!play) {\n            incrBgImgIdx();\n        }\n        \n        setPlayingPreview(play);\n    }\n\n    useEffect(() => {\n        if (!isHidden) {\n            let query = { \n                select: {\n                    nom: 1,\n                    prenom: 1,\n                    date: 1,\n                }, \n                from: 'Fetes',\n                where: { \"date\": { \"$sameMonthAndDay\": date }},\n                orderBy: [{ nom: 1 }, { prenom: 1 }]\n            };\n    \n            FcmBd.DataSources.query('TestData', false, query).then(results => {\n                setBirthdays(results.data);\n            });\n\n            /* FcmBd.DataSources.executeStoredQuery(\"HoraireSimonsEquipeA\").then(results => {\n                console.log('FcmBd.DataSources.executeStoredQuery(\"HoraireSimonsEquipeA\")', results);\n            }) */\n        }\n    }, [isHidden]);\n\n    useEffect(() => {\n        if (thumbPreview.current) {\n           setThumbPreviewWidth(thumbPreview.current.offsetWidth); \n        }\n    }, [thumbPreview]);\n    \n    const getComputedPixelSize = (pixel) => {\n        let computedPixelSize = 0;\n        let currentThumbPreviewWidth = thumbPreviewWidth;\n\n        if (thumbPreviewWidth === 0 || (thumbPreview.current && thumbPreview.current.offsetWidth !== thumbPreviewWidth)) {\n            currentThumbPreviewWidth = thumbPreview.current.offsetWidth;\n            setThumbPreviewWidth(currentThumbPreviewWidth);\n        }\n\n        computedPixelSize = currentThumbPreviewWidth / 1920 * pixel;\n\n        return computedPixelSize;\n    }\n\n    const handleSaveAsImage = async () => {\n\n        let container = document.createElement(\"div\");\n        container.classList.add(\"overflow-hidden\");\n        container.classList.add(\"fixed\");\n\n        let preview = document.createElement(\"div\");\n\n        let html = renderScreenShot()\n\n        preview.innerHTML = ReactDOMServer.renderToStaticMarkup(html);\n\n        document.body.appendChild(container);\n\n        container.appendChild(preview);\n\n        /* htmlToImage.toPng(preview)\n        .then(function (dataUrl) {\n\n            let link = document.createElement(\"a\");\n            link.download = \"thumb.png\";\n            link.href = dataUrl;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n            document.body.removeChild(container);\n        })\n        .catch(function (error) {\n            console.error('oops, something went wrong!', error);\n        }); */\n\n        let blob = await htmlToImage.toBlob(preview);\n\n        saveAs(blob, \"thumb.png\");\n        document.body.removeChild(container);\n\n        /* htmlToImage.toBlob(preview)\n        .then(function (blob) {\n\n            let url = URL.createObjectURL(blob);\n\n            let link = document.createElement(\"a\");\n            link.download = \"thumb.png\";\n            link.href = url;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n            document.body.removeChild(container);\n        }); */\n    }\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            handleLoadBirthdays();\n        }\n    }\n\n    const renderScreenShot = () => {\n        return <div className=\"aspect-w-16 aspect-h-9 bg-gray-100 overflow-hidden\" style={{ width: \"1920px\", height: \"1080px\" }} ref={thumbPreview}>\n        <div className=\"overflow-hidden\"><img src={BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].img} alt=\"ThumbBg\" className={`select-none w-full h-full object-center object-cover`} /></div>\n\n            {thumbPreview.current && <div className=\"pointer-events-none flex w-full h-full items-start justify-start\" style={{ padding: `48px`}}>\n                <div className=\"flex-col items-center justify-center rounded-lg\"  style={{ padding: `48px 60px`}}>\n                    <h2 className={`text-left w-full font-permanentmarker text-${BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textColor} select-none`} style={{ textShadow: BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textShadow, fontSize: `108px`, lineHeight: `108px` }}>{BIRTHDAY_TITLES[titleIdx]}</h2>\n                    <div className={`grid grid-rows-${birthdays.length > BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].maxNameCol ? Math.ceil(birthdays.length / 2) : birthdays.length} grid-flow-col`} style={{ marginTop: `60px`, columnGap: `120px`, rowGap: `36px` }}>\n                        {birthdays.map((birthday, index) => {\n                            return <div key={`nom_${index}`} className={`text-left font-indieflower tracking-widest text-${BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textColor} select-none`} style={{ textShadow: BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textShadow, fontSize: `66px`, lineHeight: `66px`, letterSpacing: `6px` }}><span className=\"font-bold\">{`${birthday.prenom}`}</span> <span className=\"font-bold\">{`${birthday.nom}`}</span></div>\n                        })}\n                    </div>\n                </div>\n            </div>}\n\n        </div>\n    }\n\n\n    return (\n        <div className={`min-h-screen flex-col items-start justify-start bg-gray-100 py-20 lg:py-12 px-4 sm:px-6 lg:px-52 space-y-10 lg:space-y-8 ${isHidden ? 'hidden' : 'flex'}`}>\n            <div className=\"w-full flex space-y-4 lg:space-y-0 flex-col lg:flex-row items-center lg:justify-between\">\n                <h2 className=\"ml-2 text-left text-3xl font-extrabold text-gray-900 select-none\">Fêtes automatisées</h2>\n                <div className=\"flex flex-row space-x-4 h-full items-center\">\n                    <input id=\"date\" type=\"date\" value={date} onKeyDown={handleKeyDown} onChange={event => setDate(event.target.value)} /* onBlur={handleLoadBirthdays} */  className=\"h-8 form-input appearance-none rounded-none relative block max-h-20 px-3 py-2 border border-gray-300 placeholder-gray-400 text-gray-900 rounded-md focus:placeholder-transparent focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\" />\n                    <CameraIcon onClick={handleSaveAsImage} className=\"text-blue-600 hover:text-blue-500 cursor-pointer h-7 w-7\"/>\n                </div>\n            </div>\n            <div className=\"lg:px-28 w-full\">\n                {!isHidden && <div className=\"w-full overflow-hidden rounded-md shadow\"><div className=\"w-full aspect-w-16 aspect-h-9 bg-gray-100 overflow-hidden\" ref={thumbPreview}>\n                    <div className=\"overflow-hidden\"><img src={BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].img} alt=\"ThumbBg\" onLoad={event => {handlePlayingPreview(event, true) }} onAnimationStart={event => handlePlayingPreview(event, true)} onAnimationEnd={event => handlePlayingPreview(event, false)} className={`${playingPreview ? 'zoom-in-zoom-out' : 'zoom-ended'} select-none rounded-md w-full h-full object-center object-cover`} /></div>\n                    {/* <div className=\"overflow-hidden\"><video crossorigin=\"anonymous\"  muted=\"true\" autoplay=\"true\" loop=\"true\" src={\"http://dev.medias.netsign.tv/videos/154753_1.mp4#t=0,20\"} alt=\"ThumbBg\" className={`select-none rounded-md w-full h-full object-center object-cover`} /></div> */}\n                    {/* <div className=\"pointer-events-none flex w-full h-full items-start justify-center\">\n                        <h2 className=\"mt-20 text-left text-5xl font-indieflower font-extrabold text-white select-none\">Joyeux anniversaire!</h2>\n                    </div>\n                    <div className=\"pointer-events-none flex w-full h-full items-center justify-center\">\n                        <div className={`grid grid-rows-${birthdays.length > 5 ? Math.ceil(birthdays.length / 2) : birthdays.length} grid-flow-col gap-y-10 gap-x-20`}>\n                            {birthdays.map((birthday, index) => {\n                                return <div className=\"text-center text-3xl text-white select-none font-bold\">{`${birthday.prenom} ${birthday.nom}`}</div>\n                            })}\n                        </div>\n                    </div> */}\n\n                    {/* <div className=\"pointer-events-none flex w-full h-full items-start justify-start p-8\">\n                            <div className=\"flex-col items-center justify-center pt-10 pb-12 px-10 space-y-10 rounded-lg\">\n                                <h2 className=\"text-center rounded-lg w-full white-glassmorphism text-5xl font-permanentmarker text-white select-none\" style={{\"textShadow\": \"0 0px 2px rgba(0,0,0,0.20), 0 0px 15px rgba(0,0,0,0.15)\"}}>Joyeux anniversaire!</h2>\n                                <div className={`grid rounded-lg white-glassmorphism max-w-max grid-rows-${birthdays.length > 3 ? Math.ceil(birthdays.length / 2) : birthdays.length} grid-flow-col gap-y-4 gap-x-20`}>\n                                    {birthdays.map((birthday, index) => {\n                                        return <div><p className=\"text-left text-3xl font-indieflower text-white select-none font-extrabold\" style={{\"textShadow\": \"0 0px 2px rgba(0,0,0,0.20), 0 0px 15px rgba(0,0,0,0.15)\"}}>{`${birthday.prenom} ${birthday.nom}`}</p></div>\n                                    })}\n                                </div>\n                            </div>\n                    </div> */}\n\n                    {thumbPreview.current && <div className=\"pointer-events-none flex w-full h-full items-start justify-start\" style={{ padding: `${getComputedPixelSize(48)}px`}}>\n                        <div className=\"flex-col items-center justify-center rounded-lg\"  style={{ padding: `${getComputedPixelSize(48)}px ${getComputedPixelSize(60)}px`}}>\n                            <h2 className={`text-left w-full font-permanentmarker text-${BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textColor} select-none`} style={{ textShadow: BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textShadow, fontSize: `${getComputedPixelSize(108)}px`, lineHeight: `${getComputedPixelSize(108)}px` }}>{BIRTHDAY_TITLES[titleIdx]}</h2>\n                            <div className={`grid grid-rows-${birthdays.length > BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].maxNameCol ? Math.ceil(birthdays.length / 2) : birthdays.length} grid-flow-col`} style={{ marginTop: `${getComputedPixelSize(60)}px`, columnGap: `${getComputedPixelSize(120)}px`, rowGap: `${getComputedPixelSize(36)}px` }}>\n                                {birthdays.map((birthday, index) => {\n                                    return <div key={`nom_${index}`} className={`text-left font-indieflower text-${BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textColor} select-none`} style={{ textShadow: BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textShadow, fontSize: `${getComputedPixelSize(66)}px`, lineHeight: `${getComputedPixelSize(66)}px`, letterSpacing: `${getComputedPixelSize(6)}px` }}><span className=\"font-bold\">{`${birthday.prenom}`}</span> <span className=\"font-bold\">{`${birthday.nom}`}</span></div>\n                                })}\n                            </div>\n                        </div>\n                    </div>}\n\n\n                    {/* <div className=\"pointer-events-none flex w-full h-full items-start justify-start p-8\">  \n                        <div className=\"flex-col items-center justify-center space-y-2\">\n                            <h2 className={`text-left white-glassmorphism max-w-max text-6xl py-8 px-10 rounded-lg font-permanentmarker text-${BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textColor} select-none`} style={{\"textShadow\": BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textShadow }}>Joyeux anniversaire!</h2>\n                            <div className={`grid py-8 px-10 max-w-max white-glassmorphism rounded-lg grid-rows-${birthdays.length > BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].maxNameCol ? BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].maxNameCol : birthdays.length} grid-flow-col gap-y-4 gap-x-20`}>\n                                {birthdays.map((birthday, index) => {\n                                    return <div className={`text-left font-indieflower tracking-widest text-${BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textColor} select-none`} style={{\"textShadow\": BIRTHDAY_IMG_BACKGROUNDS[bgImgIdx].textShadow }}><span className=\"font-bold text-4xl\">{`${birthday.prenom}`}</span> <span className=\"font-bold text-4xl\">{`${birthday.nom}`}</span></div>\n                                })}\n                            </div>\n                        </div>\n                    </div> */}\n                    </div>\n                </div>}\n            </div>\n        </div>\n    );\n}\n\nexport default BirthdayTool;","const dataSourceType = {\n    GOOGLESHEET: \"GOOGLESHEET\",\n    API: \"API\"\n};\n\nconst alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nconst API_KEY_GOOGLE_SHEET = process.env.REACT_APP_GOOGLE_SHEET_API_KEY;\n\nfunction DataSource() {\n    // CONFIG\n    this.id = 0;\n    this.name = \"\";\n    this.properties = {};\n    this.fetchQuery = \"\";\n    this.type = \"\";\n    this.dataRefreshRate = 60000;\n\n    // STATUS\n    this.valid = false;\n    this.dataLoaded = false;\n\n    // MODEL\n    this.fieldNames = [];\n    this.idFieldName = \"\";\n    this.ressources = [];\n    this.dataSets = [];\n\n    // CONTROLLER\n    this.intervalPopulateDynamicFields = undefined;\n    this.intervalUpdateData = undefined;\n\n    // DATA STORING AND MANAGEMENT\n    this.data = null;\n    this.formatedData = null;\n    this.dataRefIndex = {};\n    this.dynamicFields = [];\n}\n\nDataSource.prototype.load = async function(url) {\n\n    // https://docs.google.com/spreadsheets/d/1gwYEvp4q0Zp2-b1DJcO1k3NoBO-BS5pZa6FwmyiXH1w/edit?usp=sharing\n\n    let promises = [];\n    let promises2 = [];\n\n    // Étape 1 : On détermine le type\n    if (url.indexOf(\"https://docs.google.com/spreadsheets/\") > -1) {\n        this.type = dataSourceType.GOOGLESHEET;\n    } else {\n        this.type = dataSourceType.API;\n    }\n\n    // Étape 2 : On va chercher les informations qu'on peut selon le type\n    switch (this.type) {\n        case dataSourceType.GOOGLESHEET:\n            let id = url.substring(url.indexOf(\"/d/\") + 3, url.lastIndexOf(\"/\"));\n\n            this.properties.spreadsheetId = id;\n\n            this.fetchQuery = `https://sheets.googleapis.com/v4/spreadsheets/${id}`;\n\n            promises.push(fetch(this.fetchQuery + '?alt=json&key=' + API_KEY_GOOGLE_SHEET)\n            .then(handleResponse)\n            .then(data => {\n                this.name = data.properties.title;\n                data.sheets.forEach((sheet, index) => {\n                    /* this.ressources.push({ name: sheet.properties.title, id: sheet.properties.sheetId, dataSets: []}); */\n\n                    this.dataSets.push({ name: sheet.properties.title, id: sheet.properties.sheetId, data: [], columns: []});\n\n                    promises2.push(fetch(this.fetchQuery + '/values/' + sheet.properties.title + '?alt=json&key=' + API_KEY_GOOGLE_SHEET)\n                    .then(handleResponse)\n                    .then(data => {\n\n                        // On ajoute un dataSet\n                        /* this.ressources[index].dataSets.push({ data: [], columns: [], headerRowNo: 1 }); */\n\n                        if (data.values.length > 0) {\n                            this.dataSets[index].columns = data.values[0].map((column, index) => {\n                                return { id: index + 1, name: column, title: column, index: index };\n                            });\n                        }\n\n                        data.values.splice(0, 1);\n\n                        data.values.forEach((row, rowIdx) => {\n                            \n                            /* for (let i = 0; i < this.dataSets[index].columns.length; i++) {\n\n                                if (!this.dataSets[index].data[rowIdx]) {\n                                    this.dataSets[index].data.push([]);\n                                }\n\n                                this.dataSets[index].data[rowIdx].push((row[i] ? row[i] : ''));\n                            } */\n                            let rowData = {};\n                            this.dataSets[index].columns.forEach((column, colIdx) => {\n                                rowData[column.name] = row[colIdx] ? row[colIdx] : ''\n                            });\n\n                            this.dataSets[index].data.push(rowData);\n                        });\n                        \n\n                        // On essaye de trouver les tableaux (range) disponnible dans la feuille\n                        /* let dataSetIdx = 0;\n                        let dataSetRowIdx = 0;\n                        let dataSetCellIdx = 0;\n\n                        let maxDataSetCellIdx = 0; */\n\n                        /* data.values.forEach((row, rowIdx) => {\n\n                            if (row.length > 0) {\n                               this.ressources[index].dataSets[dataSetIdx].data.push([]);\n                            } else if ((this.ressources[index].dataSets[dataSetIdx].dataRange) && this.ressources[index].dataSets[dataSetIdx].dataRange.length === 2) {\n                                dataSetIdx += 1;\n                                dataSetRowIdx = 0;\n                                dataSetCellIdx = 0;\n\n                                if (!this.ressources[index].dataSets[dataSetIdx]) {\n                                    this.ressources[index].dataSets.push({ data: [], columns: [], headerRowNo: 1 });\n                                }\n                            } \n                            \n                            row.forEach((cell, cellIdx) => {\n                                if (cell !== '') {\n\n                                    if (!this.ressources[index].dataSets[dataSetIdx].dataRange) {\n                                        this.ressources[index].dataSets[dataSetIdx].dataRange = [`${alphabet[cellIdx]}${rowIdx + 1}`];\n                                    }\n\n                                    if (this.ressources[index].dataSets[dataSetIdx].dataRange.length === 1) {\n                                        this.ressources[index].dataSets[dataSetIdx].columns.push({ name: cell });\n                                    } else if (!this.ressources[index].dataSets[dataSetIdx].columns[dataSetCellIdx].exempleValue) {\n                                        this.ressources[index].dataSets[dataSetIdx].columns[dataSetCellIdx].exempleValue = cell;\n                                    }\n\n                                    if (row.length === cellIdx + 1 && this.ressources[index].dataSets[dataSetIdx].dataRange.length === 1) {\n                                        this.ressources[index].dataSets[dataSetIdx].dataRange.push(`${alphabet[cellIdx]}`);\n                                    }\n\n                                    this.ressources[index].dataSets[dataSetIdx].data[dataSetRowIdx].push(cell);\n                                    dataSetCellIdx += 1;\n\n                                    if (maxDataSetCellIdx < cellIdx) {\n                                        maxDataSetCellIdx = cellIdx;\n                                    }\n\n                                } else if ((this.ressources[index].dataSets[dataSetIdx].dataRange) && this.ressources[index].dataSets[dataSetIdx].dataRange.length === 1) {\n                                    this.ressources[index].dataSets[dataSetIdx].dataRange.push(`${alphabet[cellIdx]}`);\n                                    \n                                    dataSetIdx += 1;\n\n                                    if (!this.ressources[index].dataSets[dataSetIdx]) {\n                                        this.ressources[index].dataSets.push({ data: [], columns: [], headerRowNo: 1 });\n                                    }\n                                }\n                            });\n                            \n                            if (row.length > 0) {\n                               dataSetCellIdx = 0;\n                               dataSetRowIdx += 1;\n                            }\n                            \n                        }); */\n        \n                        return true;\n                    })\n                    .catch(error => {\n                        return true;\n                    }));\n\n                });\n                this.valid = true;\n\n                return true;\n            })\n            .catch(error => {\n                return false;\n            }));\n\n            break;\n        case dataSourceType.API:\n            this.fetchQuery = url;\n            break;\n        default:\n            this.fetchQuery = url;\n            break;\n    }\n\n    return await Promise.all(promises).then(initializations => {\n        let valid = true;\n\n        initializations.forEach(initialization => {\n            if (!initialization) {\n                valid = false;\n            }\n        })\n        \n        /* return valid; */\n\n        return Promise.all(promises2).then(initializations => {\n            let valid = true;\n    \n            initializations.forEach(initialization => {\n                if (!initialization) {\n                    valid = false;\n                }\n            })\n    \n            return valid;\n        });\n    });\n}\n\nDataSource.prototype.init = function(name, fetchQuery, type, dataRefreshRate) {\n    this.name = name;\n    this.fetchQuery = fetchQuery;\n    this.type = type;\n    this.dataRefreshRate = dataRefreshRate;\n\n    this.loadData();\n}\n\nDataSource.prototype.getType = function() {\n    if (this.url.indexOf(\"https://docs.google.com/spreadsheets/\") > -1) {\n        this.type = dataSourceType.GOOGLESHEET;\n    } else {\n        this.type = dataSourceType.API;\n    }\n}\n\nDataSource.prototype.getFetchQuery = function() {\n    switch (this.type) {\n        case dataSourceType.GOOGLESHEET:\n            let id = this.url.substring(this.url.indexOf(\"/d/\") + 3, this.url.lastIndexOf(\"/\"));\n            this.fetchQuery = `https://spreadsheets.google.com/feeds/list/${id}/3/public/values?alt=json`;\n            break;\n        case dataSourceType.API:\n            this.fetchQuery = this.url;\n            break;\n        default:\n            this.fetchQuery = this.url;\n            break;\n    }\n}\n\nDataSource.prototype.setData = function(data) {\n    this.dataLoaded = data ? true : false;\n\n    switch (this.type) {\n        case \"GOOGLESHEET\":\n            this.data = data.values;\n            break;\n        default:\n            this.data = data;\n        break;\n    }\n\n    this.postProcessData();\n}\n\nDataSource.prototype.getData = function() {\n    return this.data;\n}\n\nDataSource.prototype.getName = function() {\n    return this.name;\n}\n\nDataSource.prototype.setId = function(id) {\n    this.id = id;\n}\n\nDataSource.prototype.getId = function() {\n    return this.id;\n}\n\nDataSource.prototype.asyncLoadData = async function() {\n    const response = await fetch(this.fetchQuery);\n    const data = handleResponse(await response).then(data => this.setData(data))\n    .catch(error => {\n        /* console.log(error); */\n    });\n}\n\nDataSource.prototype.loadData = function() {\n    fetch(this.fetchQuery)\n    .then(handleResponse)\n    .then(data => {\n        this.setData(data);\n        this.valid = true;\n    })\n    .catch(error => {\n        console.log(error);\n        let datasource = this\n        setTimeout(function() { datasource.loadData(); }, 1000);\n    });\n}\n\nfunction handleResponse(response) {\n    let contentType = response.headers.get('content-type')\n    if (contentType.includes('application/json')) {\n      return handleJSONResponse(response)\n    } else if (contentType.includes('text/html')) {\n      return handleTextResponse(response)\n    } else {\n      // Other response types as necessary. I haven't found a need for them yet though.\n      throw new Error(`Sorry, content-type ${contentType} not supported`)\n    }\n}\n  \nfunction handleJSONResponse(response) {\n    return response.json()\n      .then(json => {\n        if (response.ok) {\n          return json\n        } else {\n          return Promise.reject(Object.assign({}, json, {\n            status: response.status,\n            statusText: response.statusText\n          }))\n        }\n      })\n}\n\nfunction handleTextResponse(response) {\n    return response.text()\n      .then(text => {\n        if (response.ok) {\n          return text\n        } else {\n          return Promise.reject({\n            status: response.status,\n            statusText: response.statusText,\n            err: text\n          })\n        }\n      })\n}\n\nDataSource.prototype.addDynamicField = function(column, id, elementId) {\n\n    if (this.dynamicFields.findIndex(dynamicField => dynamicField.elementId === elementId) === -1) {\n        this.dynamicFields.push({ column: column, id: id, elementId: elementId });   \n    }\n    \n}\n\nDataSource.prototype.postProcessData = function() {\n\n    if (this.fieldNames.length === 0) {\n        this.retreiveFieldNames(this.data[0]);\n    }\n    \n    this.formatDataToModel(this.data, this.fieldNames);\n\n    if (!this.intervalUpdateData) {\n        let datasource = this\n        this.intervalUpdateData = setInterval(function() { datasource.asyncLoadData(); }, this.dataRefreshRate);\n    }\n    \n}\n\nDataSource.prototype.retreiveFieldNames = function(object) {\n\n    switch (this.type) {\n        case \"GOOGLESHEET\":\n            this.fieldNames = object;\n            this.idFieldName = object[0];\n            this.data = this.data.splice(1, this.data.length - 1);\n            break;\n        default:\n            \n        break;\n    }\n}\n\n\nDataSource.prototype.formatDataToModel = function(data, model) {\n\n    let formatedData = [];\n\n    switch (this.type) {\n        case \"GOOGLESHEET\":\n            data.forEach((item, index) => {\n                let formatedItem = {};\n\n                model.forEach((field, index) => {\n                    formatedItem[field] = item[index];\n                });\n\n                this.dataRefIndex[item[0]] = index;\n\n                formatedData.push(formatedItem);\n            });\n            break;\n        default:\n            \n        break;\n    }\n\n    this.formatedData = formatedData;\n}\n\nDataSource.prototype.getElementByProperty = function(element, property, value) {\n    return this[element].find(result => result[property] === value);\n}\n\nDataSource.prototype.queryDataSet = function(dataSetId, query = []) {\n\n    let dataSet = this.getElementByProperty('dataSets', 'id', dataSetId);\n\n    if (query.length === 0) {\n        query = dataSet.columns;\n    }\n\n    return this.queryObjectsArray(dataSet.data, query);\n\n}\n\nDataSource.prototype.queryObjectsArray = function(data, query) {\n\n    /* query = [\n        {\n            name: 1,\n            filters: {},\n            format: '',\n            width: 30,\n            textDescriptions: {},\n            display: true\n        }\n    ]; */\n\n    let queryResult = [];\n\n    let formatedQueryRow = [];\n    let formatedQueryColumn = '';\n\n    data.forEach(row => {\n\n        formatedQueryRow = [];\n        formatedQueryColumn = '';\n\n        query.forEach(column => {\n            formatedQueryColumn = row[column.name];\n\n            formatedQueryRow.push(formatedQueryColumn);\n        });\n\n        queryResult.push(formatedQueryRow);\n\n    });\n\n    return queryResult;\n}\n\nexport default DataSource;","import DataSource from './DataSource';\n\nfunction DataSourceManager() {\n    this.dataSources = [];\n    this.dynamicFieldsToUpdate = [];\n}\n\nDataSourceManager.prototype.init = function() {\n\n}\n\nDataSourceManager.prototype.find = function(id) {\n    let myDataSource = null;\n\n    for (var key in this.dataSources) {\n        if (this.dataSources[key] && this.dataSources[key].getId() === id) {\n            myDataSource = this.dataSources[key];\n        }\n    }\n    return myDataSource;\n}\n\nDataSourceManager.prototype.getDataSources = function() {\n    return this.dataSources;\n}\n\nDataSourceManager.prototype.add = function(dataSource) {\n\n    dataSource.setId(this.dataSources.length + 1);\n\n    this.dataSources.push(dataSource);\n}\n\nDataSourceManager.prototype.remove = function(id) {\n    var dataSourceIndex = 0;\n    for (var key in this.dataSources) {\n        if (this.dataSources[key] && this.dataSources[key].getId() === id) {\n            break;\n        }\n        dataSourceIndex = dataSourceIndex + 1;\n    }\n\n    if (dataSourceIndex > 0) {\n        this.dataSources.splice(dataSourceIndex, 1);\n    }\n}\n\nDataSourceManager.prototype.addDynamicFieldToUpdate = function(dynamicField) {\n    this.dynamicFieldsToUpdate.push(dynamicField);\n}\n\nDataSourceManager.prototype.updateDynamicFields = function() {\n    if (this.dynamicFieldsToUpdate.length > 0) {\n\t\tfor (let i = 0; i > this.dynamicFieldsToUpdate.length; i++) {\n\t\t\tthis.dynamicFieldsToUpdate[i].dataSource.populateDynamicField(this.dynamicFieldsToUpdate[i].column, this.dynamicFieldsToUpdate[i].id, this.dynamicFieldsToUpdate[i].elementId);\n\t\t}\n\t}\n}\n\nexport default DataSourceManager;\n","import React, { useState, useRef, useEffect } from 'react'\nimport { CheckCircleIcon, XCircleIcon, TableIcon, DatabaseIcon } from '@heroicons/react/outline'\nimport DataSource from './DataSource';\nimport DataSourceManager from './DataSourceManager';\nimport FcmBd from './FcmBd';\n\nconst LoadingSpinner = ({ className }) => {\n    return (\n      <svg className={`animate-spin ${className}`} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n      </svg>\n    );\n}\n\nconst dataSourceManager = new DataSourceManager();\n\nconst DataSourceTool = ({ isHidden }) => {\n\n    const [url, setUrl] = useState(\"https://docs.google.com/spreadsheets/d/1gwYEvp4q0Zp2-b1DJcO1k3NoBO-BS5pZa6FwmyiXH1w/edit?usp=sharing\");\n    const [dataSources, setDataSources] = useState([]);\n    const [selectedDataSource, setSelectedDataSource] = useState([]);\n\n    const [thumbPreviewWidth, setThumbPreviewWidth] = useState(0);\n    const thumbPreview = useRef();\n\n    const [thumbFontSize, setThumbFontSize] = useState(10);\n    const [thumbTablePadding, setThumbTablePadding] = useState(1);\n    const [thumbTableWidth, setThumbTableWidth] = useState(100);\n    const [totalColumnWidth, setTotalColumnWidth] = useState(0);\n    const [maxNbRows, setMaxNbRows] = useState(0);\n\n    const [htmlTable, setHtmlTable] = useState(<></>);\n\n    const [query, setQuery] = useState([]);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [isValidSource, setIsValidSource] = useState(true);\n\n    const handleChange = (e) => {\n        const { target } = e;\n        const { value } = target;\n        e.persist();        \n    \n        setUrl(value);\n    };\n\n    useEffect(() => {\n        /* FcmBd.DataSources.init('RXBK03'); */\n        FcmBd.init({ GOOGLESHEETAPIKEY: process.env.REACT_APP_GOOGLE_SHEET_API_KEY });\n        FcmBd.DataSources.create('TestData', \"https://docs.google.com/spreadsheets/d/1gwYEvp4q0Zp2-b1DJcO1k3NoBO-BS5pZa6FwmyiXH1w/edit?usp=sharing\", async (req, res) => {});\n\n        try {\n            FcmBd.DataSources.init('http://dev.app.netsign.tv/ExternalAjax/router/getDataSource?s=4eb0194ddf4d6c7a72dca4fd3149e92e').then(result => console.log(\"find SimonsTestData\", FcmBd.DataSources.find('SimonsTestData')));\n        } catch (e) {\n\n        }\n\n    }, [])\n\n    const handleAddDataSource = (e) => {\n        e.preventDefault();\n\n        if (url) {\n            setIsLoading(true);\n            createDataSource();\n        } else {\n            setIsLoading(true);\n            let query = { \n                select: {\n                    nom: 1,\n                    prenom: 1,\n                    equipe: 1,\n                    pause: 1,\n                    debut: 1,\n                    fin: 1\n                }, \n                from: 'Simons',\n                where: { $and: [{ pause: 'A'}, {equipe: 121}] },\n                orderBy: [{ nom: 1 }, { prenom: 1 }],\n                limit: 200,\n                skip: 0\n            };\n\n            FcmBd.DataSources.query('TestData', false, query).then(queryResult => {\n                console.log('FcmBd.DataSources.query(\"TestData\")', queryResult);\n                setIsLoading(false);\n            });\n        }\n        \n    }\n\n    const createDataSource = () => {\n\n        FcmBd.DataSources.create('TestData2', url, async (req, res) => {\n\n            let find = FcmBd.DataSources.find('TestData2');\n\n            /* let query = { \n                select: ['nom', 'prenom', 'equipe', 'pause', 'debut', 'fin'], \n                from: 'Simons', \n                orderBy: ['equipe', 'nom', 'prenom'] \n            }; */\n\n            let query = { \n                select: {\n                    nom: 1,\n                    prenom: 1,\n                    equipe: 1,\n                    pause: 1,\n                    debut: 1,\n                    fin: 1\n                }, \n                from: 'Simons',\n                where: { equipe: 9 },\n                orderBy: [{ nom: 1 }, { prenom: 1 }],\n                limit: 200,\n                skip: 0\n            };\n\n            let queryResult = await FcmBd.DataSources.query('TestData2', true, query);\n\n            console.log('FcmBd.DataSources.find(\"TestData\")', find);\n            console.log('FcmBd.DataSources.query(\"TestData\")', queryResult);\n        });        \n\n        let newDataSource = new DataSource();\n\n        newDataSource.load(url).then(valid => {\n            if (valid) {\n                dataSourceManager.add(newDataSource);\n                console.log(newDataSource);\n\n                setDataSources(dataSourceManager.getDataSources());\n                setUrl('');\n                setIsLoading(false);\n            }\n        });\n    }\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            setIsLoading(true);\n            createDataSource();\n        }\n      }\n\n    const handleSelectDataSource = (dataSourceIdx, dataSetId) => {\n        setSelectedDataSource([dataSourceIdx, dataSetId]);\n\n        let newQuery = dataSources[dataSourceIdx].getElementByProperty('dataSets', 'id', dataSetId).columns.map(column => {\n            return {...column, filters: {}, format: '', width: 0, textAlign: 'left', textDescriptions: {}, display: true };\n        });\n\n        setQuery(newQuery);\n    }\n\n    const handleChangeQueryColumn = (e, colIndex) => {\n        const target = e.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        e.persist();\n\n        let newQuery = [...query];\n\n        newQuery[colIndex][name] = value;\n\n        setQuery(newQuery);\n    }\n\n    const handleChangeQueryColumnSpecific = (e, name, value, colIndex) => {\n        e.persist();\n\n        let newQuery = [...query];\n\n        newQuery[colIndex][name] = value;\n\n        setQuery(newQuery);\n    }\n\n    const sum = (items, prop) => {\n        return items.reduce( function(a, b){\n            return a + parseInt(b[prop]);\n        }, 0);\n    }\n\n    const getMaxNbRows = (previewWidth, fontSize, tablePadding, windowPadding) => {\n\n        let screenHeight = previewWidth / 16 * 9;\n        let minHeaderFontSize = getComputedPixelSize(fontSize * 1.25);\n        let minBannerSpace = 0;\n        let minTablePadding = getComputedPixelSize(tablePadding < 2 ? 2 : 0);\n        let minWindowPadding = getComputedPixelSize(windowPadding);\n        let minCellPadding = getComputedPixelSize(tablePadding / 3);\n        let minCellFontSize = getComputedPixelSize(fontSize);\n\n\n        let newMaxNbRows = Math.floor((screenHeight - minHeaderFontSize - minBannerSpace - (minTablePadding * 2) - (minWindowPadding * 2)) / ((minCellPadding * 2) + minCellFontSize + 1));\n\n        return newMaxNbRows;\n    }\n\n    useEffect(() => {\n\n        let tables = [];\n\n        if (selectedDataSource && selectedDataSource.length > 0) {\n\n            let screenHeight = thumbPreviewWidth / 16 * 9;\n            let minHeaderFontSize = getComputedPixelSize(thumbFontSize * 1.25);\n            let minHeaderPadding = getComputedPixelSize(thumbTablePadding * 1.5);\n            let minBannerSpace = 0;\n            let minTablePadding = 0;\n            let minWindowPadding = getComputedPixelSize(25);\n            let minCellPadding = getComputedPixelSize(thumbTablePadding);\n            let minCellFontSize = getComputedPixelSize(thumbFontSize);\n\n            let newMaxNbRows = Math.floor((screenHeight - minHeaderFontSize - minBannerSpace - (minTablePadding * 2) - (minWindowPadding * 2) - (minHeaderPadding * 2)) / ((minCellPadding * 2) + minCellFontSize + 1));\n\n            for (let i = 0;i < 1; i++) {\n\n                let columns = query.filter(column => column.display === true);\n                let data = dataSources[selectedDataSource[0]].queryDataSet(selectedDataSource[1], query.filter(column => column.display === true)).slice(newMaxNbRows * i, (newMaxNbRows * i) + newMaxNbRows);\n\n                if (data.length > 0) {\n                    let table = <div className=\"table rounded-sm overflow-hidden\"\n                                style={{ \n                                    /* padding: `${getComputedPixelSize(thumbTablePadding < 2 ? 2 : 0)}px ${getComputedPixelSize(thumbTablePadding < 2 ? 2 : thumbTablePadding / 3)}px ${getComputedPixelSize(thumbTablePadding < 2 ? 2 : thumbTablePadding)}px ${getComputedPixelSize(thumbTablePadding < 2 ? 2 : thumbTablePadding / 3)}px`, */\n                                    width: `${thumbTableWidth}%`,\n                                    marginLeft: `${i === 0 ? 0 : getComputedPixelSize(10)}px`\n                                }}\n                            >\n                                <div className=\"table-header-group bg-gray-200 bg-opacity-90\">\n                                    <div className=\"table-row\">\n                                        {columns.map(column => {\n                                            return <div className=\"table-cell align-middle font-medium select-none leading-none truncate\" \n                                            style={{ \n                                                padding: `${getComputedPixelSize(thumbTablePadding * 1.5)}px ${getComputedPixelSize(thumbTablePadding * 3)}px ${getComputedPixelSize(thumbTablePadding * 1.5)}px ${getComputedPixelSize(thumbTablePadding * 3)}px`,\n                                                fontSize: `${getComputedPixelSize(thumbFontSize * 1.25)}px`,\n                                                lineHeight: `${getComputedPixelSize(thumbFontSize * 1.25)}px`,\n                                                width: (column.width > 0 ? `${column.width}%` : 'auto'),\n                                                textAlign: column.textAlign\n                                            }}\n                                            >{column.title}</div>\n                                        })}\n                                    </div>\n                                </div>\n                                <div className=\"table-row-group bg-white bg-opacity-90\"\n                                    style={{ \n                                        padding: `${getComputedPixelSize(thumbTablePadding)}px 0`,\n                                    }}\n                                >\n                                    {data.map(row => {\n                                        return <div className=\"table-row\">\n                                            {row.map((cell, index) => {\n                                                return <div className=\"table-cell align-middle select-none leading-none truncate border-t border-gray-300\" \n                                                    style={{ \n                                                        padding: `${getComputedPixelSize(thumbTablePadding)}px ${getComputedPixelSize(thumbTablePadding * 3)}px ${getComputedPixelSize(thumbTablePadding)}px ${getComputedPixelSize(thumbTablePadding * 3)}px`,\n                                                        fontSize: `${getComputedPixelSize(thumbFontSize)}px`,\n                                                        lineHeight: `${getComputedPixelSize(thumbFontSize)}px`,\n                                                        textAlign: columns[index].textAlign\n                                                    }}\n                                                >{cell}</div>\n                                            })}\n                                        </div>\n                                    })}\n                                </div>\n                            </div>\n\n                    tables.push(table);\n                }\n                \n            }\n\n            setMaxNbRows(newMaxNbRows);\n        }\n\n        setHtmlTable(tables);\n\n    }, [thumbPreviewWidth, thumbFontSize, thumbTablePadding, dataSources, selectedDataSource, query, thumbTableWidth]);\n\n    /* useEffect(() => {\n        let totalWidth = sum(query, 'width');\n\n        console.log(totalWidth);\n\n        totalWidth = 100 - totalWidth;\n\n        setTotalColumnWidth(totalWidth);\n    }, [query]); */\n\n    useEffect(() => {\n        setThumbPreviewWidth(thumbPreview.current.offsetWidth);\n    }, [thumbPreview]);\n    \n    const getComputedPixelSize = (pixel) => {\n    let computedPixelSize = 0;\n    let currentThuumbPreviewWidth = thumbPreviewWidth;\n\n    if (thumbPreviewWidth === 0) {\n        currentThuumbPreviewWidth = thumbPreview.current.offsetWidth;\n        setThumbPreviewWidth(currentThuumbPreviewWidth);\n    }\n\n    computedPixelSize = currentThuumbPreviewWidth / 672 * pixel;\n\n    return computedPixelSize;\n    }\n\n    return (\n        <div className={`min-h-screen flex-col lg:flex-row items-start justify-center bg-gray-50 py-20 lg:py-12 px-4 sm:px-6 lg:px-8 space-y-20 lg:space-y-0 lg:space-x-40 ${isHidden ? 'hidden' : 'flex'}`}>\n            <div className=\"max-w-2xl w-full space-y-3\">\n                <div className=\"flex flex-col items-start justify-start\">\n                    <h2 className=\"ml-2 text-left text-3xl font-extrabold text-gray-900 select-none\">Source de données</h2>\n                </div>\n                <div className=\"flex flex-col items-center justify-center space-y-4 w-full\">\n                    <div className=\"flex flex-row item-center justify-center align-middle space-x-2 bg-gray-100 p-2 rounded-md w-full\">\n                        <div className=\"w-full flex flex-col\">\n                            <input\n                                id=\"texte\"\n                                onChange={handleChange}\n                                value={url}\n                                name=\"dataSourceUrl\"\n                                type=\"text\"\n                                required\n                                className=\"resize-none appearance-none rounded-none relative block h-9 w-full px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                                placeholder=\"Entrez l'url de la source de données\"\n                                onKeyDown={handleKeyDown}\n                            />\n                        </div>\n                        <div onClick={handleAddDataSource} className={`rounded-md select-none h-9 w-9 font-medium text-center text-sm text-white align-middle border-2 flex items-center justify-center ${isValidSource ? 'cursor-pointer shadow bg-blue-600 hover:bg-blue-500 border-blue-600 hover:border-blue-500' : 'pointer-event-none bg-gray-100 border-gray-100'}`}>\n                            {isLoading ? <LoadingSpinner className=\"h-5 w-5 text-white\" /> : isValidSource ? <CheckCircleIcon className=\"h-6 w-6 text-white\" /> : <XCircleIcon className=\"h-6 w-6 text-gray-300\" />}\n                        </div>\n                    </div>                \n                </div>\n                <div className=\"flex flex-row space-x-2 items-start justify-start\">\n                    {dataSources.map((dataSource, dSrcIndex) => {\n                        return <div key={dSrcIndex} className={`cursor-pointer flex flex-row items-center py-3 px-4 space-x-4 justify-center rounded-md border shadow-sm ${false ? 'text-white bg-blue-500 hover:bg-blue-400 border-blue-500 hover:border-blue-400' : 'text-gray-900 bg-gray-100 hover:bg-gray-100 border-gray-100 hover:border-gray-100'}`}>\n                            <div className=\"flex flex-col items-start justify-start space-y-1\">\n                                <div className=\"leading-none font-medium\">{dataSource.name}</div>\n                                <div className=\"leading-none font-light text-xs\">{dataSource.type}</div>\n                                <div className=\"flex flex-row items-start justify-start space-x-2 pt-2\">\n                                    {dataSource.dataSets.map((dataSet, rIndex) => {\n                                        return <div key={rIndex} onClick={() => handleSelectDataSource(dSrcIndex, dataSet.id)}\n                                                className={`cursor-pointer flex flex-row items-center justify-center py-0.5 px-2 rounded-sm border bg-transparent ${selectedDataSource.length > 0 && selectedDataSource[0] === dSrcIndex && selectedDataSource[1] === dataSet.id ? 'text-white bg-blue-500 border-blue-500' : 'text-gray-600 border-gray-300 hover:border-blue-500 hover:text-blue-500'}`}>\n                                                    <div className=\"text-xs\">{dataSet.name}</div>\n                                                </div>\n                                    })}\n                                </div>\n                            </div>\n                            \n                        </div>\n                    })}\n                    {/* {dataSources.map((dataSource, dSrcIndex) => {\n                        return <div key={dSrcIndex} className=\"flex flex-row items-center justify-start space-x-4 py-2 px-4 rounded-md w-full\">\n                            <div className=\"font-bold pr-4\">{dataSource.name}</div>\n                            {dataSources.length > 0 && dataSource.ressources.map((ressource, rIndex) => {\n                                return <div key={rIndex} className=\"flex flex-row items-center justify-start space-x-4\">\n                                    {ressource.dataSets.map((dataSet, dSetIndex) => {\n                                        return <div key={dSetIndex} onClick={() => setSelectedDataSource([dSrcIndex, rIndex, dSetIndex])} \n                                        className={`cursor-pointer flex flex-row items-center justify-start space-x-2 py-0.5 px-3 rounded-full border shadow-sm border-gray-200  ${selectedDataSource.length > 0 && selectedDataSource[0] === dSrcIndex && selectedDataSource[1] === rIndex && selectedDataSource[2] === dSetIndex ? 'text-white bg-blue-500 hover:bg-blue-400 border-blue-500 hover:border-blue-400' : 'text-gray-900 bg-gray-200 hover:bg-gray-100 hover:border-gray-200'}`}>\n                                            <TableIcon className=\"h-6 w-6\" />\n                                            <div className=\"text-sm pr-0.5\">{`${ressource.name}!${dataSet.dataRange[0]}:${dataSet.dataRange[1]}`}</div>\n                                        </div>\n                                    })}\n                                </div>\n                            })}\n                        </div>\n                    })} */}\n                </div>\n\n                {query.length > 0 && \n                    <div className=\"flex flex-col item-start justify-start space-y-2 bg-gray-100 p-2 rounded-md w-full\">\n                        <div className=\"table w-full rounded-sm\">\n                            <div className=\"table-header-group\">\n                                <div className=\"table-row\">\n                                    <div className=\"table-cell text-xs font-medium py-1 px-2\"></div>\n                                    <div className=\"table-cell text-xs font-medium py-1 px-2\">Titre</div>\n                                    <div className=\"table-cell text-xs font-medium py-1 px-2 text-center\">Afficher</div>\n                                    <div className=\"table-cell text-xs font-medium py-1 px-2\">Alignement</div>\n                                    <div className=\"table-cell text-xs font-medium py-1 px-2\">Largeur</div>\n                                    {/* <div className=\"table-cell text-xs font-medium\">Style</div> */}\n                                </div>\n                            </div>\n                            <div className=\"table-row-group\">\n                                {query.map((column, index) => {\n                                    return <div className=\"table-row\" key={column.name}>\n                                        <div className=\"table-cell text-xs py-1 px-1 text-center align-middle\">{index + 1}</div>\n                                        <div className=\"table-cell py-1 px-2 align-middle\">\n                                            <input\n                                                id={`title-${index}`}\n                                                onChange={event => handleChangeQueryColumn(event, index)}\n                                                value={column.title}\n                                                name='title'\n                                                type=\"text\"\n                                                autoComplete=\"off\"\n                                                className=\"resize-none appearance-none rounded-none relative block h-6 w-full px-2 py-1 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                                                placeholder=\"Titre\"\n                                            />\n                                        </div>\n                                        <div className=\"table-cell py-1 px-2 text-center align-middle\">\n                                            <input type=\"checkbox\" id={`display-${index}`} name=\"display\" checked={column.display} onChange={event => handleChangeQueryColumn(event, index)} className=\"appearance-none cursor-pointer checked:bg-blue-500 checked:border-transparent\" />\n                                        </div>\n                                        <div className=\"table-cell py-1 px-2 align-middle\">\n                                            <div className=\"flex flex-row space-x-1\">\n                                                <div onClick={event => handleChangeQueryColumnSpecific(event, 'textAlign', 'left', index)} className=\"cursor-pointer\">\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className={`h-6 w-6 ${column.textAlign === 'left' && 'text-blue-500'}`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M 4 6 h 16 M 4 12 h 8 m -8 6 h 12\" />\n                                                    </svg>\n                                                </div>\n                                                <div onClick={event => handleChangeQueryColumnSpecific(event, 'textAlign', 'center', index)} className=\"cursor-pointer\">\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className={`h-6 w-6 ${column.textAlign === 'center' && 'text-blue-500'}`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M 4 6 h 16 M 8 12 h 8 m -10 6 h 12\" />\n                                                    </svg>\n                                                </div>\n                                                <div onClick={event => handleChangeQueryColumnSpecific(event, 'textAlign', 'right', index)} className=\"cursor-pointer\">\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className={`h-6 w-6 ${column.textAlign === 'right' && 'text-blue-500'}`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M 4 6 h 16 M 12 12 h 8 m -12 6 h 12\" />\n                                                    </svg>\n                                                </div>\n\n                                            </div>\n                                            \n                                        </div>\n                                        <div className=\"table-cell py-1 px-2 align-middle\">\n                                            <div className=\"flex flex-row\">\n                                                <input type=\"range\" className=\"cursor-pointer\" id={`width-${index}`} step={1} name=\"width\" min=\"0\" max={100} onChange={event => handleChangeQueryColumn(event, index)} defaultValue={0} />\n                                                <div className=\"text-xs px-2\">{column.width}</div>\n                                            </div>\n                                        </div>\n                                        {/* <div className=\"table-cell\"></div> */}\n                                    </div>\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n            <div className=\"max-w-2xl w-full space-y-3\" ref={thumbPreview}>\n                {selectedDataSource && selectedDataSource.length > 0 && <>\n                <div className=\"w-full aspect-w-16 aspect-h-9 bg-gray-100 rounded-md shadow overflow-hidden\">\n                    <div className=\"w-full h-full gradientBackground\"></div>\n                    \n                        <div className=\"flex flex-row w-full h-full items-start justify-start\"\n                            style={{\n                                padding: `${getComputedPixelSize(25)}px ${getComputedPixelSize(25)}px ${getComputedPixelSize(25)}px ${getComputedPixelSize(25)}px`\n                            }}\n                        >\n                            {/* <div className=\"flex flex-col items-start justify-start\">\n                                <h2 className=\"text-left font-extrabold text-white select-none\"\n                                style={{\n                                    fontSize: `${getComputedPixelSize(18)}px`,\n                                    paddingBottom: `${getComputedPixelSize(thumbTablePadding * 2)}px`\n                                }}\n                                >{dataSources[selectedDataSource[0]].dataSets.find(dataSet => dataSet.id === selectedDataSource[1]).name}</h2>\n                            </div> */}\n                            {/* <div className=\"table rounded-sm bg-white bg-opacity-90\"\n                                style={{ \n                                    padding: `${getComputedPixelSize(thumbTablePadding < 2 ? 2 : 0)}px ${getComputedPixelSize(thumbTablePadding < 2 ? 2 : thumbTablePadding / 3)}px ${getComputedPixelSize(thumbTablePadding < 2 ? 2 : thumbTablePadding)}px ${getComputedPixelSize(thumbTablePadding < 2 ? 2 : thumbTablePadding / 3)}px`,\n                                    width: `${thumbTableWidth}%`\n                                }}\n                            >\n                                <div className=\"table-header-group\">\n                                    <div className=\"table-row\">\n                                        {query.filter(column => column.display === true).map(column => {\n                                            return <div className=\"table-cell font-medium select-none leading-none\" \n                                            style={{ \n                                                padding: `${getComputedPixelSize(thumbTablePadding * 2)}px ${getComputedPixelSize(thumbTablePadding * 3)}px ${getComputedPixelSize(thumbTablePadding * 2)}px ${getComputedPixelSize(thumbTablePadding * 3)}px`,\n                                                fontSize: `${getComputedPixelSize(thumbFontSize * 1.25)}px`,\n                                                width: (column.width > 0 ? `${column.width}%` : 'auto')\n                                            }}\n                                            >{column.title}</div>\n                                        })}\n                                    </div>\n                                </div>\n                                <div className=\"table-row-group\">\n                                    {dataSources[selectedDataSource[0]].queryDataSet(selectedDataSource[1], query.filter(column => column.display === true)).slice(0, maxNbRows).map(row => {\n                                        return <div className=\"table-row\">\n                                            {row.map(cell => {\n                                                return <div className=\"table-cell select-none leading-none\" \n                                                    style={{ \n                                                        padding: `${getComputedPixelSize(thumbTablePadding)}px ${getComputedPixelSize(thumbTablePadding * 3)}px ${getComputedPixelSize(thumbTablePadding)}px ${getComputedPixelSize(thumbTablePadding * 3)}px`,\n                                                        fontSize: `${getComputedPixelSize(thumbFontSize)}px`,\n                                                    }}\n                                                >{cell}</div>\n                                            })}\n                                        </div>\n                                    })}\n                                </div>\n                            </div> */}\n\n                            {htmlTable}\n\n                        </div>\n                </div>\n\n                <div className=\"flex flex-row flex-wrap item-center justify-start align-middle w-full mt-2\">\n                    <div>{`${maxNbRows}/${dataSources[selectedDataSource[0]].queryDataSet(selectedDataSource[1], query.filter(column => column.display === true)).length}`}</div>\n                </div>\n\n                <div className=\"flex flex-row flex-wrap item-center justify-start align-middle w-full mt-2\">\n\n                    <div className=\"flex flex-col lg:flex-row flex-wrap item-center justify-start align-middle w-full mt-4\">\n                        <div className=\"flex flex-row\">\n                            <div className={\"select-none rounded-md m-1 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n                            Taille du texte :\n                            </div>\n                            <div className={\"select-none rounded-md m-1 pl-2 pr-1 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n                                <input type=\"range\" id=\"fontSize\" step={0.1} name=\"fontSize\" min=\"4\" max=\"25\" onChange={e => setThumbFontSize(parseFloat(e.target.value))} defaultValue={10} />\n                            </div>\n                            <div className={\"select-none w-4 rounded-md m-1 pr-2 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n                                {thumbFontSize}\n                            </div>\n                        </div>\n                        <div className=\"flex flex-row\">\n                            <div className={\"select-none rounded-md m-1 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n                            Largeur du tableau :\n                            </div>\n                            <div className={\"select-none rounded-md m-1 pl-2 pr-1 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n                                <input type=\"range\" id=\"padding\" step={1} name=\"padding\" min=\"0\" max=\"100\" onChange={e => setThumbTableWidth(parseInt(e.target.value))} defaultValue={100} />\n                            </div>\n                            <div className={\"select-none w-4 rounded-md m-1 pr-2 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n                                {thumbTableWidth}\n                            </div>\n                        </div>\n                        <div className=\"flex flex-row\">\n                            <div className={\"select-none rounded-md m-1 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n                            Espacement :\n                            </div>\n                            <div className={\"select-none rounded-md m-1 pl-2 pr-1 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n                                <input type=\"range\" id=\"padding\" step={0.1} name=\"padding\" min=\"1\" max=\"10\" onChange={e => setThumbTablePadding(parseFloat(e.target.value))} defaultValue={1} />\n                            </div>\n                            <div className={\"select-none w-4 rounded-md m-1 pr-2 py-0.5 text-center text-xs flex items-center font-medium justify-center align-middle border-2 text-gray-600 bg-gray-50 border-gray-50\"}>\n                                {thumbTablePadding}\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n                </>\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default DataSourceTool;","import React, { Fragment, useState, useRef, useEffect } from 'react'\nimport { CheckCircleIcon, XCircleIcon, TableIcon, DatabaseIcon } from '@heroicons/react/outline'\nimport FcmBd from './FcmBd';\n\n\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\n\nconst LoadingSpinner = ({ className }) => {\n    return (\n      <svg className={`animate-spin ${className}`} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n      </svg>\n    );\n}\n\nconst ListeDeroulante = ({ list, onChange }) => {\n    const [selected, setSelected] = useState('');\n\n    const handleChange = (value) => {        \n        onChange(value);\n        setSelected(value);\n    };\n\n    return (\n        <div className=\"w-72\">\n        <Listbox value={selected} onChange={handleChange}>\n            <div className=\"relative\">\n            <Listbox.Button className=\"relative border border-gray-200 w-full py-2 pl-3 pr-10 text-left bg-white rounded-lg cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm\">\n                <span className=\"block truncate\">{selected || 'Choisir'}</span>\n                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon\n                    className=\"w-5 h-5 text-gray-400\"\n                    aria-hidden=\"true\"\n                />\n                </span>\n            </Listbox.Button>\n            <Transition\n                as={Fragment}\n                leave=\"transition ease-in duration-100\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n            >\n                <Listbox.Options className=\"absolute w-full py-1 mt-1 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none z-10 sm:text-sm\">\n                {list.map((item, itemIdx) => (\n                    <Listbox.Option\n                    key={itemIdx}\n                    className={({ active }) =>\n                        `${active ? 'text-blue-900 bg-blue-100' : 'text-gray-900'}\n                            cursor-default select-none relative py-2 pl-10 pr-4`\n                    }\n                    value={item}\n                    >\n                    {({ selected, active }) => (\n                        <>\n                        <span\n                            className={`${\n                            selected ? 'font-medium' : 'font-normal'\n                            } block truncate`}\n                        >\n                            {item}\n                        </span>\n                        {selected ? (\n                            <span\n                            className={`${\n                                active ? 'text-blue-600' : 'text-blue-600'\n                            }\n                                    absolute inset-y-0 left-0 flex items-center pl-3`}\n                            >\n                            <CheckIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                            </span>\n                        ) : null}\n                        </>\n                    )}\n                    </Listbox.Option>\n                ))}\n                </Listbox.Options>\n            </Transition>\n            </div>\n        </Listbox>\n        </div>\n    )\n}\n\nconst VisualQueryBuilderTool = ({ isHidden }) => {\n\n    const [dataSource, setDataSource] = useState();\n    const [dataSet, setDataSet] = useState();\n\n    const [columns, setColumns] = useState();\n    const [where, setWhere] = useState();\n    const [orderBy, setOrderBy] = useState();\n    const [limit, setLimit] = useState();\n    const [skip, setSkip] = useState();\n\n    const [query, setQuery] = useState();\n    const [queryResult, setQueryResult] = useState();\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleChangeColumns = (e) => {\n        const { target } = e;\n        const { value } = target;\n        e.persist();\n        setColumns(value);    \n    };\n\n    const handleChangeWhere = (e) => {\n        const { target } = e;\n        const { value } = target;\n        e.persist();\n        setWhere(value);    \n    };\n\n    const handleChangeOrderBy = (e) => {\n        const { target } = e;\n        const { value } = target;\n        e.persist();\n        setOrderBy(value);    \n    };\n\n    const handleChangeLimit = (e) => {\n        const { target } = e;\n        const { value } = target;\n        e.persist();\n        setLimit(value);    \n    };\n\n    const handleChangeSkip = (e) => {\n        const { target } = e;\n        const { value } = target;\n        e.persist();\n        setSkip(value);    \n    };\n\n    /* const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            let newQuery = buildQuery(dataSet, columns, where, orderBy, limit, skip);\n            setQuery(newQuery);\n            FcmBd.DataSources.query(dataSource, false, newQuery).then(result => setQueryResult(result));\n        }\n      } */\n\n    const handleExecuteQuery = (e) => {\n        let newQuery = buildQuery(dataSet, columns, where, orderBy, limit, skip);\n        setQuery(newQuery);\n        FcmBd.DataSources.query(dataSource, false, newQuery).then(result => setQueryResult(result));\n    }\n\n    useEffect(() => {\n        if (dataSet) {\n            let select = {};\n            \n            FcmBd.DataSources.list(dataSource, dataSet).forEach(column => {\n                select[column] = 1;\n            })\n\n            let newColums = JSON.stringify(select).replaceAll(\",\",\", \").replaceAll(\":\",\": \").replaceAll(\"{\",\"{ \").replaceAll(\"}\",\" }\");\n\n            setColumns(newColums);\n\n            let newQuery = buildQuery(dataSet, newColums);\n            \n            setQuery(newQuery);\n\n            FcmBd.DataSources.query(dataSource, false, newQuery).then(result => setQueryResult(result));\n        }\n    }, [dataSource, dataSet]);\n\n    const buildQuery = (from, select, filtre = undefined, ordre = undefined, limite = undefined, depart = undefined) => {\n        let query = {};\n\n        if (from) {\n            query.from = from;\n        }\n\n        if (isJsonString(select)) {\n            query.select = JSON.parse(select);\n        }\n\n        if (isJsonString(filtre)) {\n            query.where = JSON.parse(filtre);\n        }\n\n        if (isJsonString(ordre)) {\n            query.orderBy = JSON.parse(ordre);\n        }\n\n        if (limite !== \"\" && limite !== undefined) {\n            query.limit = parseFloat(limite);\n        }\n\n        if (depart !== \"\" && depart !== undefined) {\n            query.skip = parseFloat(depart);\n        }\n\n        return query;\n    }\n\n    const isJsonString = (str) => {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    return (\n        <div className={`min-h-screen flex-col lg:flex-row items-start justify-center bg-gray-100 py-20 lg:py-12 px-4 sm:px-6 lg:px-8 space-y-20 lg:space-y-0 lg:space-x-20 ${isHidden ? 'hidden' : 'flex'}`}>\n            <div className=\"max-w-xl w-full space-y-7\">\n                <div className=\"flex flex-col items-start justify-start\">\n                    <h2 className=\"ml-2 text-left text-3xl font-extrabold text-gray-900 select-none\">Concepteur de tableau</h2>\n                </div>\n                <div className=\"flex flex-col items-center justify-center space-y-4 w-full\">\n                    <div className=\"bg-white shadow overflow-hidden sm:rounded-lg w-full\">\n                        <div className=\"px-4 py-5 sm:px-6\">\n                            <h3 className=\"select-none text-lg leading-6 font-medium text-gray-900\">Nouveau tableau</h3>\n                            <p className=\"select-none mt-1 max-w-2xl text-sm text-gray-500\">Définissez les données à afficher.</p>\n                        </div>\n                        <div className=\"border-t border-gray-200\">\n                            <dl>\n                                <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                                    <dt className=\"select-none text-sm font-medium text-gray-500\">Source</dt>\n                                    <dd className=\"select-none mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                                        <div className=\"flex flex-col space-y-1 w-full\">\n                                            <ListeDeroulante list={FcmBd.DataSources.list()} onChange={setDataSource} />\n                                            {dataSource && <ListeDeroulante list={FcmBd.DataSources.list(dataSource)} onChange={setDataSet} />}\n                                        </div>\n                                    </dd>\n                                </div>\n                                <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                                    <dt className=\"select-none text-sm font-medium text-gray-500\">Colonnes</dt>\n                                    <dd className=\"select-none mt-1 text-xs text-gray-900 sm:mt-0 sm:col-span-2\">{/* <pre>{columns && JSON.stringify(columns, null, 4)}</pre> */}\n                                        <textarea\n                                            id=\"columns\"\n                                            onChange={handleChangeColumns}\n                                            value={columns}\n                                            name=\"columns\"\n                                            type=\"textarea\"\n                                            required\n                                            className=\"resize-none select-all appearance-none rounded-none relative block w-full h-16 max-h-16 px-3 py-2 border border-gray-300 placeholder-gray-400 text-gray-900 rounded-md focus:placeholder-transparent focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-xs\"\n                                            placeholder=\"Colonnes à afficher\"\n                                        />\n                                    </dd>\n                                </div>\n                                <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                                    <dt className=\"select-none text-sm font-medium text-gray-500\">Filtres</dt>\n                                    <dd className=\"select-none mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                                        <textarea\n                                            id=\"where\"\n                                            onChange={handleChangeWhere}\n                                            value={where}\n                                            name=\"where\"\n                                            type=\"textarea\"\n                                            required\n                                            className=\"resize-none select-all appearance-none rounded-none relative block w-full h-16 max-h-16 px-3 py-2 border border-gray-300 placeholder-gray-400 text-gray-900 rounded-md focus:placeholder-transparent focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-xs\"\n                                            placeholder=\"Condition d'affichage\"\n                                        />\n                                    </dd>\n                                </div>\n                                <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                                    <dt className=\"select-none text-sm font-medium text-gray-500\">Tri</dt>\n                                    <dd className=\"select-none mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                                        <textarea\n                                            id=\"orderBy\"\n                                            onChange={handleChangeOrderBy}\n                                            value={orderBy}\n                                            name=\"orderBy\"\n                                            type=\"textarea\"\n                                            required\n                                            className=\"resize-none select-all appearance-none rounded-none relative block w-full h-16 max-h-16 px-3 py-2 border border-gray-300 placeholder-gray-400 text-gray-900 rounded-md focus:placeholder-transparent focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-xs\"\n                                            placeholder=\"Tri\"\n                                        />\n                                    </dd>\n                                </div>\n                                <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                                    <dt className=\"select-none text-sm font-medium text-gray-500\">Limite</dt>\n                                    <dd className=\"select-none mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                                        <input\n                                            id=\"limit\"\n                                            onChange={handleChangeLimit}\n                                            value={limit}\n                                            name=\"limit\"\n                                            type=\"number\"\n                                            required\n                                            className=\"resize-none appearance-none rounded-none relative block h-9 w-full px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                                            placeholder=\"Nombre maximum de lignes retournées\"\n                                        />\n                                    </dd>\n                                </div>\n                                <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                                    <dt className=\"select-none text-sm font-medium text-gray-500\">Saut</dt>\n                                    <dd className=\"select-none mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                                        <input\n                                            id=\"skip\"\n                                            onChange={handleChangeSkip}\n                                            value={skip}\n                                            name=\"skip\"\n                                            type=\"number\"\n                                            required\n                                            className=\"resize-none appearance-none rounded-none relative block h-9 w-full px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                                            placeholder=\"Ligne de départ\"\n                                        />\n                                    </dd>\n                                </div>\n                                <div className=\"px-4 py-5 sm:px-6 justify-end flex border-t border-gray-200\">\n                                    <div onClick={handleExecuteQuery} className=\"w-1/5 rounded-md select-none font-medium py-1 px-2 text-center text-sm text-white shadow align-middle bg-blue-600 hover:bg-blue-500 cursor-pointer border-2 border-blue-600 hover:border-blue-500 flex items-center justify-center\">\n                                        {isLoading ? <LoadingSpinner className=\"h-5 w-5 text-white\" /> : 'Exécuter'}\n                                    </div>\n                                </div>\n                            </dl>\n                        </div>\n                    </div>              \n                </div>\n            </div>\n            <div className=\"max-w-5xl overscroll-auto w-full space-y-3\">\n\n                {query && queryResult && <>\n\n                <div className=\"\">\n                    <div className=\"flex flex-row items-start justify-start space-x-2\">\n                        <div className=\"px-5 py-2 bg-white shadow sm:rounded-lg\">\n                            <h3 className=\"select-none text-xs text-gray-500\">Nb. rangées</h3>\n                            <p className=\"select-none text-sm font-medium text-gray-900\">{`${queryResult.returnedNbRows}/${queryResult.datasetNbRows}`}</p>\n                        </div>\n                        <div className=\"px-5 py-2 bg-white shadow sm:rounded-lg\">\n                            <h3 className=\"select-none text-xs text-gray-500\">Durée</h3>\n                            <p className=\"select-none text-sm font-medium text-gray-900\">{`${queryResult.duration}s`}</p>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"table rounded-lg overflow-hidden w-full shadow\">\n                    <div className=\"table-header-group bg-gray-900 bg-opacity-90\">\n                        <div className=\"table-row\">\n                            {Object.keys(query.select).map(column => {\n                                return <div key={`${column}_header`} className=\"py-2 px-2 table-cell text-sm align-middle text-white font-medium select-none leading-none truncate\">{column}</div>\n                            })}\n                        </div>\n                    </div>\n                    {queryResult && queryResult.data && queryResult.data.length > 0 && <div className=\"table-row-group bg-white bg-opacity-90\">\n                        {queryResult.data.map((row, rowIdx) => {\n                            return <div key={`row_${rowIdx}`} className=\"table-row\">\n                                {Object.keys(query.select).map((cell, colIdx) => {\n                                    return <div key={`${cell}_${colIdx + 1}`} className=\"py-1 px-2 table-cell text-xs align-middle select-none leading-none truncate border-t border-gray-300\">{row[cell]}</div>\n                                })}\n                            </div>\n                        })}\n                    </div>}\n                </div>\n                \n                </>}\n\n            </div>\n        </div>\n    );\n}\n\nexport default VisualQueryBuilderTool;","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport { CreationTool, DataSourceTool, VisualQueryBuilderTool, BirthdayTool } from './modules';\nimport { DatabaseIcon, PhotographIcon, TableIcon, GiftIcon } from '@heroicons/react/outline'\nimport { useMediaQuery } from 'react-responsive';\n\nfunction App() {\n\n  const [currentTool, setCurrentTool] = useState(\"CreationTool\");\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  const [password, setPassword] = useState([]);\n\n  const [isWrongPassword, setIsWrongPassword] = useState(false);\n\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\n\n  const handleChangePassword = (e, index) => {\n    const { target } = e;\n    const { value } = target;\n    e.persist();\n\n    if (isWrongPassword) {\n      setIsWrongPassword(false);\n    }\n\n    let newPassword = [...password];\n\n    newPassword.push(value);\n\n    if (newPassword.length === 6) {\n      let authorized = (parseInt(newPassword[0]) * 10 + parseInt(newPassword[1])) + (parseInt(newPassword[2]) * 10 + parseInt(newPassword[3])) + (parseInt(newPassword[4]) * 10 + parseInt(newPassword[5])) === 150;\n\n      if (authorized) {\n        setIsAuthorized(authorized);\n      } else {\n        newPassword = [];\n        setIsWrongPassword(true)\n      }\n    }\n\n    const nextfield = document.querySelector(\n      `input[name=password-${parseInt(newPassword.length) + 1}]`\n    );\n\n    // If found, focus the next field\n    if (nextfield !== null) {\n      nextfield.focus();\n    }\n\n    setPassword(newPassword);\n  };\n\n  const handleOnFocusPassword = (e, current) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (current !== (password.length + 1)) {\n      const nextfield = document.querySelector(\n        `input[name=password-${password.length + 1}]`\n      );\n  \n      // If found, focus the next field\n      if (nextfield !== null) {\n        nextfield.focus();\n      }\n    }\n  }\n\n  const handleKeyDownPassword = (e, index) => {\n    if (e.key === 'Backspace') {\n      e.preventDefault();\n      let newPassword = [...password];\n\n      if (newPassword.length > 0) {\n        newPassword.splice(newPassword.length - 1, 1);\n      }\n      \n      const nextfield = document.querySelector(\n        `input[name=password-${newPassword.length + 1}]`\n      );\n  \n      // If found, focus the next field\n      if (nextfield !== null) {\n        nextfield.focus();\n      }\n\n      setPassword(newPassword);\n    }\n  }\n\n  return (\n    <>\n    {isAuthorized ? \n    <>\n      <div className=\"z-50 fixed flex flex-row lg:flex-col lg:max-w-min lg:min-h-screen p-3 space-x-4 lg:space-x-0 lg:space-y-4 rounded-br-md bg-white shadow lg:bg-transparent lg:shadow-none\">\n        <PhotographIcon onClick={() => setCurrentTool(\"CreationTool\")} className={`h-6 w-6 text-${currentTool === \"CreationTool\" ? \"blue-600\" : \"gray-400\"} hover:text-blue-500 cursor-pointer`} />\n        <GiftIcon onClick={() => setCurrentTool(\"BirthdayTool\")} className={`h-6 w-6 text-${currentTool === \"BirthdayTool\" ? \"blue-600\" : \"gray-400\"} hover:text-blue-500 cursor-pointer`} />\n        <DatabaseIcon onClick={() => setCurrentTool(\"DataSourceTool\")} className={`h-6 w-6 text-${currentTool === \"DataSourceTool\" ? \"blue-600\" : \"gray-400\"} hover:text-blue-500 cursor-pointer`} />\n        <TableIcon onClick={() => setCurrentTool(\"VisualQueryBuilderTool\")} className={`h-6 w-6 text-${currentTool === \"VisualQueryBuilderTool\" ? \"blue-600\" : \"gray-400\"} hover:text-blue-500 cursor-pointer`} />\n      </div>\n      <CreationTool isHidden={currentTool !== \"CreationTool\"} />\n      <BirthdayTool isHidden={currentTool !== \"BirthdayTool\"} />\n      <DataSourceTool isHidden={currentTool !== \"DataSourceTool\"} />\n      <VisualQueryBuilderTool isHidden={currentTool !== \"VisualQueryBuilderTool\"} />\n    </>\n    :\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-2xl w-full space-y-4\">\n        <div className=\"flex flex-col items-center justify-center\">\n          <h3 className=\"text-center text-xl font-medium text-gray-900\">Netsign.tv</h3>\n          <h2 className=\"mt-1 text-center text-3xl font-extrabold text-gray-900\">Création simplifiée</h2>\n          <p className=\"mt-3 text-center text-sm text-blue-500\">\n            Entrez le code d'accès\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center space-y-4\">\n          <div className={`flex flex-row item-center justify-center align-middle space-x-2 bg-gray-100 p-2 rounded-md ${isWrongPassword && 'shake'}`}>\n              <input\n                id=\"password-1\"\n                name=\"password-1\"\n                type=\"password\"\n                pattern=\"[0-9]*\" \n                inputMode=\"numeric\"\n                onChange={event => handleChangePassword(event, 0)}\n                value={password[0] ? password[0] : ''}\n                autoFocus={!isMobile}\n                onClick={event => handleOnFocusPassword(event, 1)}\n                onKeyDown={event => handleKeyDownPassword(event, 0)}\n                required\n                className=\"appearance-none rounded-none relative block text-center w-8 px-1 lg:px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                placeholder=\"\"\n              />\n              <input\n                id=\"password-2\"\n                name=\"password-2\"\n                type=\"password\"\n                pattern=\"[0-9]*\" \n                inputMode=\"numeric\"\n                onChange={event => handleChangePassword(event, 1)}\n                value={password[1] ? password[1] : ''}\n                onClick={event => handleOnFocusPassword(event, 2)}\n                onKeyDown={event => handleKeyDownPassword(event, 1)}\n                required\n                className=\"appearance-none rounded-none relative block text-center w-8 px-1 lg:px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                placeholder=\"\"\n              />\n              <input\n                id=\"password-3\"\n                name=\"password-3\"\n                type=\"password\"\n                pattern=\"[0-9]*\" \n                inputMode=\"numeric\"\n                onChange={event => handleChangePassword(event, 2)}\n                value={password[2] ? password[2] : ''}\n                onClick={event => handleOnFocusPassword(event, 3)}\n                onKeyDown={event => handleKeyDownPassword(event, 2)}\n                required\n                className=\"appearance-none rounded-none relative block text-center w-8 px-1 lg:px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                placeholder=\"\"\n              />\n              <input\n                id=\"password-4\"\n                name=\"password-4\"\n                type=\"password\"\n                pattern=\"[0-9]*\" \n                inputMode=\"numeric\"\n                onChange={event => handleChangePassword(event, 3)}\n                value={password[3] ? password[3] : ''}\n                onClick={event => handleOnFocusPassword(event, 4)}\n                onKeyDown={event => handleKeyDownPassword(event, 3)}\n                required\n                className=\"appearance-none rounded-none relative block text-center w-8 px-1 lg:px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                placeholder=\"\"\n              />\n              <input\n                id=\"password-5\"\n                name=\"password-5\"\n                type=\"password\"\n                pattern=\"[0-9]*\" \n                inputMode=\"numeric\"\n                onChange={event => handleChangePassword(event, 4)}\n                value={password[4] ? password[4] : ''}\n                onClick={event => handleOnFocusPassword(event, 5)}\n                onKeyDown={event => handleKeyDownPassword(event, 4)}\n                required\n                className=\"appearance-none rounded-none relative block text-center w-8 px-1 lg:px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                placeholder=\"\"\n              />\n              <input\n                id=\"password-6\"\n                name=\"password-6\"\n                type=\"password\"\n                pattern=\"[0-9]*\" \n                inputMode=\"numeric\"\n                onChange={event => handleChangePassword(event, 5)}\n                value={password[5] ? password[5] : ''}\n                onClick={event => handleOnFocusPassword(event, 6)}\n                onKeyDown={event => handleKeyDownPassword(event, 5)}\n                required\n                className=\"appearance-none rounded-none relative block text-center w-8 px-1 lg:px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                placeholder=\"\"\n              />\n          </div>\n          <div className=\"flex flex-col items-center justify-center\">\n            <p className=\"text-center text-xs text-gray-300\">\n              v 1.5.0\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n    }\n    {/* <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-2xl w-full space-y-8\"> */}\n        \n        {/* ÉTAPE 1 */}\n        {/* <div>\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Que voulez vous créer ?</h2>\n        </div>\n        <div className=\"flex flex-row item-center justify-center space-x-6\">\n          <div className=\"rounded-md py-4 px-6 shadow w-48 align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600\">\n            <p className=\"font-medium text-white text-center align-middle\">\n              Vignette\n            </p>\n          </div>\n\n          <div className=\"rounded-md py-4 px-6 shadow w-48 align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600\">\n            <p className=\"font-medium text-white text-center\">\n              Liste de lecture\n            </p>\n          </div>\n        </div> */}\n\n        {/* ÉTAPE 2 */}\n\n        {/* VIGNETTE */}\n        {/* <div className=\"flex flex-col items-center justify-center\">\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Contenu de la vignette</h2>\n          <p className=\"mt-2 text-center text-sm text-indigo-500\">\n            Ajoutez un titre, des textes, images, etc\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center space-y-4\">\n          <div className=\"flex flex-row item-center justify-center align-middle space-x-2 bg-gray-100 p-2 rounded-md\">\n            <div className=\"self-center font-medium text-center text-lg text-gray-500 mx-1\">\n              Titre\n            </div>\n            <div>\n              <label htmlFor=\"prenom\" className=\"sr-only\">\n                Titre\n              </label>\n              <input\n                id=\"prenom\"\n                name=\"prenom\"\n                type=\"text\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"\"\n              />\n            </div>\n          </div>\n          <div className=\"rounded-full font-medium text-center text-2xl text-white shadow align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500 h-8 w-8 flex items-center justify-center\">\n              +\n          </div>\n        </div> */}\n\n        {/* LISTE DE LECTURE */}\n        {/* <div className=\"flex flex-col items-center justify-center\">\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Contenu de la liste de lecture</h2>\n          <p className=\"mt-2 text-center text-sm text-indigo-500 w-1/2\">\n            Choisissez un format de contenu prédéfini ou créez en un adapter à vos besoins\n          </p>\n        </div>\n        <div className=\"flex flex-row item-center justify-center space-x-6 \">\n          <div className=\"rounded-md py-4 px-6 shadow w-48 align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500\">\n            <p className=\"font-medium text-white text-center align-middle\">\n              Anniversaires\n            </p>\n          </div>\n\n          <div className=\"rounded-md py-4 px-6 text-gray-400 hover:text-indigo-500 border-dashed border-gray-400 hover:border-indigo-500 border-2 shadow w-48 align-middle cursor-pointer\">\n            <p className=\"font-medium text-center\">\n              Créer +\n            </p>\n          </div>\n        </div> */}\n\n        {/* ANNIVERSAIRES */}\n        {/* <div className=\"flex flex-col items-center justify-center\">\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Anniversaires à souligner</h2>\n          <p className=\"mt-2 text-center text-sm text-indigo-500 w-1/2 align-middle\">\n            Ajoutez les anniversaires que vous souhaitez souligner chaque année\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center space-y-4\">\n          <div className=\"flex flex-row item-center justify-center align-middle space-x-2 bg-gray-100 p-2 rounded-md\">\n            <div className=\"self-center font-medium text-center text-lg text-gray-500 mx-1\">\n                1\n            </div>\n            <div>\n              <label htmlFor=\"prenom\" className=\"sr-only\">\n                Prénom\n              </label>\n              <input\n                id=\"prenom\"\n                name=\"prenom\"\n                type=\"text\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Prénom\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"nom\" className=\"sr-only\">\n                Nom\n              </label>\n              <input\n                id=\"nom\"\n                name=\"nom\"\n                type=\"text\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Nom\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"dateNaissance\" className=\"sr-only\">\n                Date de naissance\n              </label>\n              <input\n                id=\"dateNaissance\"\n                name=\"dateNaissance\"\n                type=\"date\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-500 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Date de naissance\"\n              />\n            </div>\n          </div>\n          <div className=\"rounded-full font-medium text-center text-2xl text-white shadow align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500 h-8 w-8 flex items-center justify-center\">\n              +\n          </div>\n        </div> */}\n\n        {/* <div className=\"flex flex-col items-center justify-center\">\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">Que voulez-vous annoncer ?</h2>\n          <p className=\"mt-2 text-center text-sm text-indigo-500 w-1/2 align-middle\">\n            Écrivez le texte qui s'affichera dans la vignette\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center space-y-4 w-full\">\n          <div className=\"flex flex-row item-center justify-center align-middle space-x-2 bg-gray-100 p-2 rounded-md w-full\">\n            <div className=\"w-full\">\n              <label htmlFor=\"texte\" className=\"sr-only\">\n                Texte\n              </label>\n              <textarea\n                id=\"texte\"\n                name=\"texte\"\n                type=\"textarea\"\n                required\n                className=\"appearance-none rounded-none relative block w-full min-h-28 max-h-28 px-3 py-2 border border-gray-300 placeholder-gray-300 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Texte\"\n              />\n            </div>\n          </div>\n          <div className=\"rounded-md font-medium py-1 px-3 text-center text-sm text-white shadow align-middle bg-indigo-600 hover:bg-indigo-500 cursor-pointer border-2 border-indigo-600 hover:border-indigo-500 flex items-center justify-center\">\n              Créer la vignette!\n          </div>\n        </div> */}\n        \n        {/* <form className=\"flex flex-row mt-8 space-x-4\" action=\"#\" method=\"POST\">\n          <div>\n            <label htmlFor=\"prenom\" className=\"sr-only\">\n              Prénom\n            </label>\n            <input\n              id=\"prenom\"\n              name=\"prenom\"\n              type=\"prenom\"\n              required\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n              placeholder=\"Prénom\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"nom\" className=\"sr-only\">\n              Nom\n            </label>\n            <input\n              id=\"nom\"\n              name=\"nom\"\n              type=\"nom\"\n              required\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n              placeholder=\"Nom\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"dateNaissance\" className=\"sr-only\">\n              Date de naissance\n            </label>\n            <input\n              id=\"dateNaissance\"\n              name=\"dateNaissance\"\n              type=\"date\"\n              required\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-500 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n              placeholder=\"Date de naissance\"\n            />\n          </div>\n          \n\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember-me\"\n                name=\"remember-me\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n              />\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                Remember\n              </label>\n            </div>\n          </div>\n        </form> */}\n      {/* </div>\n    </div> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}